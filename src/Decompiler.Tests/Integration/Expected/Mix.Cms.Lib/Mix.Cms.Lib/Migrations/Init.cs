using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Metadata.Builders;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Migrations.Operations;
using Microsoft.EntityFrameworkCore.Migrations.Operations.Builders;
using Mix.Cms.Lib.Models.Cms;
using System;
using System.Collections.Generic;
using System.Linq.Expressions;
using System.Reflection;
using System.Runtime.CompilerServices;

namespace Mix.Cms.Lib.Migrations
{
	[DbContext(typeof(MixCmsContext))]
	[Migration("20200516033802_Init")]
	public class Init : Migration
	{
		public Init()
		{
		}

		protected override void BuildTargetModel(ModelBuilder modelBuilder)
		{
			modelBuilder.HasAnnotation("ProductVersion", "3.1.3").HasAnnotation("Relational:MaxIdentifierLength", 128).HasAnnotation("SqlServer:ValueGenerationStrategy", (SqlServerValueGenerationStrategy)2);
			modelBuilder.Entity("Mix.Cms.Lib.Models.Cms.MixAttributeField", (EntityTypeBuilder b) => {
				RelationalPropertyBuilderExtensions.HasColumnType<int>(b.Property<int>("Id"), "int");
				RelationalPropertyBuilderExtensions.HasColumnType<int>(b.Property<int>("AttributeSetId"), "int");
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("AttributeSetName"), "nvarchar(250)").HasMaxLength(250);
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("CreatedBy"), "varchar(50)").HasMaxLength(50).IsUnicode(false);
				RelationalPropertyBuilderExtensions.HasColumnType<DateTime>(b.Property<DateTime>("CreatedDateTime"), "datetime");
				RelationalPropertyBuilderExtensions.HasColumnType<int>(b.Property<int>("DataType"), "int");
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("DefaultValue"), "text");
				RelationalPropertyBuilderExtensions.HasColumnType<bool>(b.Property<bool>("IsEncrypt"), "bit");
				RelationalPropertyBuilderExtensions.HasColumnType<bool>(b.Property<bool>("IsMultiple"), "bit");
				RelationalPropertyBuilderExtensions.HasColumnType<bool>(b.Property<bool>("IsRequire"), "bit");
				RelationalPropertyBuilderExtensions.HasColumnType<bool>(b.Property<bool>("IsSelect"), "bit");
				RelationalPropertyBuilderExtensions.HasColumnType<bool>(b.Property<bool>("IsUnique"), "bit");
				RelationalPropertyBuilderExtensions.HasColumnType<DateTime?>(b.Property<DateTime?>("LastModified"), "datetime");
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("ModifiedBy"), "varchar(50)").HasMaxLength(50).IsUnicode(false);
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("Name").IsRequired(true), "nvarchar(250)").HasMaxLength(250);
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("Options"), "text");
				RelationalPropertyBuilderExtensions.HasColumnType<int>(b.Property<int>("Priority"), "int");
				RelationalPropertyBuilderExtensions.HasColumnType<int?>(b.Property<int?>("ReferenceId"), "int");
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("Regex"), "nvarchar(250)").HasMaxLength(250);
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("Status").IsRequired(true), "varchar(50)").HasMaxLength(50).IsUnicode(false);
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("Title"), "nvarchar(250)").HasMaxLength(250);
				b.HasKey(new string[] { "Id" });
				b.HasIndex(new string[] { "AttributeSetId" });
				b.HasIndex(new string[] { "ReferenceId" });
				RelationalEntityTypeBuilderExtensions.ToTable(b, "mix_attribute_field");
			});
			modelBuilder.Entity("Mix.Cms.Lib.Models.Cms.MixAttributeSet", (EntityTypeBuilder b) => {
				RelationalPropertyBuilderExtensions.HasColumnType<int>(b.Property<int>("Id"), "int");
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("CreatedBy"), "varchar(50)").HasMaxLength(50).IsUnicode(false);
				RelationalPropertyBuilderExtensions.HasColumnType<DateTime>(b.Property<DateTime>("CreatedDateTime"), "datetime");
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("Description"), "nvarchar(250)").HasMaxLength(250);
				RelationalPropertyBuilderExtensions.HasColumnType<bool?>(b.Property<bool?>("EdmAutoSend"), "bit");
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("EdmFrom"), "nvarchar(250)").HasMaxLength(250);
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("EdmSubject"), "nvarchar(250)").HasMaxLength(250);
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("EdmTemplate"), "nvarchar(250)").HasMaxLength(250);
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("FormTemplate"), "nvarchar(250)").HasMaxLength(250);
				RelationalPropertyBuilderExtensions.HasColumnType<DateTime?>(b.Property<DateTime?>("LastModified"), "datetime");
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("ModifiedBy"), "varchar(50)").HasMaxLength(50).IsUnicode(false);
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("Name").IsRequired(true), "nvarchar(250)").HasMaxLength(250);
				RelationalPropertyBuilderExtensions.HasColumnType<int>(b.Property<int>("Priority"), "int");
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("Status").IsRequired(true), "varchar(50)").HasMaxLength(50).IsUnicode(false);
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("Title").IsRequired(true), "nvarchar(250)").HasMaxLength(250);
				RelationalPropertyBuilderExtensions.HasColumnType<int>(b.Property<int>("Type"), "int");
				b.HasKey(new string[] { "Id" });
				RelationalEntityTypeBuilderExtensions.ToTable(b, "mix_attribute_set");
			});
			modelBuilder.Entity("Mix.Cms.Lib.Models.Cms.MixAttributeSetData", (EntityTypeBuilder b) => {
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("Id"), "nvarchar(50)").HasMaxLength(50);
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("Specificulture"), "nvarchar(10)").HasMaxLength(10);
				RelationalPropertyBuilderExtensions.HasColumnType<int>(b.Property<int>("AttributeSetId"), "int");
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("AttributeSetName"), "nvarchar(250)").HasMaxLength(250);
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("CreatedBy"), "varchar(50)").HasMaxLength(50).IsUnicode(false);
				RelationalPropertyBuilderExtensions.HasColumnType<DateTime>(b.Property<DateTime>("CreatedDateTime"), "datetime");
				RelationalPropertyBuilderExtensions.HasColumnType<DateTime?>(b.Property<DateTime?>("LastModified"), "datetime");
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("ModifiedBy"), "varchar(50)").HasMaxLength(50).IsUnicode(false);
				RelationalPropertyBuilderExtensions.HasColumnType<int>(b.Property<int>("Priority"), "int");
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("Status").IsRequired(true), "varchar(50)").HasMaxLength(50).IsUnicode(false);
				b.HasKey(new string[] { "Id", "Specificulture" });
				b.HasIndex(new string[] { "AttributeSetId" });
				RelationalEntityTypeBuilderExtensions.ToTable(b, "mix_attribute_set_data");
			});
			modelBuilder.Entity("Mix.Cms.Lib.Models.Cms.MixAttributeSetReference", (EntityTypeBuilder b) => {
				RelationalPropertyBuilderExtensions.HasColumnType<int>(b.Property<int>("Id"), "int");
				RelationalPropertyBuilderExtensions.HasColumnType<int>(b.Property<int>("AttributeSetId"), "int");
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("CreatedBy"), "varchar(50)").HasMaxLength(50).IsUnicode(false);
				RelationalPropertyBuilderExtensions.HasColumnType<DateTime>(b.Property<DateTime>("CreatedDateTime"), "datetime");
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("Description"), "nvarchar(450)").HasMaxLength(0x1c2);
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("Image"), "nvarchar(450)").HasMaxLength(0x1c2);
				RelationalPropertyBuilderExtensions.HasColumnType<DateTime?>(b.Property<DateTime?>("LastModified"), "datetime");
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("ModifiedBy"), "varchar(50)").HasMaxLength(50).IsUnicode(false);
				RelationalPropertyBuilderExtensions.HasColumnType<int>(b.Property<int>("ParentId"), "int");
				RelationalPropertyBuilderExtensions.HasColumnType<int>(b.Property<int>("ParentType"), "int");
				RelationalPropertyBuilderExtensions.HasColumnType<int>(b.Property<int>("Priority"), "int");
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("Status").IsRequired(true), "varchar(50)").HasMaxLength(50).IsUnicode(false);
				b.HasKey(new string[] { "Id" });
				b.HasIndex(new string[] { "AttributeSetId" });
				RelationalEntityTypeBuilderExtensions.ToTable(b, "mix_attribute_set_reference");
			});
			modelBuilder.Entity("Mix.Cms.Lib.Models.Cms.MixAttributeSetValue", (EntityTypeBuilder b) => {
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("Id"), "nvarchar(50)").HasMaxLength(50);
				RelationalPropertyBuilderExtensions.HasColumnType<int>(b.Property<int>("AttributeFieldId"), "int");
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("AttributeFieldName").IsRequired(true), "nvarchar(50)").HasMaxLength(50);
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("AttributeSetName"), "nvarchar(250)").HasMaxLength(250);
				RelationalPropertyBuilderExtensions.HasColumnType<bool?>(b.Property<bool?>("BooleanValue"), "bit");
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("CreatedBy"), "varchar(50)").HasMaxLength(50).IsUnicode(false);
				RelationalPropertyBuilderExtensions.HasColumnType<DateTime>(b.Property<DateTime>("CreatedDateTime"), "datetime");
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("DataId").IsRequired(true), "nvarchar(50)").HasMaxLength(50);
				RelationalPropertyBuilderExtensions.HasColumnType<int>(b.Property<int>("DataType"), "int");
				RelationalPropertyBuilderExtensions.HasColumnType<DateTime?>(b.Property<DateTime?>("DateTimeValue"), "datetime");
				RelationalPropertyBuilderExtensions.HasColumnType<double?>(b.Property<double?>("DoubleValue"), "float");
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("EncryptKey"), "nvarchar(50)").HasMaxLength(50);
				RelationalPropertyBuilderExtensions.HasColumnType<int>(b.Property<int>("EncryptType"), "int");
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("EncryptValue"), "nvarchar(4000)").HasMaxLength(0xfa0);
				RelationalPropertyBuilderExtensions.HasColumnType<int?>(b.Property<int?>("IntegerValue"), "int");
				RelationalPropertyBuilderExtensions.HasColumnType<DateTime?>(b.Property<DateTime?>("LastModified"), "datetime");
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("ModifiedBy"), "varchar(50)").HasMaxLength(50).IsUnicode(false);
				RelationalPropertyBuilderExtensions.HasColumnType<int>(b.Property<int>("Priority"), "int");
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("Regex"), "nvarchar(250)").HasMaxLength(250);
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("Specificulture").IsRequired(true), "nvarchar(10)").HasMaxLength(10);
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("Status").IsRequired(true), "varchar(50)").HasMaxLength(50).IsUnicode(false);
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("StringValue"), "nvarchar(4000)").HasMaxLength(0xfa0);
				b.HasKey(new string[] { "Id" });
				b.HasIndex(new string[] { "DataId" });
				RelationalEntityTypeBuilderExtensions.ToTable(b, "mix_attribute_set_value");
			});
			modelBuilder.Entity("Mix.Cms.Lib.Models.Cms.MixCache", (EntityTypeBuilder b) => {
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("Id"), "nvarchar(50)").HasMaxLength(50);
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("CreatedBy"), "varchar(50)").HasMaxLength(50).IsUnicode(false);
				RelationalPropertyBuilderExtensions.HasColumnType<DateTime>(b.Property<DateTime>("CreatedDateTime"), "datetime");
				RelationalPropertyBuilderExtensions.HasColumnType<DateTime?>(b.Property<DateTime?>("ExpiredDateTime"), "datetime");
				RelationalPropertyBuilderExtensions.HasColumnType<DateTime?>(b.Property<DateTime?>("LastModified"), "datetime");
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("ModifiedBy"), "varchar(50)").HasMaxLength(50).IsUnicode(false);
				RelationalPropertyBuilderExtensions.HasColumnType<int>(b.Property<int>("Priority"), "int");
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("Status").IsRequired(true), "varchar(50)").HasMaxLength(50).IsUnicode(false);
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("Value").IsRequired(true), "nvarchar(4000)").HasMaxLength(0xfa0);
				b.HasKey(new string[] { "Id" });
				RelationalIndexBuilderExtensions.HasName(b.HasIndex(new string[] { "ExpiredDateTime" }), "Index_ExpiresAtTime");
				RelationalEntityTypeBuilderExtensions.ToTable(b, "mix_cache");
			});
			modelBuilder.Entity("Mix.Cms.Lib.Models.Cms.MixCmsUser", (EntityTypeBuilder b) => {
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("Id"), "nvarchar(50)").HasMaxLength(50);
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("Address"), "nvarchar(250)").HasMaxLength(250);
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("Avatar"), "nvarchar(250)").HasMaxLength(250);
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("CreatedBy"), "varchar(50)").HasMaxLength(50).IsUnicode(false);
				RelationalPropertyBuilderExtensions.HasColumnType<DateTime>(b.Property<DateTime>("CreatedDateTime"), "datetime");
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("Email"), "nvarchar(250)").HasMaxLength(250);
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("FirstName"), "nvarchar(50)").HasMaxLength(50);
				RelationalPropertyBuilderExtensions.HasColumnType<DateTime?>(b.Property<DateTime?>("LastModified"), "datetime");
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("LastName"), "nvarchar(50)").HasMaxLength(50);
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("MiddleName"), "nvarchar(50)").HasMaxLength(50);
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("ModifiedBy"), "varchar(50)").HasMaxLength(50).IsUnicode(false);
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("PhoneNumber"), "nvarchar(50)").HasMaxLength(50);
				RelationalPropertyBuilderExtensions.HasColumnType<int>(b.Property<int>("Priority"), "int");
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("Status").IsRequired(true), "varchar(50)").HasMaxLength(50).IsUnicode(false);
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("Username"), "nvarchar(250)").HasMaxLength(250);
				b.HasKey(new string[] { "Id" });
				RelationalEntityTypeBuilderExtensions.ToTable(b, "mix_cms_user");
			});
			modelBuilder.Entity("Mix.Cms.Lib.Models.Cms.MixConfiguration", (EntityTypeBuilder b) => {
				RelationalPropertyBuilderExtensions.HasColumnType<int>(b.Property<int>("Id"), "int");
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("Specificulture"), "nvarchar(10)").HasMaxLength(10);
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("Category"), "nvarchar(250)").HasMaxLength(250);
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("CreatedBy"), "varchar(50)").HasMaxLength(50).IsUnicode(false);
				RelationalPropertyBuilderExtensions.HasColumnType<DateTime>(b.Property<DateTime>("CreatedDateTime"), "datetime");
				RelationalPropertyBuilderExtensions.HasColumnType<int>(b.Property<int>("DataType"), "int");
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("Description"), "nvarchar(250)").HasMaxLength(250);
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("Keyword").IsRequired(true), "nvarchar(50)").HasMaxLength(50);
				RelationalPropertyBuilderExtensions.HasColumnType<DateTime?>(b.Property<DateTime?>("LastModified"), "datetime");
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("ModifiedBy"), "varchar(50)").HasMaxLength(50).IsUnicode(false);
				RelationalPropertyBuilderExtensions.HasColumnType<int>(b.Property<int>("Priority"), "int");
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("Status").IsRequired(true), "varchar(50)").HasMaxLength(50).IsUnicode(false);
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("Value"), "nvarchar(4000)").HasMaxLength(0xfa0);
				RelationalKeyBuilderExtensions.HasName(b.HasKey(new string[] { "Id", "Specificulture" }), "PK_mix_configuration_1");
				b.HasIndex(new string[] { "Specificulture" });
				RelationalEntityTypeBuilderExtensions.ToTable(b, "mix_configuration");
			});
			modelBuilder.Entity("Mix.Cms.Lib.Models.Cms.MixCulture", (EntityTypeBuilder b) => {
				RelationalPropertyBuilderExtensions.HasColumnType<int>(b.Property<int>("Id"), "int");
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("Alias"), "nvarchar(150)").HasMaxLength(150);
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("CreatedBy"), "varchar(50)").HasMaxLength(50).IsUnicode(false);
				RelationalPropertyBuilderExtensions.HasColumnType<DateTime>(b.Property<DateTime>("CreatedDateTime"), "datetime");
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("Description"), "nvarchar(250)").HasMaxLength(250);
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("FullName"), "nvarchar(150)").HasMaxLength(150);
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("Icon"), "nvarchar(50)").HasMaxLength(50);
				RelationalPropertyBuilderExtensions.HasColumnType<DateTime?>(b.Property<DateTime?>("LastModified"), "datetime");
				RelationalPropertyBuilderExtensions.HasColumnType<string>(RelationalPropertyBuilderExtensions.HasColumnName<string>(b.Property<string>("Lcid"), "LCID"), "nvarchar(50)").HasMaxLength(50);
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("ModifiedBy"), "varchar(50)").HasMaxLength(50).IsUnicode(false);
				RelationalPropertyBuilderExtensions.HasColumnType<int>(b.Property<int>("Priority"), "int");
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("Specificulture").IsRequired(true), "nvarchar(10)").HasMaxLength(10);
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("Status").IsRequired(true), "varchar(50)").HasMaxLength(50).IsUnicode(false);
				b.HasKey(new string[] { "Id" });
				RelationalIndexBuilderExtensions.HasName(b.HasIndex(new string[] { "Specificulture" }).IsUnique(true), "IX_Mix_Culture");
				RelationalEntityTypeBuilderExtensions.ToTable(b, "mix_culture");
			});
			modelBuilder.Entity("Mix.Cms.Lib.Models.Cms.MixFile", (EntityTypeBuilder b) => {
				RelationalPropertyBuilderExtensions.HasColumnType<int>(b.Property<int>("Id").ValueGeneratedOnAdd(), "int").HasAnnotation("SqlServer:ValueGenerationStrategy", (SqlServerValueGenerationStrategy)2);
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("CreatedBy"), "varchar(50)").HasMaxLength(50).IsUnicode(false);
				RelationalPropertyBuilderExtensions.HasColumnType<DateTime>(b.Property<DateTime>("CreatedDateTime"), "datetime");
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("Extension").IsRequired(true), "nvarchar(50)").HasMaxLength(50);
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("FileFolder").IsRequired(true), "nvarchar(250)").HasMaxLength(250);
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("FileName").IsRequired(true), "nvarchar(250)").HasMaxLength(250);
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("FolderType").IsRequired(true), "nvarchar(50)").HasMaxLength(50);
				RelationalPropertyBuilderExtensions.HasColumnType<DateTime?>(b.Property<DateTime?>("LastModified"), "datetime");
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("ModifiedBy"), "varchar(50)").HasMaxLength(50).IsUnicode(false);
				RelationalPropertyBuilderExtensions.HasColumnType<int>(b.Property<int>("Priority"), "int");
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("Status").IsRequired(true), "varchar(50)").HasMaxLength(50).IsUnicode(false);
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("StringContent").IsRequired(true), "nvarchar(4000)").HasMaxLength(0xfa0);
				RelationalPropertyBuilderExtensions.HasColumnType<int?>(b.Property<int?>("ThemeId"), "int");
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("ThemeName").IsRequired(true), "nvarchar(250)").HasMaxLength(250);
				b.HasKey(new string[] { "Id" });
				b.HasIndex(new string[] { "ThemeId" });
				RelationalEntityTypeBuilderExtensions.ToTable(b, "mix_file");
			});
			modelBuilder.Entity("Mix.Cms.Lib.Models.Cms.MixLanguage", (EntityTypeBuilder b) => {
				RelationalPropertyBuilderExtensions.HasColumnType<int>(b.Property<int>("Id"), "int");
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("Specificulture"), "nvarchar(10)").HasMaxLength(10);
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("Category"), "nvarchar(250)").HasMaxLength(250);
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("CreatedBy"), "varchar(50)").HasMaxLength(50).IsUnicode(false);
				RelationalPropertyBuilderExtensions.HasColumnType<DateTime>(b.Property<DateTime>("CreatedDateTime"), "datetime");
				RelationalPropertyBuilderExtensions.HasColumnType<int>(b.Property<int>("DataType"), "int");
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("DefaultValue"), "nvarchar(250)").HasMaxLength(250);
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("Description"), "nvarchar(250)").HasMaxLength(250);
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("Keyword").IsRequired(true), "nvarchar(50)").HasMaxLength(50);
				RelationalPropertyBuilderExtensions.HasColumnType<DateTime?>(b.Property<DateTime?>("LastModified"), "datetime");
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("ModifiedBy"), "varchar(50)").HasMaxLength(50).IsUnicode(false);
				RelationalPropertyBuilderExtensions.HasColumnType<int>(b.Property<int>("Priority"), "int");
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("Status").IsRequired(true), "varchar(50)").HasMaxLength(50).IsUnicode(false);
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("Value"), "nvarchar(4000)").HasMaxLength(0xfa0);
				RelationalKeyBuilderExtensions.HasName(b.HasKey(new string[] { "Id", "Specificulture" }), "PK_mix_language_1");
				b.HasIndex(new string[] { "Specificulture" });
				RelationalEntityTypeBuilderExtensions.ToTable(b, "mix_language");
			});
			modelBuilder.Entity("Mix.Cms.Lib.Models.Cms.MixMedia", (EntityTypeBuilder b) => {
				RelationalPropertyBuilderExtensions.HasColumnType<int>(b.Property<int>("Id"), "int");
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("Specificulture"), "nvarchar(10)").HasMaxLength(10);
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("CreatedBy"), "varchar(50)").HasMaxLength(50).IsUnicode(false);
				RelationalPropertyBuilderExtensions.HasColumnType<DateTime>(b.Property<DateTime>("CreatedDateTime"), "datetime");
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("Description"), "nvarchar(4000)").HasMaxLength(0xfa0);
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("Extension").IsRequired(true), "nvarchar(50)").HasMaxLength(50);
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("FileFolder").IsRequired(true), "nvarchar(250)").HasMaxLength(250);
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("FileName").IsRequired(true), "nvarchar(250)").HasMaxLength(250);
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("FileProperties"), "nvarchar(4000)").HasMaxLength(0xfa0);
				RelationalPropertyBuilderExtensions.HasColumnType<long>(b.Property<long>("FileSize"), "bigint");
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("FileType").IsRequired(true), "nvarchar(50)").HasMaxLength(50);
				RelationalPropertyBuilderExtensions.HasColumnType<DateTime?>(b.Property<DateTime?>("LastModified"), "datetime");
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("ModifiedBy"), "varchar(50)").HasMaxLength(50).IsUnicode(false);
				RelationalPropertyBuilderExtensions.HasColumnType<int>(b.Property<int>("Priority"), "int");
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("Source"), "nvarchar(250)").HasMaxLength(250);
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("Status").IsRequired(true), "varchar(50)").HasMaxLength(50).IsUnicode(false);
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("Tags"), "nvarchar(400)").HasMaxLength(0x190);
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("TargetUrl"), "nvarchar(250)").HasMaxLength(250);
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("Title"), "nvarchar(4000)").HasMaxLength(0xfa0);
				b.HasKey(new string[] { "Id", "Specificulture" });
				RelationalEntityTypeBuilderExtensions.ToTable(b, "mix_media");
			});
			modelBuilder.Entity("Mix.Cms.Lib.Models.Cms.MixModule", (EntityTypeBuilder b) => {
				RelationalPropertyBuilderExtensions.HasColumnType<int>(b.Property<int>("Id"), "int");
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("Specificulture"), "nvarchar(10)").HasMaxLength(10);
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("CreatedBy"), "varchar(50)").HasMaxLength(50).IsUnicode(false);
				RelationalPropertyBuilderExtensions.HasColumnType<DateTime>(b.Property<DateTime>("CreatedDateTime"), "datetime");
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("Description"), "nvarchar(4000)").HasMaxLength(0xfa0);
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("EdmTemplate"), "nvarchar(250)").HasMaxLength(250);
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("Fields"), "nvarchar(4000)").HasMaxLength(0xfa0);
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("FormTemplate"), "nvarchar(250)").HasMaxLength(250);
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("Image"), "nvarchar(250)").HasMaxLength(250);
				RelationalPropertyBuilderExtensions.HasColumnType<DateTime?>(b.Property<DateTime?>("LastModified"), "datetime");
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("ModifiedBy"), "varchar(50)").HasMaxLength(50).IsUnicode(false);
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("Name").IsRequired(true), "nvarchar(50)").HasMaxLength(50);
				RelationalPropertyBuilderExtensions.HasColumnType<int?>(b.Property<int?>("PageSize"), "int");
				RelationalPropertyBuilderExtensions.HasColumnType<int>(b.Property<int>("Priority"), "int");
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("Status").IsRequired(true), "varchar(50)").HasMaxLength(50).IsUnicode(false);
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("Template"), "nvarchar(250)").HasMaxLength(250);
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("Thumbnail"), "nvarchar(250)").HasMaxLength(250);
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("Title"), "nvarchar(250)").HasMaxLength(250);
				RelationalPropertyBuilderExtensions.HasColumnType<int>(b.Property<int>("Type"), "int");
				b.HasKey(new string[] { "Id", "Specificulture" });
				b.HasIndex(new string[] { "Specificulture" });
				RelationalEntityTypeBuilderExtensions.ToTable(b, "mix_module");
			});
			modelBuilder.Entity("Mix.Cms.Lib.Models.Cms.MixModuleData", (EntityTypeBuilder b) => {
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("Id"), "nvarchar(50)").HasMaxLength(50);
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("Specificulture"), "nvarchar(10)").HasMaxLength(10);
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("CreatedBy"), "varchar(50)").HasMaxLength(50).IsUnicode(false);
				RelationalPropertyBuilderExtensions.HasColumnType<DateTime>(b.Property<DateTime>("CreatedDateTime"), "datetime");
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("Fields").IsRequired(true), "nvarchar(4000)").HasMaxLength(0xfa0);
				RelationalPropertyBuilderExtensions.HasColumnType<DateTime?>(b.Property<DateTime?>("LastModified"), "datetime");
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("ModifiedBy"), "varchar(50)").HasMaxLength(50).IsUnicode(false);
				RelationalPropertyBuilderExtensions.HasColumnType<int>(b.Property<int>("ModuleId"), "int");
				RelationalPropertyBuilderExtensions.HasColumnType<int?>(b.Property<int?>("PageId"), "int");
				RelationalPropertyBuilderExtensions.HasColumnType<int?>(b.Property<int?>("PostId"), "int");
				RelationalPropertyBuilderExtensions.HasColumnType<int>(b.Property<int>("Priority"), "int");
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("Status").IsRequired(true), "varchar(50)").HasMaxLength(50).IsUnicode(false);
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("Value"), "nvarchar(4000)").HasMaxLength(0xfa0);
				b.HasKey(new string[] { "Id", "Specificulture" });
				b.HasIndex(new string[] { "ModuleId", "Specificulture" });
				b.HasIndex(new string[] { "PageId", "Specificulture" });
				b.HasIndex(new string[] { "PostId", "Specificulture" });
				b.HasIndex(new string[] { "ModuleId", "PageId", "Specificulture" });
				RelationalEntityTypeBuilderExtensions.ToTable(b, "mix_module_data");
			});
			modelBuilder.Entity("Mix.Cms.Lib.Models.Cms.MixModulePost", (EntityTypeBuilder b) => {
				RelationalPropertyBuilderExtensions.HasColumnType<int>(b.Property<int>("Id"), "int");
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("Specificulture"), "nvarchar(10)").HasMaxLength(10);
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("CreatedBy"), "varchar(50)").HasMaxLength(50).IsUnicode(false);
				RelationalPropertyBuilderExtensions.HasColumnType<DateTime>(b.Property<DateTime>("CreatedDateTime"), "datetime");
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("Description"), "nvarchar(250)").HasMaxLength(250);
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("Image"), "nvarchar(250)").HasMaxLength(250);
				RelationalPropertyBuilderExtensions.HasColumnType<DateTime?>(b.Property<DateTime?>("LastModified"), "datetime");
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("ModifiedBy"), "varchar(50)").HasMaxLength(50).IsUnicode(false);
				RelationalPropertyBuilderExtensions.HasColumnType<int>(b.Property<int>("ModuleId"), "int");
				RelationalPropertyBuilderExtensions.HasColumnType<int>(b.Property<int>("PostId"), "int");
				RelationalPropertyBuilderExtensions.HasColumnType<int>(b.Property<int>("Priority"), "int");
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("Status").IsRequired(true), "varchar(50)").HasMaxLength(50).IsUnicode(false);
				b.HasKey(new string[] { "Id", "Specificulture" });
				b.HasIndex(new string[] { "ModuleId", "Specificulture" });
				b.HasIndex(new string[] { "PostId", "Specificulture" });
				RelationalEntityTypeBuilderExtensions.ToTable(b, "mix_module_post");
			});
			modelBuilder.Entity("Mix.Cms.Lib.Models.Cms.MixPage", (EntityTypeBuilder b) => {
				RelationalPropertyBuilderExtensions.HasColumnType<int>(b.Property<int>("Id"), "int");
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("Specificulture"), "nvarchar(10)").HasMaxLength(10);
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("Content"), "text");
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("CreatedBy"), "varchar(50)").HasMaxLength(50).IsUnicode(false);
				RelationalPropertyBuilderExtensions.HasColumnType<DateTime>(b.Property<DateTime>("CreatedDateTime"), "datetime");
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("CssClass"), "nvarchar(250)").HasMaxLength(250);
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("Excerpt"), "text");
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("ExtraFields"), "text");
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("Icon"), "nvarchar(50)").HasMaxLength(50);
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("Image"), "nvarchar(250)").HasMaxLength(250);
				RelationalPropertyBuilderExtensions.HasColumnType<DateTime?>(b.Property<DateTime?>("LastModified"), "datetime");
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("Layout"), "nvarchar(50)").HasMaxLength(50);
				RelationalPropertyBuilderExtensions.HasColumnType<int?>(b.Property<int?>("Level"), "int");
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("ModifiedBy"), "varchar(50)").HasMaxLength(50).IsUnicode(false);
				RelationalPropertyBuilderExtensions.HasColumnType<int?>(b.Property<int?>("PageSize"), "int");
				RelationalPropertyBuilderExtensions.HasColumnType<int>(b.Property<int>("Priority"), "int");
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("SeoDescription"), "text");
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("SeoKeywords"), "text");
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("SeoName"), "varchar(500)").HasMaxLength(0x1f4).IsUnicode(false);
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("SeoTitle"), "varchar(250)").HasMaxLength(250).IsUnicode(false);
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("StaticUrl"), "nvarchar(250)").HasMaxLength(250);
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("Status").IsRequired(true), "varchar(50)").HasMaxLength(50).IsUnicode(false);
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("Tags"), "text");
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("Template"), "nvarchar(250)").HasMaxLength(250);
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("Title"), "text");
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("Type"), "varchar(50)").HasMaxLength(50).IsUnicode(false);
				RelationalPropertyBuilderExtensions.HasColumnType<int?>(b.Property<int?>("Views"), "int");
				b.HasKey(new string[] { "Id", "Specificulture" });
				b.HasIndex(new string[] { "Specificulture" });
				RelationalEntityTypeBuilderExtensions.ToTable(b, "mix_page");
			});
			modelBuilder.Entity("Mix.Cms.Lib.Models.Cms.MixPageModule", (EntityTypeBuilder b) => {
				RelationalPropertyBuilderExtensions.HasColumnType<int>(b.Property<int>("Id"), "int");
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("Specificulture"), "nvarchar(10)").HasMaxLength(10);
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("CreatedBy"), "varchar(50)").HasMaxLength(50).IsUnicode(false);
				RelationalPropertyBuilderExtensions.HasColumnType<DateTime>(b.Property<DateTime>("CreatedDateTime"), "datetime");
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("Description"), "nvarchar(250)").HasMaxLength(250);
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("Image"), "nvarchar(250)").HasMaxLength(250);
				RelationalPropertyBuilderExtensions.HasColumnType<DateTime?>(b.Property<DateTime?>("LastModified"), "datetime");
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("ModifiedBy"), "varchar(50)").HasMaxLength(50).IsUnicode(false);
				RelationalPropertyBuilderExtensions.HasColumnType<int>(b.Property<int>("ModuleId"), "int");
				RelationalPropertyBuilderExtensions.HasColumnType<int>(b.Property<int>("PageId"), "int");
				RelationalPropertyBuilderExtensions.HasColumnType<int>(b.Property<int>("Position"), "int");
				RelationalPropertyBuilderExtensions.HasColumnType<int>(b.Property<int>("Priority"), "int");
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("Status").IsRequired(true), "varchar(50)").HasMaxLength(50).IsUnicode(false);
				b.HasKey(new string[] { "Id", "Specificulture" });
				b.HasIndex(new string[] { "ModuleId", "Specificulture" });
				b.HasIndex(new string[] { "PageId", "Specificulture" });
				RelationalEntityTypeBuilderExtensions.ToTable(b, "mix_page_module");
			});
			modelBuilder.Entity("Mix.Cms.Lib.Models.Cms.MixPagePost", (EntityTypeBuilder b) => {
				RelationalPropertyBuilderExtensions.HasColumnType<int>(b.Property<int>("Id"), "int");
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("Specificulture"), "nvarchar(10)").HasMaxLength(10);
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("CreatedBy"), "varchar(50)").HasMaxLength(50).IsUnicode(false);
				RelationalPropertyBuilderExtensions.HasColumnType<DateTime>(b.Property<DateTime>("CreatedDateTime"), "datetime");
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("Description"), "nvarchar(250)").HasMaxLength(250);
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("Image"), "nvarchar(250)").HasMaxLength(250);
				RelationalPropertyBuilderExtensions.HasColumnType<DateTime?>(b.Property<DateTime?>("LastModified"), "datetime");
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("ModifiedBy"), "varchar(50)").HasMaxLength(50).IsUnicode(false);
				RelationalPropertyBuilderExtensions.HasColumnType<int>(b.Property<int>("PageId"), "int");
				RelationalPropertyBuilderExtensions.HasColumnType<int>(b.Property<int>("PostId"), "int");
				RelationalPropertyBuilderExtensions.HasColumnType<int>(b.Property<int>("Priority"), "int");
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("Status").IsRequired(true), "varchar(50)").HasMaxLength(50).IsUnicode(false);
				b.HasKey(new string[] { "Id", "Specificulture" });
				b.HasIndex(new string[] { "PageId", "Specificulture" });
				b.HasIndex(new string[] { "PostId", "Specificulture" });
				RelationalEntityTypeBuilderExtensions.ToTable(b, "mix_page_post");
			});
			modelBuilder.Entity("Mix.Cms.Lib.Models.Cms.MixPortalPage", (EntityTypeBuilder b) => {
				RelationalPropertyBuilderExtensions.HasColumnType<int>(b.Property<int>("Id"), "int");
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("CreatedBy"), "varchar(50)").HasMaxLength(50).IsUnicode(false);
				RelationalPropertyBuilderExtensions.HasColumnType<DateTime>(b.Property<DateTime>("CreatedDateTime"), "datetime");
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("Description"), "nvarchar(450)").HasMaxLength(0x1c2);
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("Icon"), "nvarchar(50)").HasMaxLength(50);
				RelationalPropertyBuilderExtensions.HasColumnType<DateTime?>(b.Property<DateTime?>("LastModified"), "datetime");
				RelationalPropertyBuilderExtensions.HasColumnType<int>(b.Property<int>("Level"), "int");
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("ModifiedBy"), "varchar(50)").HasMaxLength(50).IsUnicode(false);
				RelationalPropertyBuilderExtensions.HasColumnType<int>(b.Property<int>("Priority"), "int");
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("Status").IsRequired(true), "varchar(50)").HasMaxLength(50).IsUnicode(false);
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("TextDefault"), "nvarchar(250)").HasMaxLength(250);
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("TextKeyword"), "nvarchar(250)").HasMaxLength(250);
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("Url"), "nvarchar(250)").HasMaxLength(250);
				b.HasKey(new string[] { "Id" });
				RelationalEntityTypeBuilderExtensions.ToTable(b, "mix_portal_page");
			});
			modelBuilder.Entity("Mix.Cms.Lib.Models.Cms.MixPortalPageNavigation", (EntityTypeBuilder b) => {
				RelationalPropertyBuilderExtensions.HasColumnType<int>(b.Property<int>("Id"), "int");
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("CreatedBy"), "varchar(50)").HasMaxLength(50).IsUnicode(false);
				RelationalPropertyBuilderExtensions.HasColumnType<DateTime>(b.Property<DateTime>("CreatedDateTime"), "datetime");
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("Description"), "nvarchar(250)").HasMaxLength(250);
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("Image"), "nvarchar(250)").HasMaxLength(250);
				RelationalPropertyBuilderExtensions.HasColumnType<DateTime?>(b.Property<DateTime?>("LastModified"), "datetime");
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("ModifiedBy"), "varchar(50)").HasMaxLength(50).IsUnicode(false);
				RelationalPropertyBuilderExtensions.HasColumnType<int>(b.Property<int>("PageId"), "int");
				RelationalPropertyBuilderExtensions.HasColumnType<int>(b.Property<int>("ParentId"), "int");
				RelationalPropertyBuilderExtensions.HasColumnType<int>(b.Property<int>("Priority"), "int");
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("Status").IsRequired(true), "varchar(50)").HasMaxLength(50).IsUnicode(false);
				b.HasKey(new string[] { "Id" });
				b.HasIndex(new string[] { "ParentId" });
				RelationalEntityTypeBuilderExtensions.ToTable(b, "mix_portal_page_navigation");
			});
			modelBuilder.Entity("Mix.Cms.Lib.Models.Cms.MixPortalPageRole", (EntityTypeBuilder b) => {
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("RoleId"), "nvarchar(50)").HasMaxLength(50);
				RelationalPropertyBuilderExtensions.HasColumnType<int>(b.Property<int>("PageId"), "int");
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("CreatedBy"), "varchar(50)").HasMaxLength(50).IsUnicode(false);
				RelationalPropertyBuilderExtensions.HasColumnType<DateTime>(b.Property<DateTime>("CreatedDateTime"), "datetime");
				RelationalPropertyBuilderExtensions.HasColumnType<DateTime?>(b.Property<DateTime?>("LastModified"), "datetime");
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("ModifiedBy"), "varchar(50)").HasMaxLength(50).IsUnicode(false);
				RelationalPropertyBuilderExtensions.HasColumnType<int>(b.Property<int>("Priority"), "int");
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("Status").IsRequired(true), "varchar(50)").HasMaxLength(50).IsUnicode(false);
				b.HasKey(new string[] { "RoleId", "PageId" });
				b.HasIndex(new string[] { "PageId" });
				RelationalEntityTypeBuilderExtensions.ToTable(b, "mix_portal_page_role");
			});
			modelBuilder.Entity("Mix.Cms.Lib.Models.Cms.MixPost", (EntityTypeBuilder b) => {
				RelationalPropertyBuilderExtensions.HasColumnType<int>(b.Property<int>("Id"), "int");
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("Specificulture"), "nvarchar(10)").HasMaxLength(10);
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("Content"), "text");
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("CreatedBy"), "varchar(50)").HasMaxLength(50).IsUnicode(false);
				RelationalPropertyBuilderExtensions.HasColumnType<DateTime>(b.Property<DateTime>("CreatedDateTime"), "datetime");
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("Excerpt"), "text");
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("ExtraFields"), "text");
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("ExtraProperties"), "text");
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("Icon"), "text");
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("Image"), "nvarchar(250)").HasMaxLength(250);
				RelationalPropertyBuilderExtensions.HasColumnType<DateTime?>(b.Property<DateTime?>("LastModified"), "datetime");
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("ModifiedBy"), "varchar(50)").HasMaxLength(50).IsUnicode(false);
				RelationalPropertyBuilderExtensions.HasColumnType<int>(b.Property<int>("Priority"), "int");
				RelationalPropertyBuilderExtensions.HasColumnType<DateTime?>(b.Property<DateTime?>("PublishedDateTime"), "datetime");
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("SeoDescription"), "text");
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("SeoKeywords"), "text");
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("SeoName"), "varchar(500)").HasMaxLength(0x1f4).IsUnicode(false);
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("SeoTitle"), "text");
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("Source"), "nvarchar(250)").HasMaxLength(250);
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("Status").IsRequired(true), "varchar(50)").HasMaxLength(50).IsUnicode(false);
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("Tags"), "text");
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("Template"), "nvarchar(250)").HasMaxLength(250);
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("Thumbnail"), "nvarchar(250)").HasMaxLength(250);
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("Title"), "text");
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("Type"), "varchar(50)").HasMaxLength(50).IsUnicode(false);
				RelationalPropertyBuilderExtensions.HasColumnType<int?>(b.Property<int?>("Views"), "int");
				b.HasKey(new string[] { "Id", "Specificulture" });
				b.HasIndex(new string[] { "Specificulture" });
				RelationalEntityTypeBuilderExtensions.ToTable(b, "mix_post");
			});
			modelBuilder.Entity("Mix.Cms.Lib.Models.Cms.MixPostMedia", (EntityTypeBuilder b) => {
				RelationalPropertyBuilderExtensions.HasColumnType<int>(b.Property<int>("Id"), "int");
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("Specificulture"), "nvarchar(10)").HasMaxLength(10);
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("CreatedBy"), "varchar(50)").HasMaxLength(50).IsUnicode(false);
				RelationalPropertyBuilderExtensions.HasColumnType<DateTime>(b.Property<DateTime>("CreatedDateTime"), "datetime");
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("Description"), "nvarchar(250)").HasMaxLength(250);
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("Image"), "nvarchar(250)").HasMaxLength(250);
				RelationalPropertyBuilderExtensions.HasColumnType<DateTime?>(b.Property<DateTime?>("LastModified"), "datetime");
				RelationalPropertyBuilderExtensions.HasColumnType<int>(b.Property<int>("MediaId"), "int");
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("ModifiedBy"), "varchar(50)").HasMaxLength(50).IsUnicode(false);
				RelationalPropertyBuilderExtensions.HasColumnType<int>(b.Property<int>("Position"), "int");
				RelationalPropertyBuilderExtensions.HasColumnType<int>(b.Property<int>("PostId"), "int");
				RelationalPropertyBuilderExtensions.HasColumnType<int>(b.Property<int>("Priority"), "int");
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("Status").IsRequired(true), "varchar(50)").HasMaxLength(50).IsUnicode(false);
				b.HasKey(new string[] { "Id", "Specificulture" });
				b.HasIndex(new string[] { "MediaId", "Specificulture" });
				b.HasIndex(new string[] { "PostId", "Specificulture" });
				RelationalEntityTypeBuilderExtensions.ToTable(b, "mix_post_media");
			});
			modelBuilder.Entity("Mix.Cms.Lib.Models.Cms.MixPostModule", (EntityTypeBuilder b) => {
				RelationalPropertyBuilderExtensions.HasColumnType<int>(b.Property<int>("Id"), "int");
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("Specificulture"), "nvarchar(10)").HasMaxLength(10);
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("CreatedBy"), "varchar(50)").HasMaxLength(50).IsUnicode(false);
				RelationalPropertyBuilderExtensions.HasColumnType<DateTime>(b.Property<DateTime>("CreatedDateTime"), "datetime");
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("Description"), "nvarchar(250)").HasMaxLength(250);
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("Image"), "nvarchar(250)").HasMaxLength(250);
				RelationalPropertyBuilderExtensions.HasColumnType<DateTime?>(b.Property<DateTime?>("LastModified"), "datetime");
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("ModifiedBy"), "varchar(50)").HasMaxLength(50).IsUnicode(false);
				RelationalPropertyBuilderExtensions.HasColumnType<int>(b.Property<int>("ModuleId"), "int");
				RelationalPropertyBuilderExtensions.HasColumnType<int>(b.Property<int>("Position"), "int");
				RelationalPropertyBuilderExtensions.HasColumnType<int>(b.Property<int>("PostId"), "int");
				RelationalPropertyBuilderExtensions.HasColumnType<int>(b.Property<int>("Priority"), "int");
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("Status").IsRequired(true), "varchar(50)").HasMaxLength(50).IsUnicode(false);
				b.HasKey(new string[] { "Id", "Specificulture" });
				b.HasIndex(new string[] { "ModuleId", "Specificulture" });
				b.HasIndex(new string[] { "PostId", "Specificulture" });
				RelationalEntityTypeBuilderExtensions.ToTable(b, "mix_post_module");
			});
			modelBuilder.Entity("Mix.Cms.Lib.Models.Cms.MixRelatedAttributeData", (EntityTypeBuilder b) => {
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("Id"), "nvarchar(50)").HasMaxLength(50);
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("Specificulture"), "nvarchar(10)").HasMaxLength(10);
				RelationalPropertyBuilderExtensions.HasColumnType<int>(b.Property<int>("AttributeSetId"), "int");
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("AttributeSetName"), "nvarchar(250)").HasMaxLength(250);
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("CreatedBy"), "varchar(50)").HasMaxLength(50).IsUnicode(false);
				RelationalPropertyBuilderExtensions.HasColumnType<DateTime>(b.Property<DateTime>("CreatedDateTime"), "datetime");
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("DataId").IsRequired(true), "nvarchar(50)").HasMaxLength(50);
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("Description"), "nvarchar(450)").HasMaxLength(0x1c2);
				RelationalPropertyBuilderExtensions.HasColumnType<DateTime?>(b.Property<DateTime?>("LastModified"), "datetime");
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("ModifiedBy"), "varchar(50)").HasMaxLength(50).IsUnicode(false);
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("ParentId").IsRequired(true), "nvarchar(50)").HasMaxLength(50);
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("ParentType").IsRequired(true), "varchar(50)").HasMaxLength(50).IsUnicode(false);
				RelationalPropertyBuilderExtensions.HasColumnType<int>(b.Property<int>("Priority"), "int");
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("Status").IsRequired(true), "varchar(50)").HasMaxLength(50).IsUnicode(false);
				RelationalKeyBuilderExtensions.HasName(b.HasKey(new string[] { "Id", "Specificulture" }), "PK_mix_related_attribute_data_1");
				RelationalEntityTypeBuilderExtensions.ToTable(b, "mix_related_attribute_data");
			});
			modelBuilder.Entity("Mix.Cms.Lib.Models.Cms.MixRelatedAttributeSet", (EntityTypeBuilder b) => {
				RelationalPropertyBuilderExtensions.HasColumnType<int>(b.Property<int>("Id"), "int");
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("Specificulture"), "nvarchar(10)").HasMaxLength(10);
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("CreatedBy"), "varchar(50)").HasMaxLength(50).IsUnicode(false);
				RelationalPropertyBuilderExtensions.HasColumnType<DateTime>(b.Property<DateTime>("CreatedDateTime"), "datetime");
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("Description"), "nvarchar(450)").HasMaxLength(0x1c2);
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("Image"), "nvarchar(450)").HasMaxLength(0x1c2);
				RelationalPropertyBuilderExtensions.HasColumnType<DateTime?>(b.Property<DateTime?>("LastModified"), "datetime");
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("ModifiedBy"), "varchar(50)").HasMaxLength(50).IsUnicode(false);
				RelationalPropertyBuilderExtensions.HasColumnType<int>(b.Property<int>("ParentId"), "int");
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("ParentType").IsRequired(true), "varchar(50)").HasMaxLength(50).IsUnicode(false);
				RelationalPropertyBuilderExtensions.HasColumnType<int>(b.Property<int>("Priority"), "int");
				RelationalPropertyBuilderExtensions.HasColumnType<int>(b.Property<int>("SetId"), "int");
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("Status").IsRequired(true), "varchar(50)").HasMaxLength(50).IsUnicode(false);
				b.HasKey(new string[] { "Id", "Specificulture" });
				RelationalEntityTypeBuilderExtensions.ToTable(b, "mix_related_attribute_set");
			});
			modelBuilder.Entity("Mix.Cms.Lib.Models.Cms.MixRelatedData", (EntityTypeBuilder b) => {
				RelationalPropertyBuilderExtensions.HasColumnType<int>(b.Property<int>("Id"), "int");
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("Specificulture"), "nvarchar(10)").HasMaxLength(10);
				RelationalPropertyBuilderExtensions.HasColumnType<int>(b.Property<int>("AttributeSetId"), "int");
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("AttributeSetName"), "nvarchar(250)").HasMaxLength(250);
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("CreatedBy"), "varchar(50)").HasMaxLength(50).IsUnicode(false);
				RelationalPropertyBuilderExtensions.HasColumnType<DateTime>(b.Property<DateTime>("CreatedDateTime"), "datetime");
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("DataId").IsRequired(true), "nvarchar(50)").HasMaxLength(50);
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("Description"), "nvarchar(450)").HasMaxLength(0x1c2);
				RelationalPropertyBuilderExtensions.HasColumnType<DateTime?>(b.Property<DateTime?>("LastModified"), "datetime");
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("ModifiedBy"), "varchar(50)").HasMaxLength(50).IsUnicode(false);
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("ParentId").IsRequired(true), "nvarchar(50)").HasMaxLength(50);
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("ParentType").IsRequired(true), "varchar(50)").HasMaxLength(50).IsUnicode(false);
				RelationalPropertyBuilderExtensions.HasColumnType<int>(b.Property<int>("Priority"), "int");
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("Status").IsRequired(true), "varchar(50)").HasMaxLength(50).IsUnicode(false);
				RelationalPropertyBuilderExtensions.HasColumnType<int>(b.Property<int>("Type"), "int");
				b.HasKey(new string[] { "Id", "Specificulture" });
				RelationalEntityTypeBuilderExtensions.ToTable(b, "mix_related_data");
			});
			modelBuilder.Entity("Mix.Cms.Lib.Models.Cms.MixRelatedPost", (EntityTypeBuilder b) => {
				RelationalPropertyBuilderExtensions.HasColumnType<int>(b.Property<int>("Id"), "int");
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("Specificulture"), "nvarchar(10)").HasMaxLength(10);
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("CreatedBy"), "varchar(50)").HasMaxLength(50).IsUnicode(false);
				RelationalPropertyBuilderExtensions.HasColumnType<DateTime>(b.Property<DateTime>("CreatedDateTime"), "datetime");
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("Description"), "nvarchar(450)").HasMaxLength(0x1c2);
				RelationalPropertyBuilderExtensions.HasColumnType<int>(b.Property<int>("DestinationId"), "int");
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("Image"), "nvarchar(450)").HasMaxLength(0x1c2);
				RelationalPropertyBuilderExtensions.HasColumnType<DateTime?>(b.Property<DateTime?>("LastModified"), "datetime");
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("ModifiedBy"), "varchar(50)").HasMaxLength(50).IsUnicode(false);
				RelationalPropertyBuilderExtensions.HasColumnType<int>(b.Property<int>("Priority"), "int");
				RelationalPropertyBuilderExtensions.HasColumnType<int>(b.Property<int>("SourceId"), "int");
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("Status").IsRequired(true), "varchar(50)").HasMaxLength(50).IsUnicode(false);
				b.HasKey(new string[] { "Id", "Specificulture" });
				b.HasIndex(new string[] { "DestinationId", "Specificulture" });
				b.HasIndex(new string[] { "SourceId", "Specificulture" });
				RelationalEntityTypeBuilderExtensions.ToTable(b, "mix_related_post");
			});
			modelBuilder.Entity("Mix.Cms.Lib.Models.Cms.MixTemplate", (EntityTypeBuilder b) => {
				RelationalPropertyBuilderExtensions.HasColumnType<int>(b.Property<int>("Id"), "int");
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("Content").IsRequired(true), "text");
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("CreatedBy"), "varchar(50)").HasMaxLength(50).IsUnicode(false);
				RelationalPropertyBuilderExtensions.HasColumnType<DateTime>(b.Property<DateTime>("CreatedDateTime"), "datetime");
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("Extension").IsRequired(true), "nvarchar(50)").HasMaxLength(50);
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("FileFolder").IsRequired(true), "nvarchar(250)").HasMaxLength(250);
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("FileName").IsRequired(true), "nvarchar(250)").HasMaxLength(250);
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("FolderType").IsRequired(true), "nvarchar(50)").HasMaxLength(50);
				RelationalPropertyBuilderExtensions.HasColumnType<DateTime?>(b.Property<DateTime?>("LastModified"), "datetime");
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("MobileContent"), "text");
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("ModifiedBy"), "varchar(50)").HasMaxLength(50).IsUnicode(false);
				RelationalPropertyBuilderExtensions.HasColumnType<int>(b.Property<int>("Priority"), "int");
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("Scripts"), "text");
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("SpaContent"), "text");
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("Status").IsRequired(true), "varchar(50)").HasMaxLength(50).IsUnicode(false);
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("Styles"), "text");
				RelationalPropertyBuilderExtensions.HasColumnType<int>(b.Property<int>("ThemeId"), "int");
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("ThemeName").IsRequired(true), "nvarchar(250)").HasMaxLength(250);
				b.HasKey(new string[] { "Id" });
				RelationalIndexBuilderExtensions.HasName(b.HasIndex(new string[] { "ThemeId" }), "IX_mix_template_file_TemplateId");
				RelationalEntityTypeBuilderExtensions.ToTable(b, "mix_template");
			});
			modelBuilder.Entity("Mix.Cms.Lib.Models.Cms.MixTheme", (EntityTypeBuilder b) => {
				RelationalPropertyBuilderExtensions.HasColumnType<int>(b.Property<int>("Id"), "int");
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("CreatedBy"), "varchar(50)").HasMaxLength(50).IsUnicode(false);
				RelationalPropertyBuilderExtensions.HasColumnType<DateTime>(b.Property<DateTime>("CreatedDateTime"), "datetime");
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("Image"), "nvarchar(250)").HasMaxLength(250);
				RelationalPropertyBuilderExtensions.HasColumnType<DateTime?>(b.Property<DateTime?>("LastModified"), "datetime");
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("ModifiedBy"), "varchar(50)").HasMaxLength(50).IsUnicode(false);
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("Name").IsRequired(true), "nvarchar(250)").HasMaxLength(250);
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("PreviewUrl"), "nvarchar(450)").HasMaxLength(0x1c2);
				RelationalPropertyBuilderExtensions.HasColumnType<int>(b.Property<int>("Priority"), "int");
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("Status").IsRequired(true), "varchar(50)").HasMaxLength(50).IsUnicode(false);
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("Thumbnail"), "nvarchar(250)").HasMaxLength(250);
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("Title"), "nvarchar(250)").HasMaxLength(250);
				b.HasKey(new string[] { "Id" });
				RelationalEntityTypeBuilderExtensions.ToTable(b, "mix_theme");
			});
			modelBuilder.Entity("Mix.Cms.Lib.Models.Cms.MixUrlAlias", (EntityTypeBuilder b) => {
				RelationalPropertyBuilderExtensions.HasColumnType<int>(b.Property<int>("Id"), "int");
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("Specificulture"), "nvarchar(10)").HasMaxLength(10);
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("Alias"), "nvarchar(250)").HasMaxLength(250);
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("CreatedBy"), "varchar(50)").HasMaxLength(50).IsUnicode(false);
				RelationalPropertyBuilderExtensions.HasColumnType<DateTime>(b.Property<DateTime>("CreatedDateTime"), "datetime");
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("Description"), "nvarchar(4000)").HasMaxLength(0xfa0);
				RelationalPropertyBuilderExtensions.HasColumnType<DateTime?>(b.Property<DateTime?>("LastModified"), "datetime");
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("ModifiedBy"), "varchar(50)").HasMaxLength(50).IsUnicode(false);
				RelationalPropertyBuilderExtensions.HasColumnType<int>(b.Property<int>("Priority"), "int");
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("SourceId"), "nvarchar(250)").HasMaxLength(250);
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("Status").IsRequired(true), "varchar(50)").HasMaxLength(50).IsUnicode(false);
				RelationalPropertyBuilderExtensions.HasColumnType<int>(b.Property<int>("Type"), "int");
				b.HasKey(new string[] { "Id", "Specificulture" });
				b.HasIndex(new string[] { "Specificulture" });
				RelationalEntityTypeBuilderExtensions.ToTable(b, "mix_url_alias");
			});
			modelBuilder.Entity("Mix.Cms.Lib.Models.Cms.MixAttributeField", (EntityTypeBuilder b) => {
				RelationalForeignKeyBuilderExtensions.HasConstraintName(b.HasOne("Mix.Cms.Lib.Models.Cms.MixAttributeSet", "AttributeSet").WithMany("MixAttributeFieldAttributeSet").HasForeignKey(new string[] { "AttributeSetId" }), "FK_mix_attribute_field_mix_attribute_set").IsRequired(true);
				RelationalForeignKeyBuilderExtensions.HasConstraintName(b.HasOne("Mix.Cms.Lib.Models.Cms.MixAttributeSet", "Reference").WithMany("MixAttributeFieldReference").HasForeignKey(new string[] { "ReferenceId" }), "FK_mix_attribute_field_mix_attribute_set1");
			});
			modelBuilder.Entity("Mix.Cms.Lib.Models.Cms.MixAttributeSetData", (EntityTypeBuilder b) => RelationalForeignKeyBuilderExtensions.HasConstraintName(b.HasOne("Mix.Cms.Lib.Models.Cms.MixAttributeSet", "AttributeSet").WithMany("MixAttributeSetData").HasForeignKey(new string[] { "AttributeSetId" }), "FK_mix_attribute_set_data_mix_attribute_set").IsRequired(true));
			modelBuilder.Entity("Mix.Cms.Lib.Models.Cms.MixAttributeSetReference", (EntityTypeBuilder b) => RelationalForeignKeyBuilderExtensions.HasConstraintName(b.HasOne("Mix.Cms.Lib.Models.Cms.MixAttributeSet", "AttributeSet").WithMany("MixAttributeSetReference").HasForeignKey(new string[] { "AttributeSetId" }), "FK_mix_attribute_set_reference_mix_attribute_set").IsRequired(true));
			modelBuilder.Entity("Mix.Cms.Lib.Models.Cms.MixConfiguration", (EntityTypeBuilder b) => RelationalForeignKeyBuilderExtensions.HasConstraintName(b.HasOne("Mix.Cms.Lib.Models.Cms.MixCulture", "SpecificultureNavigation").WithMany("MixConfiguration").HasForeignKey(new string[] { "Specificulture" }), "FK_Mix_Configuration_Mix_Culture").HasPrincipalKey(new string[] { "Specificulture" }).OnDelete(3).IsRequired(true));
			modelBuilder.Entity("Mix.Cms.Lib.Models.Cms.MixFile", (EntityTypeBuilder b) => RelationalForeignKeyBuilderExtensions.HasConstraintName(b.HasOne("Mix.Cms.Lib.Models.Cms.MixTheme", "Theme").WithMany("MixFile").HasForeignKey(new string[] { "ThemeId" }), "FK_mix_file_mix_template"));
			modelBuilder.Entity("Mix.Cms.Lib.Models.Cms.MixLanguage", (EntityTypeBuilder b) => RelationalForeignKeyBuilderExtensions.HasConstraintName(b.HasOne("Mix.Cms.Lib.Models.Cms.MixCulture", "SpecificultureNavigation").WithMany("MixLanguage").HasForeignKey(new string[] { "Specificulture" }), "FK_Mix_Language_Mix_Culture").HasPrincipalKey(new string[] { "Specificulture" }).OnDelete(3).IsRequired(true));
			modelBuilder.Entity("Mix.Cms.Lib.Models.Cms.MixModule", (EntityTypeBuilder b) => RelationalForeignKeyBuilderExtensions.HasConstraintName(b.HasOne("Mix.Cms.Lib.Models.Cms.MixCulture", "SpecificultureNavigation").WithMany("MixModule").HasForeignKey(new string[] { "Specificulture" }), "FK_Mix_Module_Mix_Culture").HasPrincipalKey(new string[] { "Specificulture" }).OnDelete(3).IsRequired(true));
			modelBuilder.Entity("Mix.Cms.Lib.Models.Cms.MixModuleData", (EntityTypeBuilder b) => {
				RelationalForeignKeyBuilderExtensions.HasConstraintName(b.HasOne("Mix.Cms.Lib.Models.Cms.MixModule", "MixModule").WithMany("MixModuleData").HasForeignKey(new string[] { "ModuleId", "Specificulture" }), "FK_Mix_Module_Data_Mix_Module").OnDelete(3).IsRequired(true);
				RelationalForeignKeyBuilderExtensions.HasConstraintName(b.HasOne("Mix.Cms.Lib.Models.Cms.MixPage", "MixPage").WithMany("MixModuleData").HasForeignKey(new string[] { "PageId", "Specificulture" }), "FK_mix_module_data_mix_page");
				RelationalForeignKeyBuilderExtensions.HasConstraintName(b.HasOne("Mix.Cms.Lib.Models.Cms.MixPost", "MixPost").WithMany("MixModuleData").HasForeignKey(new string[] { "PostId", "Specificulture" }), "FK_mix_module_data_mix_post");
			});
			modelBuilder.Entity("Mix.Cms.Lib.Models.Cms.MixModulePost", (EntityTypeBuilder b) => {
				RelationalForeignKeyBuilderExtensions.HasConstraintName(b.HasOne("Mix.Cms.Lib.Models.Cms.MixModule", "MixModule").WithMany("MixModulePost").HasForeignKey(new string[] { "ModuleId", "Specificulture" }), "FK_Mix_Module_Post_Mix_Module").IsRequired(true);
				RelationalForeignKeyBuilderExtensions.HasConstraintName(b.HasOne("Mix.Cms.Lib.Models.Cms.MixPost", "MixPost").WithMany("MixModulePost").HasForeignKey(new string[] { "PostId", "Specificulture" }), "FK_Mix_Module_Post_Mix_Post").IsRequired(true);
			});
			modelBuilder.Entity("Mix.Cms.Lib.Models.Cms.MixPage", (EntityTypeBuilder b) => RelationalForeignKeyBuilderExtensions.HasConstraintName(b.HasOne("Mix.Cms.Lib.Models.Cms.MixCulture", "SpecificultureNavigation").WithMany("MixPage").HasForeignKey(new string[] { "Specificulture" }), "FK_Mix_Page_Mix_Culture").HasPrincipalKey(new string[] { "Specificulture" }).IsRequired(true));
			modelBuilder.Entity("Mix.Cms.Lib.Models.Cms.MixPageModule", (EntityTypeBuilder b) => {
				RelationalForeignKeyBuilderExtensions.HasConstraintName(b.HasOne("Mix.Cms.Lib.Models.Cms.MixModule", "MixModule").WithMany("MixPageModule").HasForeignKey(new string[] { "ModuleId", "Specificulture" }), "FK_Mix_Menu_Module_Mix_Module1").OnDelete(3).IsRequired(true);
				RelationalForeignKeyBuilderExtensions.HasConstraintName(b.HasOne("Mix.Cms.Lib.Models.Cms.MixPage", "MixPage").WithMany("MixPageModule").HasForeignKey(new string[] { "PageId", "Specificulture" }), "FK_Mix_Page_Module_Mix_Page").IsRequired(true);
			});
			modelBuilder.Entity("Mix.Cms.Lib.Models.Cms.MixPagePost", (EntityTypeBuilder b) => {
				RelationalForeignKeyBuilderExtensions.HasConstraintName(b.HasOne("Mix.Cms.Lib.Models.Cms.MixPage", "MixPage").WithMany("MixPagePost").HasForeignKey(new string[] { "PageId", "Specificulture" }), "FK_Mix_Page_Post_Mix_Page").IsRequired(true);
				RelationalForeignKeyBuilderExtensions.HasConstraintName(b.HasOne("Mix.Cms.Lib.Models.Cms.MixPost", "MixPost").WithMany("MixPagePost").HasForeignKey(new string[] { "PostId", "Specificulture" }), "FK_Mix_Page_Post_Mix_Post").IsRequired(true);
			});
			modelBuilder.Entity("Mix.Cms.Lib.Models.Cms.MixPortalPageNavigation", (EntityTypeBuilder b) => {
				RelationalForeignKeyBuilderExtensions.HasConstraintName(b.HasOne("Mix.Cms.Lib.Models.Cms.MixPortalPage", "IdNavigation").WithOne("MixPortalPageNavigationIdNavigation").HasForeignKey("Mix.Cms.Lib.Models.Cms.MixPortalPageNavigation", new string[] { "Id" }), "FK_mix_portal_page_navigation_mix_portal_page").IsRequired(true);
				RelationalForeignKeyBuilderExtensions.HasConstraintName(b.HasOne("Mix.Cms.Lib.Models.Cms.MixPortalPage", "Parent").WithMany("MixPortalPageNavigationParent").HasForeignKey(new string[] { "ParentId" }), "FK_mix_portal_page_navigation_mix_portal_page1").IsRequired(true);
			});
			modelBuilder.Entity("Mix.Cms.Lib.Models.Cms.MixPortalPageRole", (EntityTypeBuilder b) => RelationalForeignKeyBuilderExtensions.HasConstraintName(b.HasOne("Mix.Cms.Lib.Models.Cms.MixPortalPage", "Page").WithMany("MixPortalPageRole").HasForeignKey(new string[] { "PageId" }), "FK_mix_portal_page_role_mix_portal_page").OnDelete(3).IsRequired(true));
			modelBuilder.Entity("Mix.Cms.Lib.Models.Cms.MixPost", (EntityTypeBuilder b) => RelationalForeignKeyBuilderExtensions.HasConstraintName(b.HasOne("Mix.Cms.Lib.Models.Cms.MixCulture", "SpecificultureNavigation").WithMany("MixPost").HasForeignKey(new string[] { "Specificulture" }), "FK_Mix_Post_Mix_Culture").HasPrincipalKey(new string[] { "Specificulture" }).IsRequired(true));
			modelBuilder.Entity("Mix.Cms.Lib.Models.Cms.MixPostMedia", (EntityTypeBuilder b) => {
				RelationalForeignKeyBuilderExtensions.HasConstraintName(b.HasOne("Mix.Cms.Lib.Models.Cms.MixMedia", "MixMedia").WithMany("MixPostMedia").HasForeignKey(new string[] { "MediaId", "Specificulture" }), "FK_mix_post_media_mix_media").IsRequired(true);
				RelationalForeignKeyBuilderExtensions.HasConstraintName(b.HasOne("Mix.Cms.Lib.Models.Cms.MixPost", "MixPost").WithMany("MixPostMedia").HasForeignKey(new string[] { "PostId", "Specificulture" }), "FK_mix_post_media_mix_post").IsRequired(true);
			});
			modelBuilder.Entity("Mix.Cms.Lib.Models.Cms.MixPostModule", (EntityTypeBuilder b) => {
				RelationalForeignKeyBuilderExtensions.HasConstraintName(b.HasOne("Mix.Cms.Lib.Models.Cms.MixModule", "MixModule").WithMany("MixPostModule").HasForeignKey(new string[] { "ModuleId", "Specificulture" }), "FK_Mix_Post_Module_Mix_Module1").OnDelete(3).IsRequired(true);
				RelationalForeignKeyBuilderExtensions.HasConstraintName(b.HasOne("Mix.Cms.Lib.Models.Cms.MixPost", "MixPost").WithMany("MixPostModule").HasForeignKey(new string[] { "PostId", "Specificulture" }), "FK_Mix_Post_Module_Mix_Post").IsRequired(true);
			});
			modelBuilder.Entity("Mix.Cms.Lib.Models.Cms.MixRelatedAttributeSet", (EntityTypeBuilder b) => RelationalForeignKeyBuilderExtensions.HasConstraintName(b.HasOne("Mix.Cms.Lib.Models.Cms.MixAttributeSet", "IdNavigation").WithMany("MixRelatedAttributeSet").HasForeignKey(new string[] { "Id" }), "FK_mix_related_attribute_set_mix_attribute_set").IsRequired(true));
			modelBuilder.Entity("Mix.Cms.Lib.Models.Cms.MixRelatedPost", (EntityTypeBuilder b) => {
				RelationalForeignKeyBuilderExtensions.HasConstraintName(b.HasOne("Mix.Cms.Lib.Models.Cms.MixPost", "MixPost").WithMany("MixRelatedPostMixPost").HasForeignKey(new string[] { "DestinationId", "Specificulture" }), "FK_mix_related_post_mix_post1").IsRequired(true);
				RelationalForeignKeyBuilderExtensions.HasConstraintName(b.HasOne("Mix.Cms.Lib.Models.Cms.MixPost", "S").WithMany("MixRelatedPostS").HasForeignKey(new string[] { "SourceId", "Specificulture" }), "FK_mix_related_post_mix_post").IsRequired(true);
			});
			modelBuilder.Entity("Mix.Cms.Lib.Models.Cms.MixTemplate", (EntityTypeBuilder b) => RelationalForeignKeyBuilderExtensions.HasConstraintName(b.HasOne("Mix.Cms.Lib.Models.Cms.MixTheme", "Theme").WithMany("MixTemplate").HasForeignKey(new string[] { "ThemeId" }), "FK_mix_template_mix_theme").IsRequired(true));
			modelBuilder.Entity("Mix.Cms.Lib.Models.Cms.MixUrlAlias", (EntityTypeBuilder b) => RelationalForeignKeyBuilderExtensions.HasConstraintName(b.HasOne("Mix.Cms.Lib.Models.Cms.MixCulture", "SpecificultureNavigation").WithMany("MixUrlAlias").HasForeignKey(new string[] { "Specificulture" }), "FK_Mix_Url_Alias_Mix_Culture").HasPrincipalKey(new string[] { "Specificulture" }).OnDelete(3).IsRequired(true));
		}

		protected override void Down(MigrationBuilder migrationBuilder)
		{
			migrationBuilder.DropTable("mix_attribute_field", null);
			migrationBuilder.DropTable("mix_attribute_set_data", null);
			migrationBuilder.DropTable("mix_attribute_set_reference", null);
			migrationBuilder.DropTable("mix_attribute_set_value", null);
			migrationBuilder.DropTable("mix_cache", null);
			migrationBuilder.DropTable("mix_cms_user", null);
			migrationBuilder.DropTable("mix_configuration", null);
			migrationBuilder.DropTable("mix_file", null);
			migrationBuilder.DropTable("mix_language", null);
			migrationBuilder.DropTable("mix_module_data", null);
			migrationBuilder.DropTable("mix_module_post", null);
			migrationBuilder.DropTable("mix_page_module", null);
			migrationBuilder.DropTable("mix_page_post", null);
			migrationBuilder.DropTable("mix_portal_page_navigation", null);
			migrationBuilder.DropTable("mix_portal_page_role", null);
			migrationBuilder.DropTable("mix_post_media", null);
			migrationBuilder.DropTable("mix_post_module", null);
			migrationBuilder.DropTable("mix_related_attribute_data", null);
			migrationBuilder.DropTable("mix_related_attribute_set", null);
			migrationBuilder.DropTable("mix_related_data", null);
			migrationBuilder.DropTable("mix_related_post", null);
			migrationBuilder.DropTable("mix_template", null);
			migrationBuilder.DropTable("mix_url_alias", null);
			migrationBuilder.DropTable("mix_page", null);
			migrationBuilder.DropTable("mix_portal_page", null);
			migrationBuilder.DropTable("mix_media", null);
			migrationBuilder.DropTable("mix_module", null);
			migrationBuilder.DropTable("mix_attribute_set", null);
			migrationBuilder.DropTable("mix_post", null);
			migrationBuilder.DropTable("mix_theme", null);
			migrationBuilder.DropTable("mix_culture", null);
		}

		protected override void Up(MigrationBuilder migrationBuilder)
		{
			migrationBuilder.CreateTable("mix_attribute_set", (ColumnsBuilder table) => {
				bool? nullable = null;
				bool? nullable1 = nullable;
				int? nullable2 = null;
				nullable = null;
				OperationBuilder<AddColumnOperation> operationBuilder = table.Column<int>(null, nullable1, nullable2, false, null, false, null, null, null, nullable, null);
				nullable = null;
				bool? nullable3 = nullable;
				nullable2 = null;
				nullable = null;
				OperationBuilder<AddColumnOperation> operationBuilder1 = table.Column<int>(null, nullable3, nullable2, false, null, false, null, null, null, nullable, null);
				nullable = null;
				bool? nullable4 = nullable;
				nullable = null;
				OperationBuilder<AddColumnOperation> operationBuilder2 = table.Column<string>(null, nullable4, new int?(250), false, null, false, null, null, null, nullable, null);
				nullable = null;
				bool? nullable5 = nullable;
				nullable = null;
				OperationBuilder<AddColumnOperation> operationBuilder3 = table.Column<string>(null, nullable5, new int?(250), false, null, false, null, null, null, nullable, null);
				nullable = null;
				bool? nullable6 = nullable;
				nullable = null;
				OperationBuilder<AddColumnOperation> operationBuilder4 = table.Column<string>(null, nullable6, new int?(250), false, null, true, null, null, null, nullable, null);
				nullable = null;
				bool? nullable7 = nullable;
				nullable = null;
				OperationBuilder<AddColumnOperation> operationBuilder5 = table.Column<string>(null, nullable7, new int?(250), false, null, true, null, null, null, nullable, null);
				nullable = null;
				bool? nullable8 = nullable;
				nullable = null;
				OperationBuilder<AddColumnOperation> operationBuilder6 = table.Column<string>(null, nullable8, new int?(250), false, null, true, null, null, null, nullable, null);
				nullable = null;
				bool? nullable9 = nullable;
				nullable = null;
				OperationBuilder<AddColumnOperation> operationBuilder7 = table.Column<string>(null, nullable9, new int?(250), false, null, true, null, null, null, nullable, null);
				nullable = null;
				bool? nullable10 = nullable;
				nullable = null;
				OperationBuilder<AddColumnOperation> operationBuilder8 = table.Column<string>(null, nullable10, new int?(250), false, null, true, null, null, null, nullable, null);
				nullable = null;
				bool? nullable11 = nullable;
				nullable2 = null;
				nullable = null;
				OperationBuilder<AddColumnOperation> operationBuilder9 = table.Column<bool>(null, nullable11, nullable2, false, null, true, null, null, null, nullable, null);
				nullable = null;
				OperationBuilder<AddColumnOperation> operationBuilder10 = table.Column<string>(null, new bool?(false), new int?(50), false, null, true, null, null, null, nullable, null);
				nullable = null;
				OperationBuilder<AddColumnOperation> operationBuilder11 = table.Column<string>(null, new bool?(false), new int?(50), false, null, true, null, null, null, nullable, null);
				nullable = null;
				bool? nullable12 = nullable;
				nullable2 = null;
				nullable = null;
				OperationBuilder<AddColumnOperation> operationBuilder12 = table.Column<DateTime>("datetime", nullable12, nullable2, false, null, true, null, null, null, nullable, null);
				nullable = null;
				bool? nullable13 = nullable;
				nullable2 = null;
				nullable = null;
				OperationBuilder<AddColumnOperation> operationBuilder13 = table.Column<DateTime>("datetime", nullable13, nullable2, false, null, false, null, null, null, nullable, null);
				nullable = null;
				bool? nullable14 = nullable;
				nullable2 = null;
				nullable = null;
				OperationBuilder<AddColumnOperation> operationBuilder14 = table.Column<int>(null, nullable14, nullable2, false, null, false, null, null, null, nullable, null);
				nullable = null;
				return new { Id = operationBuilder, Type = operationBuilder1, Title = operationBuilder2, Name = operationBuilder3, Description = operationBuilder4, FormTemplate = operationBuilder5, EdmTemplate = operationBuilder6, EdmSubject = operationBuilder7, EdmFrom = operationBuilder8, EdmAutoSend = operationBuilder9, ModifiedBy = operationBuilder10, CreatedBy = operationBuilder11, LastModified = operationBuilder12, CreatedDateTime = operationBuilder13, Priority = operationBuilder14, Status = table.Column<string>(null, new bool?(false), new int?(50), false, null, false, null, null, null, nullable, null) };
			}, null, (table) => table.PrimaryKey("PK_mix_attribute_set", (x) => x.Id), null);
			migrationBuilder.CreateTable("mix_attribute_set_value", (ColumnsBuilder table) => {
				bool? nullable = null;
				bool? nullable1 = nullable;
				nullable = null;
				OperationBuilder<AddColumnOperation> operationBuilder = table.Column<string>(null, nullable1, new int?(50), false, null, false, null, null, null, nullable, null);
				nullable = null;
				bool? nullable2 = nullable;
				nullable = null;
				OperationBuilder<AddColumnOperation> operationBuilder1 = table.Column<string>(null, nullable2, new int?(10), false, null, false, null, null, null, nullable, null);
				nullable = null;
				bool? nullable3 = nullable;
				int? nullable4 = null;
				nullable = null;
				OperationBuilder<AddColumnOperation> operationBuilder2 = table.Column<int>(null, nullable3, nullable4, false, null, false, null, null, null, nullable, null);
				nullable = null;
				bool? nullable5 = nullable;
				nullable = null;
				OperationBuilder<AddColumnOperation> operationBuilder3 = table.Column<string>(null, nullable5, new int?(50), false, null, false, null, null, null, nullable, null);
				nullable = null;
				bool? nullable6 = nullable;
				nullable = null;
				OperationBuilder<AddColumnOperation> operationBuilder4 = table.Column<string>(null, nullable6, new int?(250), false, null, true, null, null, null, nullable, null);
				nullable = null;
				bool? nullable7 = nullable;
				nullable = null;
				OperationBuilder<AddColumnOperation> operationBuilder5 = table.Column<string>(null, nullable7, new int?(250), false, null, true, null, null, null, nullable, null);
				nullable = null;
				bool? nullable8 = nullable;
				nullable4 = null;
				nullable = null;
				OperationBuilder<AddColumnOperation> operationBuilder6 = table.Column<int>(null, nullable8, nullable4, false, null, false, null, null, null, nullable, null);
				nullable = null;
				bool? nullable9 = nullable;
				nullable4 = null;
				nullable = null;
				OperationBuilder<AddColumnOperation> operationBuilder7 = table.Column<bool>(null, nullable9, nullable4, false, null, true, null, null, null, nullable, null);
				nullable = null;
				bool? nullable10 = nullable;
				nullable = null;
				OperationBuilder<AddColumnOperation> operationBuilder8 = table.Column<string>(null, nullable10, new int?(50), false, null, false, null, null, null, nullable, null);
				nullable = null;
				bool? nullable11 = nullable;
				nullable4 = null;
				nullable = null;
				OperationBuilder<AddColumnOperation> operationBuilder9 = table.Column<DateTime>("datetime", nullable11, nullable4, false, null, true, null, null, null, nullable, null);
				nullable = null;
				bool? nullable12 = nullable;
				nullable4 = null;
				nullable = null;
				OperationBuilder<AddColumnOperation> operationBuilder10 = table.Column<double>(null, nullable12, nullable4, false, null, true, null, null, null, nullable, null);
				nullable = null;
				bool? nullable13 = nullable;
				nullable4 = null;
				nullable = null;
				OperationBuilder<AddColumnOperation> operationBuilder11 = table.Column<int>(null, nullable13, nullable4, false, null, true, null, null, null, nullable, null);
				nullable = null;
				bool? nullable14 = nullable;
				nullable = null;
				OperationBuilder<AddColumnOperation> operationBuilder12 = table.Column<string>(null, nullable14, new int?(0xfa0), false, null, true, null, null, null, nullable, null);
				nullable = null;
				bool? nullable15 = nullable;
				nullable = null;
				OperationBuilder<AddColumnOperation> operationBuilder13 = table.Column<string>(null, nullable15, new int?(0xfa0), false, null, true, null, null, null, nullable, null);
				nullable = null;
				bool? nullable16 = nullable;
				nullable = null;
				OperationBuilder<AddColumnOperation> operationBuilder14 = table.Column<string>(null, nullable16, new int?(50), false, null, true, null, null, null, nullable, null);
				nullable = null;
				bool? nullable17 = nullable;
				nullable4 = null;
				nullable = null;
				OperationBuilder<AddColumnOperation> operationBuilder15 = table.Column<int>(null, nullable17, nullable4, false, null, false, null, null, null, nullable, null);
				nullable = null;
				OperationBuilder<AddColumnOperation> operationBuilder16 = table.Column<string>(null, new bool?(false), new int?(50), false, null, true, null, null, null, nullable, null);
				nullable = null;
				OperationBuilder<AddColumnOperation> operationBuilder17 = table.Column<string>(null, new bool?(false), new int?(50), false, null, true, null, null, null, nullable, null);
				nullable = null;
				bool? nullable18 = nullable;
				nullable4 = null;
				nullable = null;
				OperationBuilder<AddColumnOperation> operationBuilder18 = table.Column<DateTime>("datetime", nullable18, nullable4, false, null, true, null, null, null, nullable, null);
				nullable = null;
				bool? nullable19 = nullable;
				nullable4 = null;
				nullable = null;
				OperationBuilder<AddColumnOperation> operationBuilder19 = table.Column<DateTime>("datetime", nullable19, nullable4, false, null, false, null, null, null, nullable, null);
				nullable = null;
				bool? nullable20 = nullable;
				nullable4 = null;
				nullable = null;
				OperationBuilder<AddColumnOperation> operationBuilder20 = table.Column<int>(null, nullable20, nullable4, false, null, false, null, null, null, nullable, null);
				nullable = null;
				return new { Id = operationBuilder, Specificulture = operationBuilder1, AttributeFieldId = operationBuilder2, AttributeFieldName = operationBuilder3, AttributeSetName = operationBuilder4, Regex = operationBuilder5, DataType = operationBuilder6, BooleanValue = operationBuilder7, DataId = operationBuilder8, DateTimeValue = operationBuilder9, DoubleValue = operationBuilder10, IntegerValue = operationBuilder11, StringValue = operationBuilder12, EncryptValue = operationBuilder13, EncryptKey = operationBuilder14, EncryptType = operationBuilder15, ModifiedBy = operationBuilder16, CreatedBy = operationBuilder17, LastModified = operationBuilder18, CreatedDateTime = operationBuilder19, Priority = operationBuilder20, Status = table.Column<string>(null, new bool?(false), new int?(50), false, null, false, null, null, null, nullable, null) };
			}, null, (table) => table.PrimaryKey("PK_mix_attribute_set_value", (x) => x.Id), null);
			migrationBuilder.CreateTable("mix_cache", (ColumnsBuilder table) => {
				bool? nullable = null;
				bool? nullable1 = nullable;
				nullable = null;
				OperationBuilder<AddColumnOperation> operationBuilder = table.Column<string>(null, nullable1, new int?(50), false, null, false, null, null, null, nullable, null);
				nullable = null;
				bool? nullable2 = nullable;
				nullable = null;
				OperationBuilder<AddColumnOperation> operationBuilder1 = table.Column<string>(null, nullable2, new int?(0xfa0), false, null, false, null, null, null, nullable, null);
				nullable = null;
				bool? nullable3 = nullable;
				int? nullable4 = null;
				nullable = null;
				OperationBuilder<AddColumnOperation> operationBuilder2 = table.Column<DateTime>("datetime", nullable3, nullable4, false, null, true, null, null, null, nullable, null);
				nullable = null;
				OperationBuilder<AddColumnOperation> operationBuilder3 = table.Column<string>(null, new bool?(false), new int?(50), false, null, true, null, null, null, nullable, null);
				nullable = null;
				OperationBuilder<AddColumnOperation> operationBuilder4 = table.Column<string>(null, new bool?(false), new int?(50), false, null, true, null, null, null, nullable, null);
				nullable = null;
				bool? nullable5 = nullable;
				nullable4 = null;
				nullable = null;
				OperationBuilder<AddColumnOperation> operationBuilder5 = table.Column<DateTime>("datetime", nullable5, nullable4, false, null, true, null, null, null, nullable, null);
				nullable = null;
				bool? nullable6 = nullable;
				nullable4 = null;
				nullable = null;
				OperationBuilder<AddColumnOperation> operationBuilder6 = table.Column<DateTime>("datetime", nullable6, nullable4, false, null, false, null, null, null, nullable, null);
				nullable = null;
				bool? nullable7 = nullable;
				nullable4 = null;
				nullable = null;
				OperationBuilder<AddColumnOperation> operationBuilder7 = table.Column<int>(null, nullable7, nullable4, false, null, false, null, null, null, nullable, null);
				nullable = null;
				return new { Id = operationBuilder, Value = operationBuilder1, ExpiredDateTime = operationBuilder2, ModifiedBy = operationBuilder3, CreatedBy = operationBuilder4, LastModified = operationBuilder5, CreatedDateTime = operationBuilder6, Priority = operationBuilder7, Status = table.Column<string>(null, new bool?(false), new int?(50), false, null, false, null, null, null, nullable, null) };
			}, null, (table) => table.PrimaryKey("PK_mix_cache", (x) => x.Id), null);
			migrationBuilder.CreateTable("mix_cms_user", (ColumnsBuilder table) => {
				bool? nullable = null;
				bool? nullable1 = nullable;
				nullable = null;
				OperationBuilder<AddColumnOperation> operationBuilder = table.Column<string>(null, nullable1, new int?(50), false, null, false, null, null, null, nullable, null);
				nullable = null;
				bool? nullable2 = nullable;
				nullable = null;
				OperationBuilder<AddColumnOperation> operationBuilder1 = table.Column<string>(null, nullable2, new int?(250), false, null, true, null, null, null, nullable, null);
				nullable = null;
				bool? nullable3 = nullable;
				nullable = null;
				OperationBuilder<AddColumnOperation> operationBuilder2 = table.Column<string>(null, nullable3, new int?(250), false, null, true, null, null, null, nullable, null);
				nullable = null;
				bool? nullable4 = nullable;
				nullable = null;
				OperationBuilder<AddColumnOperation> operationBuilder3 = table.Column<string>(null, nullable4, new int?(50), false, null, true, null, null, null, nullable, null);
				nullable = null;
				bool? nullable5 = nullable;
				nullable = null;
				OperationBuilder<AddColumnOperation> operationBuilder4 = table.Column<string>(null, nullable5, new int?(50), false, null, true, null, null, null, nullable, null);
				nullable = null;
				bool? nullable6 = nullable;
				nullable = null;
				OperationBuilder<AddColumnOperation> operationBuilder5 = table.Column<string>(null, nullable6, new int?(50), false, null, true, null, null, null, nullable, null);
				nullable = null;
				bool? nullable7 = nullable;
				nullable = null;
				OperationBuilder<AddColumnOperation> operationBuilder6 = table.Column<string>(null, nullable7, new int?(50), false, null, true, null, null, null, nullable, null);
				nullable = null;
				bool? nullable8 = nullable;
				nullable = null;
				OperationBuilder<AddColumnOperation> operationBuilder7 = table.Column<string>(null, nullable8, new int?(250), false, null, true, null, null, null, nullable, null);
				nullable = null;
				bool? nullable9 = nullable;
				nullable = null;
				OperationBuilder<AddColumnOperation> operationBuilder8 = table.Column<string>(null, nullable9, new int?(250), false, null, true, null, null, null, nullable, null);
				nullable = null;
				OperationBuilder<AddColumnOperation> operationBuilder9 = table.Column<string>(null, new bool?(false), new int?(50), false, null, true, null, null, null, nullable, null);
				nullable = null;
				OperationBuilder<AddColumnOperation> operationBuilder10 = table.Column<string>(null, new bool?(false), new int?(50), false, null, true, null, null, null, nullable, null);
				nullable = null;
				bool? nullable10 = nullable;
				int? nullable11 = null;
				nullable = null;
				OperationBuilder<AddColumnOperation> operationBuilder11 = table.Column<DateTime>("datetime", nullable10, nullable11, false, null, true, null, null, null, nullable, null);
				nullable = null;
				bool? nullable12 = nullable;
				nullable11 = null;
				nullable = null;
				OperationBuilder<AddColumnOperation> operationBuilder12 = table.Column<DateTime>("datetime", nullable12, nullable11, false, null, false, null, null, null, nullable, null);
				nullable = null;
				bool? nullable13 = nullable;
				nullable11 = null;
				nullable = null;
				OperationBuilder<AddColumnOperation> operationBuilder13 = table.Column<int>(null, nullable13, nullable11, false, null, false, null, null, null, nullable, null);
				nullable = null;
				return new { Id = operationBuilder, Address = operationBuilder1, Avatar = operationBuilder2, FirstName = operationBuilder3, LastName = operationBuilder4, MiddleName = operationBuilder5, PhoneNumber = operationBuilder6, Username = operationBuilder7, Email = operationBuilder8, ModifiedBy = operationBuilder9, CreatedBy = operationBuilder10, LastModified = operationBuilder11, CreatedDateTime = operationBuilder12, Priority = operationBuilder13, Status = table.Column<string>(null, new bool?(false), new int?(50), false, null, false, null, null, null, nullable, null) };
			}, null, (table) => table.PrimaryKey("PK_mix_cms_user", (x) => x.Id), null);
			migrationBuilder.CreateTable("mix_culture", (ColumnsBuilder table) => {
				bool? nullable = null;
				bool? nullable1 = nullable;
				int? nullable2 = null;
				nullable = null;
				OperationBuilder<AddColumnOperation> operationBuilder = table.Column<int>(null, nullable1, nullable2, false, null, false, null, null, null, nullable, null);
				nullable = null;
				bool? nullable3 = nullable;
				nullable = null;
				OperationBuilder<AddColumnOperation> operationBuilder1 = table.Column<string>(null, nullable3, new int?(150), false, null, true, null, null, null, nullable, null);
				nullable = null;
				bool? nullable4 = nullable;
				nullable = null;
				OperationBuilder<AddColumnOperation> operationBuilder2 = table.Column<string>(null, nullable4, new int?(250), false, null, true, null, null, null, nullable, null);
				nullable = null;
				bool? nullable5 = nullable;
				nullable = null;
				OperationBuilder<AddColumnOperation> operationBuilder3 = table.Column<string>(null, nullable5, new int?(150), false, null, true, null, null, null, nullable, null);
				nullable = null;
				bool? nullable6 = nullable;
				nullable = null;
				OperationBuilder<AddColumnOperation> operationBuilder4 = table.Column<string>(null, nullable6, new int?(50), false, null, true, null, null, null, nullable, null);
				nullable = null;
				bool? nullable7 = nullable;
				nullable = null;
				OperationBuilder<AddColumnOperation> operationBuilder5 = table.Column<string>(null, nullable7, new int?(50), false, null, true, null, null, null, nullable, null);
				nullable = null;
				bool? nullable8 = nullable;
				nullable = null;
				OperationBuilder<AddColumnOperation> operationBuilder6 = table.Column<string>(null, nullable8, new int?(10), false, null, false, null, null, null, nullable, null);
				nullable = null;
				OperationBuilder<AddColumnOperation> operationBuilder7 = table.Column<string>(null, new bool?(false), new int?(50), false, null, true, null, null, null, nullable, null);
				nullable = null;
				bool? nullable9 = nullable;
				nullable2 = null;
				nullable = null;
				OperationBuilder<AddColumnOperation> operationBuilder8 = table.Column<DateTime>("datetime", nullable9, nullable2, false, null, false, null, null, null, nullable, null);
				nullable = null;
				OperationBuilder<AddColumnOperation> operationBuilder9 = table.Column<string>(null, new bool?(false), new int?(50), false, null, true, null, null, null, nullable, null);
				nullable = null;
				bool? nullable10 = nullable;
				nullable2 = null;
				nullable = null;
				OperationBuilder<AddColumnOperation> operationBuilder10 = table.Column<DateTime>("datetime", nullable10, nullable2, false, null, true, null, null, null, nullable, null);
				nullable = null;
				bool? nullable11 = nullable;
				nullable2 = null;
				nullable = null;
				OperationBuilder<AddColumnOperation> operationBuilder11 = table.Column<int>(null, nullable11, nullable2, false, null, false, null, null, null, nullable, null);
				nullable = null;
				return new { Id = operationBuilder, Alias = operationBuilder1, Description = operationBuilder2, FullName = operationBuilder3, Icon = operationBuilder4, LCID = operationBuilder5, Specificulture = operationBuilder6, CreatedBy = operationBuilder7, CreatedDateTime = operationBuilder8, ModifiedBy = operationBuilder9, LastModified = operationBuilder10, Priority = operationBuilder11, Status = table.Column<string>(null, new bool?(false), new int?(50), false, null, false, null, null, null, nullable, null) };
			}, null, (table) => {
				table.PrimaryKey("PK_mix_culture", (x) => x.Id);
				table.UniqueConstraint("AK_mix_culture_Specificulture", (x) => x.Specificulture);
			}, null);
			migrationBuilder.CreateTable("mix_media", (ColumnsBuilder table) => {
				bool? nullable = null;
				bool? nullable1 = nullable;
				int? nullable2 = null;
				nullable = null;
				OperationBuilder<AddColumnOperation> operationBuilder = table.Column<int>(null, nullable1, nullable2, false, null, false, null, null, null, nullable, null);
				nullable = null;
				bool? nullable3 = nullable;
				nullable = null;
				OperationBuilder<AddColumnOperation> operationBuilder1 = table.Column<string>(null, nullable3, new int?(10), false, null, false, null, null, null, nullable, null);
				nullable = null;
				bool? nullable4 = nullable;
				nullable = null;
				OperationBuilder<AddColumnOperation> operationBuilder2 = table.Column<string>(null, nullable4, new int?(0xfa0), false, null, true, null, null, null, nullable, null);
				nullable = null;
				bool? nullable5 = nullable;
				nullable = null;
				OperationBuilder<AddColumnOperation> operationBuilder3 = table.Column<string>(null, nullable5, new int?(50), false, null, false, null, null, null, nullable, null);
				nullable = null;
				bool? nullable6 = nullable;
				nullable = null;
				OperationBuilder<AddColumnOperation> operationBuilder4 = table.Column<string>(null, nullable6, new int?(250), false, null, false, null, null, null, nullable, null);
				nullable = null;
				bool? nullable7 = nullable;
				nullable = null;
				OperationBuilder<AddColumnOperation> operationBuilder5 = table.Column<string>(null, nullable7, new int?(250), false, null, false, null, null, null, nullable, null);
				nullable = null;
				bool? nullable8 = nullable;
				nullable = null;
				OperationBuilder<AddColumnOperation> operationBuilder6 = table.Column<string>(null, nullable8, new int?(0xfa0), false, null, true, null, null, null, nullable, null);
				nullable = null;
				bool? nullable9 = nullable;
				nullable2 = null;
				nullable = null;
				OperationBuilder<AddColumnOperation> operationBuilder7 = table.Column<long>(null, nullable9, nullable2, false, null, false, null, null, null, nullable, null);
				nullable = null;
				bool? nullable10 = nullable;
				nullable = null;
				OperationBuilder<AddColumnOperation> operationBuilder8 = table.Column<string>(null, nullable10, new int?(50), false, null, false, null, null, null, nullable, null);
				nullable = null;
				bool? nullable11 = nullable;
				nullable = null;
				OperationBuilder<AddColumnOperation> operationBuilder9 = table.Column<string>(null, nullable11, new int?(0xfa0), false, null, true, null, null, null, nullable, null);
				nullable = null;
				bool? nullable12 = nullable;
				nullable = null;
				OperationBuilder<AddColumnOperation> operationBuilder10 = table.Column<string>(null, nullable12, new int?(0x190), false, null, true, null, null, null, nullable, null);
				nullable = null;
				bool? nullable13 = nullable;
				nullable = null;
				OperationBuilder<AddColumnOperation> operationBuilder11 = table.Column<string>(null, nullable13, new int?(250), false, null, true, null, null, null, nullable, null);
				nullable = null;
				bool? nullable14 = nullable;
				nullable = null;
				OperationBuilder<AddColumnOperation> operationBuilder12 = table.Column<string>(null, nullable14, new int?(250), false, null, true, null, null, null, nullable, null);
				nullable = null;
				OperationBuilder<AddColumnOperation> operationBuilder13 = table.Column<string>(null, new bool?(false), new int?(50), false, null, true, null, null, null, nullable, null);
				nullable = null;
				bool? nullable15 = nullable;
				nullable2 = null;
				nullable = null;
				OperationBuilder<AddColumnOperation> operationBuilder14 = table.Column<DateTime>("datetime", nullable15, nullable2, false, null, false, null, null, null, nullable, null);
				nullable = null;
				OperationBuilder<AddColumnOperation> operationBuilder15 = table.Column<string>(null, new bool?(false), new int?(50), false, null, true, null, null, null, nullable, null);
				nullable = null;
				bool? nullable16 = nullable;
				nullable2 = null;
				nullable = null;
				OperationBuilder<AddColumnOperation> operationBuilder16 = table.Column<DateTime>("datetime", nullable16, nullable2, false, null, true, null, null, null, nullable, null);
				nullable = null;
				bool? nullable17 = nullable;
				nullable2 = null;
				nullable = null;
				OperationBuilder<AddColumnOperation> operationBuilder17 = table.Column<int>(null, nullable17, nullable2, false, null, false, null, null, null, nullable, null);
				nullable = null;
				return new { Id = operationBuilder, Specificulture = operationBuilder1, Description = operationBuilder2, Extension = operationBuilder3, FileFolder = operationBuilder4, FileName = operationBuilder5, FileProperties = operationBuilder6, FileSize = operationBuilder7, FileType = operationBuilder8, Title = operationBuilder9, Tags = operationBuilder10, Source = operationBuilder11, TargetUrl = operationBuilder12, CreatedBy = operationBuilder13, CreatedDateTime = operationBuilder14, ModifiedBy = operationBuilder15, LastModified = operationBuilder16, Priority = operationBuilder17, Status = table.Column<string>(null, new bool?(false), new int?(50), false, null, false, null, null, null, nullable, null) };
			}, null, (table) => {
				ParameterExpression parameterExpression = Expression.Parameter(typeof(u003cu003ef__AnonymousType5<OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>>), "x");
				ConstructorInfo methodFromHandle = (ConstructorInfo)MethodBase.GetMethodFromHandle(typeof(u003cu003ef__AnonymousType6<OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>>).GetMethod(".ctor", new Type[] { typeof(u003cIdu003ej__TPar), typeof(u003cSpecificultureu003ej__TPar) }).MethodHandle, typeof(u003cu003ef__AnonymousType6<OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>>).TypeHandle);
				Expression[] expressionArray = new Expression[] { Expression.Property(parameterExpression, (MethodInfo)MethodBase.GetMethodFromHandle(typeof(u003cu003ef__AnonymousType5<OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>>).GetMethod("get_Id").MethodHandle, typeof(u003cu003ef__AnonymousType5<OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>>).TypeHandle)), Expression.Property(parameterExpression, (MethodInfo)MethodBase.GetMethodFromHandle(typeof(u003cu003ef__AnonymousType5<OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>>).GetMethod("get_Specificulture").MethodHandle, typeof(u003cu003ef__AnonymousType5<OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>>).TypeHandle)) };
				MemberInfo[] memberInfoArray = new MemberInfo[] { (MethodInfo)MethodBase.GetMethodFromHandle(typeof(u003cu003ef__AnonymousType6<OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>>).GetMethod("get_Id").MethodHandle, typeof(u003cu003ef__AnonymousType6<OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>>).TypeHandle), (MethodInfo)MethodBase.GetMethodFromHandle(typeof(u003cu003ef__AnonymousType6<OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>>).GetMethod("get_Specificulture").MethodHandle, typeof(u003cu003ef__AnonymousType6<OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>>).TypeHandle) };
				table.PrimaryKey("PK_mix_media", Expression.Lambda(Expression.New(methodFromHandle, (IEnumerable<Expression>)expressionArray, memberInfoArray), new ParameterExpression[] { parameterExpression }));
			}, null);
			migrationBuilder.CreateTable("mix_portal_page", (ColumnsBuilder table) => {
				bool? nullable = null;
				bool? nullable1 = nullable;
				int? nullable2 = null;
				nullable = null;
				OperationBuilder<AddColumnOperation> operationBuilder = table.Column<int>(null, nullable1, nullable2, false, null, false, null, null, null, nullable, null);
				nullable = null;
				bool? nullable3 = nullable;
				nullable = null;
				OperationBuilder<AddColumnOperation> operationBuilder1 = table.Column<string>(null, nullable3, new int?(50), false, null, true, null, null, null, nullable, null);
				nullable = null;
				bool? nullable4 = nullable;
				nullable = null;
				OperationBuilder<AddColumnOperation> operationBuilder2 = table.Column<string>(null, nullable4, new int?(250), false, null, true, null, null, null, nullable, null);
				nullable = null;
				bool? nullable5 = nullable;
				nullable = null;
				OperationBuilder<AddColumnOperation> operationBuilder3 = table.Column<string>(null, nullable5, new int?(250), false, null, true, null, null, null, nullable, null);
				nullable = null;
				bool? nullable6 = nullable;
				nullable = null;
				OperationBuilder<AddColumnOperation> operationBuilder4 = table.Column<string>(null, nullable6, new int?(0x1c2), false, null, true, null, null, null, nullable, null);
				nullable = null;
				bool? nullable7 = nullable;
				nullable = null;
				OperationBuilder<AddColumnOperation> operationBuilder5 = table.Column<string>(null, nullable7, new int?(250), false, null, true, null, null, null, nullable, null);
				nullable = null;
				bool? nullable8 = nullable;
				nullable2 = null;
				nullable = null;
				OperationBuilder<AddColumnOperation> operationBuilder6 = table.Column<int>(null, nullable8, nullable2, false, null, false, null, null, null, nullable, null);
				nullable = null;
				OperationBuilder<AddColumnOperation> operationBuilder7 = table.Column<string>(null, new bool?(false), new int?(50), false, null, true, null, null, null, nullable, null);
				nullable = null;
				bool? nullable9 = nullable;
				nullable2 = null;
				nullable = null;
				OperationBuilder<AddColumnOperation> operationBuilder8 = table.Column<DateTime>("datetime", nullable9, nullable2, false, null, false, null, null, null, nullable, null);
				nullable = null;
				OperationBuilder<AddColumnOperation> operationBuilder9 = table.Column<string>(null, new bool?(false), new int?(50), false, null, true, null, null, null, nullable, null);
				nullable = null;
				bool? nullable10 = nullable;
				nullable2 = null;
				nullable = null;
				OperationBuilder<AddColumnOperation> operationBuilder10 = table.Column<DateTime>("datetime", nullable10, nullable2, false, null, true, null, null, null, nullable, null);
				nullable = null;
				bool? nullable11 = nullable;
				nullable2 = null;
				nullable = null;
				OperationBuilder<AddColumnOperation> operationBuilder11 = table.Column<int>(null, nullable11, nullable2, false, null, false, null, null, null, nullable, null);
				nullable = null;
				return new { Id = operationBuilder, Icon = operationBuilder1, TextKeyword = operationBuilder2, Url = operationBuilder3, Description = operationBuilder4, TextDefault = operationBuilder5, Level = operationBuilder6, CreatedBy = operationBuilder7, CreatedDateTime = operationBuilder8, ModifiedBy = operationBuilder9, LastModified = operationBuilder10, Priority = operationBuilder11, Status = table.Column<string>(null, new bool?(false), new int?(50), false, null, false, null, null, null, nullable, null) };
			}, null, (table) => table.PrimaryKey("PK_mix_portal_page", (x) => x.Id), null);
			migrationBuilder.CreateTable("mix_related_attribute_data", (ColumnsBuilder table) => {
				bool? nullable = null;
				bool? nullable1 = nullable;
				nullable = null;
				OperationBuilder<AddColumnOperation> operationBuilder = table.Column<string>(null, nullable1, new int?(50), false, null, false, null, null, null, nullable, null);
				nullable = null;
				bool? nullable2 = nullable;
				nullable = null;
				OperationBuilder<AddColumnOperation> operationBuilder1 = table.Column<string>(null, nullable2, new int?(10), false, null, false, null, null, null, nullable, null);
				nullable = null;
				bool? nullable3 = nullable;
				nullable = null;
				OperationBuilder<AddColumnOperation> operationBuilder2 = table.Column<string>(null, nullable3, new int?(50), false, null, false, null, null, null, nullable, null);
				nullable = null;
				bool? nullable4 = nullable;
				nullable = null;
				OperationBuilder<AddColumnOperation> operationBuilder3 = table.Column<string>(null, nullable4, new int?(50), false, null, false, null, null, null, nullable, null);
				nullable = null;
				OperationBuilder<AddColumnOperation> operationBuilder4 = table.Column<string>(null, new bool?(false), new int?(50), false, null, false, null, null, null, nullable, null);
				nullable = null;
				bool? nullable5 = nullable;
				int? nullable6 = null;
				nullable = null;
				OperationBuilder<AddColumnOperation> operationBuilder5 = table.Column<int>(null, nullable5, nullable6, false, null, false, null, null, null, nullable, null);
				nullable = null;
				bool? nullable7 = nullable;
				nullable = null;
				OperationBuilder<AddColumnOperation> operationBuilder6 = table.Column<string>(null, nullable7, new int?(250), false, null, true, null, null, null, nullable, null);
				nullable = null;
				bool? nullable8 = nullable;
				nullable = null;
				OperationBuilder<AddColumnOperation> operationBuilder7 = table.Column<string>(null, nullable8, new int?(0x1c2), false, null, true, null, null, null, nullable, null);
				nullable = null;
				OperationBuilder<AddColumnOperation> operationBuilder8 = table.Column<string>(null, new bool?(false), new int?(50), false, null, true, null, null, null, nullable, null);
				nullable = null;
				bool? nullable9 = nullable;
				nullable6 = null;
				nullable = null;
				OperationBuilder<AddColumnOperation> operationBuilder9 = table.Column<DateTime>("datetime", nullable9, nullable6, false, null, false, null, null, null, nullable, null);
				nullable = null;
				OperationBuilder<AddColumnOperation> operationBuilder10 = table.Column<string>(null, new bool?(false), new int?(50), false, null, true, null, null, null, nullable, null);
				nullable = null;
				bool? nullable10 = nullable;
				nullable6 = null;
				nullable = null;
				OperationBuilder<AddColumnOperation> operationBuilder11 = table.Column<DateTime>("datetime", nullable10, nullable6, false, null, true, null, null, null, nullable, null);
				nullable = null;
				bool? nullable11 = nullable;
				nullable6 = null;
				nullable = null;
				OperationBuilder<AddColumnOperation> operationBuilder12 = table.Column<int>(null, nullable11, nullable6, false, null, false, null, null, null, nullable, null);
				nullable = null;
				return new { Id = operationBuilder, Specificulture = operationBuilder1, DataId = operationBuilder2, ParentId = operationBuilder3, ParentType = operationBuilder4, AttributeSetId = operationBuilder5, AttributeSetName = operationBuilder6, Description = operationBuilder7, CreatedBy = operationBuilder8, CreatedDateTime = operationBuilder9, ModifiedBy = operationBuilder10, LastModified = operationBuilder11, Priority = operationBuilder12, Status = table.Column<string>(null, new bool?(false), new int?(50), false, null, false, null, null, null, nullable, null) };
			}, null, (table) => {
				ParameterExpression parameterExpression = Expression.Parameter(typeof(u003cu003ef__AnonymousType8<OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>>), "x");
				ConstructorInfo methodFromHandle = (ConstructorInfo)MethodBase.GetMethodFromHandle(typeof(u003cu003ef__AnonymousType6<OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>>).GetMethod(".ctor", new Type[] { typeof(u003cIdu003ej__TPar), typeof(u003cSpecificultureu003ej__TPar) }).MethodHandle, typeof(u003cu003ef__AnonymousType6<OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>>).TypeHandle);
				Expression[] expressionArray = new Expression[] { Expression.Property(parameterExpression, (MethodInfo)MethodBase.GetMethodFromHandle(typeof(u003cu003ef__AnonymousType8<OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>>).GetMethod("get_Id").MethodHandle, typeof(u003cu003ef__AnonymousType8<OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>>).TypeHandle)), Expression.Property(parameterExpression, (MethodInfo)MethodBase.GetMethodFromHandle(typeof(u003cu003ef__AnonymousType8<OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>>).GetMethod("get_Specificulture").MethodHandle, typeof(u003cu003ef__AnonymousType8<OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>>).TypeHandle)) };
				MemberInfo[] memberInfoArray = new MemberInfo[] { (MethodInfo)MethodBase.GetMethodFromHandle(typeof(u003cu003ef__AnonymousType6<OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>>).GetMethod("get_Id").MethodHandle, typeof(u003cu003ef__AnonymousType6<OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>>).TypeHandle), (MethodInfo)MethodBase.GetMethodFromHandle(typeof(u003cu003ef__AnonymousType6<OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>>).GetMethod("get_Specificulture").MethodHandle, typeof(u003cu003ef__AnonymousType6<OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>>).TypeHandle) };
				table.PrimaryKey("PK_mix_related_attribute_data_1", Expression.Lambda(Expression.New(methodFromHandle, (IEnumerable<Expression>)expressionArray, memberInfoArray), new ParameterExpression[] { parameterExpression }));
			}, null);
			migrationBuilder.CreateTable("mix_related_data", (ColumnsBuilder table) => {
				bool? nullable = null;
				bool? nullable1 = nullable;
				int? nullable2 = null;
				nullable = null;
				OperationBuilder<AddColumnOperation> operationBuilder = table.Column<int>(null, nullable1, nullable2, false, null, false, null, null, null, nullable, null);
				nullable = null;
				bool? nullable3 = nullable;
				nullable = null;
				OperationBuilder<AddColumnOperation> operationBuilder1 = table.Column<string>(null, nullable3, new int?(10), false, null, false, null, null, null, nullable, null);
				nullable = null;
				bool? nullable4 = nullable;
				nullable = null;
				OperationBuilder<AddColumnOperation> operationBuilder2 = table.Column<string>(null, nullable4, new int?(50), false, null, false, null, null, null, nullable, null);
				nullable = null;
				bool? nullable5 = nullable;
				nullable2 = null;
				nullable = null;
				OperationBuilder<AddColumnOperation> operationBuilder3 = table.Column<int>(null, nullable5, nullable2, false, null, false, null, null, null, nullable, null);
				nullable = null;
				bool? nullable6 = nullable;
				nullable = null;
				OperationBuilder<AddColumnOperation> operationBuilder4 = table.Column<string>(null, nullable6, new int?(50), false, null, false, null, null, null, nullable, null);
				nullable = null;
				OperationBuilder<AddColumnOperation> operationBuilder5 = table.Column<string>(null, new bool?(false), new int?(50), false, null, false, null, null, null, nullable, null);
				nullable = null;
				bool? nullable7 = nullable;
				nullable2 = null;
				nullable = null;
				OperationBuilder<AddColumnOperation> operationBuilder6 = table.Column<int>(null, nullable7, nullable2, false, null, false, null, null, null, nullable, null);
				nullable = null;
				bool? nullable8 = nullable;
				nullable = null;
				OperationBuilder<AddColumnOperation> operationBuilder7 = table.Column<string>(null, nullable8, new int?(250), false, null, true, null, null, null, nullable, null);
				nullable = null;
				bool? nullable9 = nullable;
				nullable = null;
				OperationBuilder<AddColumnOperation> operationBuilder8 = table.Column<string>(null, nullable9, new int?(0x1c2), false, null, true, null, null, null, nullable, null);
				nullable = null;
				OperationBuilder<AddColumnOperation> operationBuilder9 = table.Column<string>(null, new bool?(false), new int?(50), false, null, true, null, null, null, nullable, null);
				nullable = null;
				bool? nullable10 = nullable;
				nullable2 = null;
				nullable = null;
				OperationBuilder<AddColumnOperation> operationBuilder10 = table.Column<DateTime>("datetime", nullable10, nullable2, false, null, false, null, null, null, nullable, null);
				nullable = null;
				OperationBuilder<AddColumnOperation> operationBuilder11 = table.Column<string>(null, new bool?(false), new int?(50), false, null, true, null, null, null, nullable, null);
				nullable = null;
				bool? nullable11 = nullable;
				nullable2 = null;
				nullable = null;
				OperationBuilder<AddColumnOperation> operationBuilder12 = table.Column<DateTime>("datetime", nullable11, nullable2, false, null, true, null, null, null, nullable, null);
				nullable = null;
				bool? nullable12 = nullable;
				nullable2 = null;
				nullable = null;
				OperationBuilder<AddColumnOperation> operationBuilder13 = table.Column<int>(null, nullable12, nullable2, false, null, false, null, null, null, nullable, null);
				nullable = null;
				return new { Id = operationBuilder, Specificulture = operationBuilder1, DataId = operationBuilder2, Type = operationBuilder3, ParentId = operationBuilder4, ParentType = operationBuilder5, AttributeSetId = operationBuilder6, AttributeSetName = operationBuilder7, Description = operationBuilder8, CreatedBy = operationBuilder9, CreatedDateTime = operationBuilder10, ModifiedBy = operationBuilder11, LastModified = operationBuilder12, Priority = operationBuilder13, Status = table.Column<string>(null, new bool?(false), new int?(50), false, null, false, null, null, null, nullable, null) };
			}, null, (table) => {
				ParameterExpression parameterExpression = Expression.Parameter(typeof(u003cu003ef__AnonymousType9<OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>>), "x");
				ConstructorInfo methodFromHandle = (ConstructorInfo)MethodBase.GetMethodFromHandle(typeof(u003cu003ef__AnonymousType6<OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>>).GetMethod(".ctor", new Type[] { typeof(u003cIdu003ej__TPar), typeof(u003cSpecificultureu003ej__TPar) }).MethodHandle, typeof(u003cu003ef__AnonymousType6<OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>>).TypeHandle);
				Expression[] expressionArray = new Expression[] { Expression.Property(parameterExpression, (MethodInfo)MethodBase.GetMethodFromHandle(typeof(u003cu003ef__AnonymousType9<OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>>).GetMethod("get_Id").MethodHandle, typeof(u003cu003ef__AnonymousType9<OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>>).TypeHandle)), Expression.Property(parameterExpression, (MethodInfo)MethodBase.GetMethodFromHandle(typeof(u003cu003ef__AnonymousType9<OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>>).GetMethod("get_Specificulture").MethodHandle, typeof(u003cu003ef__AnonymousType9<OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>>).TypeHandle)) };
				MemberInfo[] memberInfoArray = new MemberInfo[] { (MethodInfo)MethodBase.GetMethodFromHandle(typeof(u003cu003ef__AnonymousType6<OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>>).GetMethod("get_Id").MethodHandle, typeof(u003cu003ef__AnonymousType6<OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>>).TypeHandle), (MethodInfo)MethodBase.GetMethodFromHandle(typeof(u003cu003ef__AnonymousType6<OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>>).GetMethod("get_Specificulture").MethodHandle, typeof(u003cu003ef__AnonymousType6<OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>>).TypeHandle) };
				table.PrimaryKey("PK_mix_related_data", Expression.Lambda(Expression.New(methodFromHandle, (IEnumerable<Expression>)expressionArray, memberInfoArray), new ParameterExpression[] { parameterExpression }));
			}, null);
			migrationBuilder.CreateTable("mix_theme", (ColumnsBuilder table) => {
				bool? nullable = null;
				bool? nullable1 = nullable;
				int? nullable2 = null;
				nullable = null;
				OperationBuilder<AddColumnOperation> operationBuilder = table.Column<int>(null, nullable1, nullable2, false, null, false, null, null, null, nullable, null);
				nullable = null;
				bool? nullable3 = nullable;
				nullable = null;
				OperationBuilder<AddColumnOperation> operationBuilder1 = table.Column<string>(null, nullable3, new int?(250), false, null, true, null, null, null, nullable, null);
				nullable = null;
				bool? nullable4 = nullable;
				nullable = null;
				OperationBuilder<AddColumnOperation> operationBuilder2 = table.Column<string>(null, nullable4, new int?(250), false, null, true, null, null, null, nullable, null);
				nullable = null;
				bool? nullable5 = nullable;
				nullable = null;
				OperationBuilder<AddColumnOperation> operationBuilder3 = table.Column<string>(null, nullable5, new int?(250), false, null, true, null, null, null, nullable, null);
				nullable = null;
				bool? nullable6 = nullable;
				nullable = null;
				OperationBuilder<AddColumnOperation> operationBuilder4 = table.Column<string>(null, nullable6, new int?(250), false, null, false, null, null, null, nullable, null);
				nullable = null;
				bool? nullable7 = nullable;
				nullable = null;
				OperationBuilder<AddColumnOperation> operationBuilder5 = table.Column<string>(null, nullable7, new int?(0x1c2), false, null, true, null, null, null, nullable, null);
				nullable = null;
				OperationBuilder<AddColumnOperation> operationBuilder6 = table.Column<string>(null, new bool?(false), new int?(50), false, null, true, null, null, null, nullable, null);
				nullable = null;
				bool? nullable8 = nullable;
				nullable2 = null;
				nullable = null;
				OperationBuilder<AddColumnOperation> operationBuilder7 = table.Column<DateTime>("datetime", nullable8, nullable2, false, null, false, null, null, null, nullable, null);
				nullable = null;
				OperationBuilder<AddColumnOperation> operationBuilder8 = table.Column<string>(null, new bool?(false), new int?(50), false, null, true, null, null, null, nullable, null);
				nullable = null;
				bool? nullable9 = nullable;
				nullable2 = null;
				nullable = null;
				OperationBuilder<AddColumnOperation> operationBuilder9 = table.Column<DateTime>("datetime", nullable9, nullable2, false, null, true, null, null, null, nullable, null);
				nullable = null;
				bool? nullable10 = nullable;
				nullable2 = null;
				nullable = null;
				OperationBuilder<AddColumnOperation> operationBuilder10 = table.Column<int>(null, nullable10, nullable2, false, null, false, null, null, null, nullable, null);
				nullable = null;
				return new { Id = operationBuilder, Thumbnail = operationBuilder1, Image = operationBuilder2, Title = operationBuilder3, Name = operationBuilder4, PreviewUrl = operationBuilder5, CreatedBy = operationBuilder6, CreatedDateTime = operationBuilder7, ModifiedBy = operationBuilder8, LastModified = operationBuilder9, Priority = operationBuilder10, Status = table.Column<string>(null, new bool?(false), new int?(50), false, null, false, null, null, null, nullable, null) };
			}, null, (table) => table.PrimaryKey("PK_mix_theme", (x) => x.Id), null);
			migrationBuilder.CreateTable("mix_attribute_field", (ColumnsBuilder table) => {
				bool? nullable = null;
				bool? nullable1 = nullable;
				int? nullable2 = null;
				nullable = null;
				OperationBuilder<AddColumnOperation> operationBuilder = table.Column<int>(null, nullable1, nullable2, false, null, false, null, null, null, nullable, null);
				nullable = null;
				bool? nullable3 = nullable;
				nullable2 = null;
				nullable = null;
				OperationBuilder<AddColumnOperation> operationBuilder1 = table.Column<int>(null, nullable3, nullable2, false, null, false, null, null, null, nullable, null);
				nullable = null;
				bool? nullable4 = nullable;
				nullable = null;
				OperationBuilder<AddColumnOperation> operationBuilder2 = table.Column<string>(null, nullable4, new int?(250), false, null, true, null, null, null, nullable, null);
				nullable = null;
				bool? nullable5 = nullable;
				nullable = null;
				OperationBuilder<AddColumnOperation> operationBuilder3 = table.Column<string>(null, nullable5, new int?(250), false, null, true, null, null, null, nullable, null);
				nullable = null;
				bool? nullable6 = nullable;
				nullable = null;
				OperationBuilder<AddColumnOperation> operationBuilder4 = table.Column<string>(null, nullable6, new int?(250), false, null, true, null, null, null, nullable, null);
				nullable = null;
				bool? nullable7 = nullable;
				nullable2 = null;
				nullable = null;
				OperationBuilder<AddColumnOperation> operationBuilder5 = table.Column<int>(null, nullable7, nullable2, false, null, false, null, null, null, nullable, null);
				nullable = null;
				bool? nullable8 = nullable;
				nullable2 = null;
				nullable = null;
				OperationBuilder<AddColumnOperation> operationBuilder6 = table.Column<string>("text", nullable8, nullable2, false, null, true, null, null, null, nullable, null);
				nullable = null;
				bool? nullable9 = nullable;
				nullable = null;
				OperationBuilder<AddColumnOperation> operationBuilder7 = table.Column<string>(null, nullable9, new int?(250), false, null, false, null, null, null, nullable, null);
				nullable = null;
				bool? nullable10 = nullable;
				nullable2 = null;
				nullable = null;
				OperationBuilder<AddColumnOperation> operationBuilder8 = table.Column<string>("text", nullable10, nullable2, false, null, true, null, null, null, nullable, null);
				nullable = null;
				bool? nullable11 = nullable;
				nullable2 = null;
				nullable = null;
				OperationBuilder<AddColumnOperation> operationBuilder9 = table.Column<bool>(null, nullable11, nullable2, false, null, false, null, null, null, nullable, null);
				nullable = null;
				bool? nullable12 = nullable;
				nullable2 = null;
				nullable = null;
				OperationBuilder<AddColumnOperation> operationBuilder10 = table.Column<bool>(null, nullable12, nullable2, false, null, false, null, null, null, nullable, null);
				nullable = null;
				bool? nullable13 = nullable;
				nullable2 = null;
				nullable = null;
				OperationBuilder<AddColumnOperation> operationBuilder11 = table.Column<bool>(null, nullable13, nullable2, false, null, false, null, null, null, nullable, null);
				nullable = null;
				bool? nullable14 = nullable;
				nullable2 = null;
				nullable = null;
				OperationBuilder<AddColumnOperation> operationBuilder12 = table.Column<bool>(null, nullable14, nullable2, false, null, false, null, null, null, nullable, null);
				nullable = null;
				bool? nullable15 = nullable;
				nullable2 = null;
				nullable = null;
				OperationBuilder<AddColumnOperation> operationBuilder13 = table.Column<bool>(null, nullable15, nullable2, false, null, false, null, null, null, nullable, null);
				nullable = null;
				bool? nullable16 = nullable;
				nullable2 = null;
				nullable = null;
				OperationBuilder<AddColumnOperation> operationBuilder14 = table.Column<int>(null, nullable16, nullable2, false, null, true, null, null, null, nullable, null);
				nullable = null;
				OperationBuilder<AddColumnOperation> operationBuilder15 = table.Column<string>(null, new bool?(false), new int?(50), false, null, true, null, null, null, nullable, null);
				nullable = null;
				OperationBuilder<AddColumnOperation> operationBuilder16 = table.Column<string>(null, new bool?(false), new int?(50), false, null, true, null, null, null, nullable, null);
				nullable = null;
				bool? nullable17 = nullable;
				nullable2 = null;
				nullable = null;
				OperationBuilder<AddColumnOperation> operationBuilder17 = table.Column<DateTime>("datetime", nullable17, nullable2, false, null, true, null, null, null, nullable, null);
				nullable = null;
				bool? nullable18 = nullable;
				nullable2 = null;
				nullable = null;
				OperationBuilder<AddColumnOperation> operationBuilder18 = table.Column<DateTime>("datetime", nullable18, nullable2, false, null, false, null, null, null, nullable, null);
				nullable = null;
				bool? nullable19 = nullable;
				nullable2 = null;
				nullable = null;
				OperationBuilder<AddColumnOperation> operationBuilder19 = table.Column<int>(null, nullable19, nullable2, false, null, false, null, null, null, nullable, null);
				nullable = null;
				return new { Id = operationBuilder, AttributeSetId = operationBuilder1, AttributeSetName = operationBuilder2, Regex = operationBuilder3, Title = operationBuilder4, DataType = operationBuilder5, DefaultValue = operationBuilder6, Name = operationBuilder7, Options = operationBuilder8, IsRequire = operationBuilder9, IsEncrypt = operationBuilder10, IsMultiple = operationBuilder11, IsSelect = operationBuilder12, IsUnique = operationBuilder13, ReferenceId = operationBuilder14, ModifiedBy = operationBuilder15, CreatedBy = operationBuilder16, LastModified = operationBuilder17, CreatedDateTime = operationBuilder18, Priority = operationBuilder19, Status = table.Column<string>(null, new bool?(false), new int?(50), false, null, false, null, null, null, nullable, null) };
			}, null, (table) => {
				table.PrimaryKey("PK_mix_attribute_field", (x) => x.Id);
				table.ForeignKey("FK_mix_attribute_field_mix_attribute_set", (x) => x.AttributeSetId, "mix_attribute_set", "Id", null, 0, 1);
				table.ForeignKey("FK_mix_attribute_field_mix_attribute_set1", (x) => x.ReferenceId, "mix_attribute_set", "Id", null, 0, 1);
			}, null);
			migrationBuilder.CreateTable("mix_attribute_set_data", (ColumnsBuilder table) => {
				bool? nullable = null;
				bool? nullable1 = nullable;
				nullable = null;
				OperationBuilder<AddColumnOperation> operationBuilder = table.Column<string>(null, nullable1, new int?(50), false, null, false, null, null, null, nullable, null);
				nullable = null;
				bool? nullable2 = nullable;
				nullable = null;
				OperationBuilder<AddColumnOperation> operationBuilder1 = table.Column<string>(null, nullable2, new int?(10), false, null, false, null, null, null, nullable, null);
				nullable = null;
				bool? nullable3 = nullable;
				int? nullable4 = null;
				nullable = null;
				OperationBuilder<AddColumnOperation> operationBuilder2 = table.Column<int>(null, nullable3, nullable4, false, null, false, null, null, null, nullable, null);
				nullable = null;
				bool? nullable5 = nullable;
				nullable = null;
				OperationBuilder<AddColumnOperation> operationBuilder3 = table.Column<string>(null, nullable5, new int?(250), false, null, true, null, null, null, nullable, null);
				nullable = null;
				OperationBuilder<AddColumnOperation> operationBuilder4 = table.Column<string>(null, new bool?(false), new int?(50), false, null, true, null, null, null, nullable, null);
				nullable = null;
				OperationBuilder<AddColumnOperation> operationBuilder5 = table.Column<string>(null, new bool?(false), new int?(50), false, null, true, null, null, null, nullable, null);
				nullable = null;
				bool? nullable6 = nullable;
				nullable4 = null;
				nullable = null;
				OperationBuilder<AddColumnOperation> operationBuilder6 = table.Column<DateTime>("datetime", nullable6, nullable4, false, null, true, null, null, null, nullable, null);
				nullable = null;
				bool? nullable7 = nullable;
				nullable4 = null;
				nullable = null;
				OperationBuilder<AddColumnOperation> operationBuilder7 = table.Column<DateTime>("datetime", nullable7, nullable4, false, null, false, null, null, null, nullable, null);
				nullable = null;
				bool? nullable8 = nullable;
				nullable4 = null;
				nullable = null;
				OperationBuilder<AddColumnOperation> operationBuilder8 = table.Column<int>(null, nullable8, nullable4, false, null, false, null, null, null, nullable, null);
				nullable = null;
				return new { Id = operationBuilder, Specificulture = operationBuilder1, AttributeSetId = operationBuilder2, AttributeSetName = operationBuilder3, ModifiedBy = operationBuilder4, CreatedBy = operationBuilder5, LastModified = operationBuilder6, CreatedDateTime = operationBuilder7, Priority = operationBuilder8, Status = table.Column<string>(null, new bool?(false), new int?(50), false, null, false, null, null, null, nullable, null) };
			}, null, (table) => {
				ParameterExpression parameterExpression = Expression.Parameter(typeof(u003cu003ef__AnonymousType12<OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>>), "x");
				ConstructorInfo methodFromHandle = (ConstructorInfo)MethodBase.GetMethodFromHandle(typeof(u003cu003ef__AnonymousType6<OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>>).GetMethod(".ctor", new Type[] { typeof(u003cIdu003ej__TPar), typeof(u003cSpecificultureu003ej__TPar) }).MethodHandle, typeof(u003cu003ef__AnonymousType6<OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>>).TypeHandle);
				Expression[] expressionArray = new Expression[] { Expression.Property(parameterExpression, (MethodInfo)MethodBase.GetMethodFromHandle(typeof(u003cu003ef__AnonymousType12<OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>>).GetMethod("get_Id").MethodHandle, typeof(u003cu003ef__AnonymousType12<OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>>).TypeHandle)), Expression.Property(parameterExpression, (MethodInfo)MethodBase.GetMethodFromHandle(typeof(u003cu003ef__AnonymousType12<OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>>).GetMethod("get_Specificulture").MethodHandle, typeof(u003cu003ef__AnonymousType12<OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>>).TypeHandle)) };
				MemberInfo[] memberInfoArray = new MemberInfo[] { (MethodInfo)MethodBase.GetMethodFromHandle(typeof(u003cu003ef__AnonymousType6<OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>>).GetMethod("get_Id").MethodHandle, typeof(u003cu003ef__AnonymousType6<OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>>).TypeHandle), (MethodInfo)MethodBase.GetMethodFromHandle(typeof(u003cu003ef__AnonymousType6<OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>>).GetMethod("get_Specificulture").MethodHandle, typeof(u003cu003ef__AnonymousType6<OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>>).TypeHandle) };
				table.PrimaryKey("PK_mix_attribute_set_data", Expression.Lambda(Expression.New(methodFromHandle, (IEnumerable<Expression>)expressionArray, memberInfoArray), new ParameterExpression[] { parameterExpression }));
				parameterExpression = Expression.Parameter(typeof(u003cu003ef__AnonymousType12<OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>>), "x");
				table.ForeignKey("FK_mix_attribute_set_data_mix_attribute_set", Expression.Lambda(Expression.Property(parameterExpression, (MethodInfo)MethodBase.GetMethodFromHandle(typeof(u003cu003ef__AnonymousType12<OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>>).GetMethod("get_AttributeSetId").MethodHandle, typeof(u003cu003ef__AnonymousType12<OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>>).TypeHandle)), new ParameterExpression[] { parameterExpression }), "mix_attribute_set", "Id", null, 0, 1);
			}, null);
			migrationBuilder.CreateTable("mix_attribute_set_reference", (ColumnsBuilder table) => {
				bool? nullable = null;
				bool? nullable1 = nullable;
				int? nullable2 = null;
				nullable = null;
				OperationBuilder<AddColumnOperation> operationBuilder = table.Column<int>(null, nullable1, nullable2, false, null, false, null, null, null, nullable, null);
				nullable = null;
				bool? nullable3 = nullable;
				nullable2 = null;
				nullable = null;
				OperationBuilder<AddColumnOperation> operationBuilder1 = table.Column<int>(null, nullable3, nullable2, false, null, false, null, null, null, nullable, null);
				nullable = null;
				bool? nullable4 = nullable;
				nullable2 = null;
				nullable = null;
				OperationBuilder<AddColumnOperation> operationBuilder2 = table.Column<int>(null, nullable4, nullable2, false, null, false, null, null, null, nullable, null);
				nullable = null;
				bool? nullable5 = nullable;
				nullable = null;
				OperationBuilder<AddColumnOperation> operationBuilder3 = table.Column<string>(null, nullable5, new int?(0x1c2), false, null, true, null, null, null, nullable, null);
				nullable = null;
				bool? nullable6 = nullable;
				nullable = null;
				OperationBuilder<AddColumnOperation> operationBuilder4 = table.Column<string>(null, nullable6, new int?(0x1c2), false, null, true, null, null, null, nullable, null);
				nullable = null;
				bool? nullable7 = nullable;
				nullable2 = null;
				nullable = null;
				OperationBuilder<AddColumnOperation> operationBuilder5 = table.Column<int>(null, nullable7, nullable2, false, null, false, null, null, null, nullable, null);
				nullable = null;
				OperationBuilder<AddColumnOperation> operationBuilder6 = table.Column<string>(null, new bool?(false), new int?(50), false, null, true, null, null, null, nullable, null);
				nullable = null;
				OperationBuilder<AddColumnOperation> operationBuilder7 = table.Column<string>(null, new bool?(false), new int?(50), false, null, true, null, null, null, nullable, null);
				nullable = null;
				bool? nullable8 = nullable;
				nullable2 = null;
				nullable = null;
				OperationBuilder<AddColumnOperation> operationBuilder8 = table.Column<DateTime>("datetime", nullable8, nullable2, false, null, true, null, null, null, nullable, null);
				nullable = null;
				bool? nullable9 = nullable;
				nullable2 = null;
				nullable = null;
				OperationBuilder<AddColumnOperation> operationBuilder9 = table.Column<DateTime>("datetime", nullable9, nullable2, false, null, false, null, null, null, nullable, null);
				nullable = null;
				bool? nullable10 = nullable;
				nullable2 = null;
				nullable = null;
				OperationBuilder<AddColumnOperation> operationBuilder10 = table.Column<int>(null, nullable10, nullable2, false, null, false, null, null, null, nullable, null);
				nullable = null;
				return new { Id = operationBuilder, ParentId = operationBuilder1, ParentType = operationBuilder2, Description = operationBuilder3, Image = operationBuilder4, AttributeSetId = operationBuilder5, ModifiedBy = operationBuilder6, CreatedBy = operationBuilder7, LastModified = operationBuilder8, CreatedDateTime = operationBuilder9, Priority = operationBuilder10, Status = table.Column<string>(null, new bool?(false), new int?(50), false, null, false, null, null, null, nullable, null) };
			}, null, (table) => {
				table.PrimaryKey("PK_mix_attribute_set_reference", (x) => x.Id);
				table.ForeignKey("FK_mix_attribute_set_reference_mix_attribute_set", (x) => x.AttributeSetId, "mix_attribute_set", "Id", null, 0, 1);
			}, null);
			migrationBuilder.CreateTable("mix_related_attribute_set", (ColumnsBuilder table) => {
				bool? nullable = null;
				bool? nullable1 = nullable;
				int? nullable2 = null;
				nullable = null;
				OperationBuilder<AddColumnOperation> operationBuilder = table.Column<int>(null, nullable1, nullable2, false, null, false, null, null, null, nullable, null);
				nullable = null;
				bool? nullable3 = nullable;
				nullable = null;
				OperationBuilder<AddColumnOperation> operationBuilder1 = table.Column<string>(null, nullable3, new int?(10), false, null, false, null, null, null, nullable, null);
				nullable = null;
				bool? nullable4 = nullable;
				nullable2 = null;
				nullable = null;
				OperationBuilder<AddColumnOperation> operationBuilder2 = table.Column<int>(null, nullable4, nullable2, false, null, false, null, null, null, nullable, null);
				nullable = null;
				bool? nullable5 = nullable;
				nullable2 = null;
				nullable = null;
				OperationBuilder<AddColumnOperation> operationBuilder3 = table.Column<int>(null, nullable5, nullable2, false, null, false, null, null, null, nullable, null);
				nullable = null;
				OperationBuilder<AddColumnOperation> operationBuilder4 = table.Column<string>(null, new bool?(false), new int?(50), false, null, false, null, null, null, nullable, null);
				nullable = null;
				bool? nullable6 = nullable;
				nullable = null;
				OperationBuilder<AddColumnOperation> operationBuilder5 = table.Column<string>(null, nullable6, new int?(0x1c2), false, null, true, null, null, null, nullable, null);
				nullable = null;
				bool? nullable7 = nullable;
				nullable = null;
				OperationBuilder<AddColumnOperation> operationBuilder6 = table.Column<string>(null, nullable7, new int?(0x1c2), false, null, true, null, null, null, nullable, null);
				nullable = null;
				OperationBuilder<AddColumnOperation> operationBuilder7 = table.Column<string>(null, new bool?(false), new int?(50), false, null, true, null, null, null, nullable, null);
				nullable = null;
				bool? nullable8 = nullable;
				nullable2 = null;
				nullable = null;
				OperationBuilder<AddColumnOperation> operationBuilder8 = table.Column<DateTime>("datetime", nullable8, nullable2, false, null, false, null, null, null, nullable, null);
				nullable = null;
				OperationBuilder<AddColumnOperation> operationBuilder9 = table.Column<string>(null, new bool?(false), new int?(50), false, null, true, null, null, null, nullable, null);
				nullable = null;
				bool? nullable9 = nullable;
				nullable2 = null;
				nullable = null;
				OperationBuilder<AddColumnOperation> operationBuilder10 = table.Column<DateTime>("datetime", nullable9, nullable2, false, null, true, null, null, null, nullable, null);
				nullable = null;
				bool? nullable10 = nullable;
				nullable2 = null;
				nullable = null;
				OperationBuilder<AddColumnOperation> operationBuilder11 = table.Column<int>(null, nullable10, nullable2, false, null, false, null, null, null, nullable, null);
				nullable = null;
				return new { Id = operationBuilder, Specificulture = operationBuilder1, SetId = operationBuilder2, ParentId = operationBuilder3, ParentType = operationBuilder4, Description = operationBuilder5, Image = operationBuilder6, CreatedBy = operationBuilder7, CreatedDateTime = operationBuilder8, ModifiedBy = operationBuilder9, LastModified = operationBuilder10, Priority = operationBuilder11, Status = table.Column<string>(null, new bool?(false), new int?(50), false, null, false, null, null, null, nullable, null) };
			}, null, (table) => {
				ParameterExpression parameterExpression = Expression.Parameter(typeof(u003cu003ef__AnonymousType14<OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>>), "x");
				ConstructorInfo methodFromHandle = (ConstructorInfo)MethodBase.GetMethodFromHandle(typeof(u003cu003ef__AnonymousType6<OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>>).GetMethod(".ctor", new Type[] { typeof(u003cIdu003ej__TPar), typeof(u003cSpecificultureu003ej__TPar) }).MethodHandle, typeof(u003cu003ef__AnonymousType6<OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>>).TypeHandle);
				Expression[] expressionArray = new Expression[] { Expression.Property(parameterExpression, (MethodInfo)MethodBase.GetMethodFromHandle(typeof(u003cu003ef__AnonymousType14<OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>>).GetMethod("get_Id").MethodHandle, typeof(u003cu003ef__AnonymousType14<OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>>).TypeHandle)), Expression.Property(parameterExpression, (MethodInfo)MethodBase.GetMethodFromHandle(typeof(u003cu003ef__AnonymousType14<OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>>).GetMethod("get_Specificulture").MethodHandle, typeof(u003cu003ef__AnonymousType14<OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>>).TypeHandle)) };
				MemberInfo[] memberInfoArray = new MemberInfo[] { (MethodInfo)MethodBase.GetMethodFromHandle(typeof(u003cu003ef__AnonymousType6<OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>>).GetMethod("get_Id").MethodHandle, typeof(u003cu003ef__AnonymousType6<OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>>).TypeHandle), (MethodInfo)MethodBase.GetMethodFromHandle(typeof(u003cu003ef__AnonymousType6<OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>>).GetMethod("get_Specificulture").MethodHandle, typeof(u003cu003ef__AnonymousType6<OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>>).TypeHandle) };
				table.PrimaryKey("PK_mix_related_attribute_set", Expression.Lambda(Expression.New(methodFromHandle, (IEnumerable<Expression>)expressionArray, memberInfoArray), new ParameterExpression[] { parameterExpression }));
				parameterExpression = Expression.Parameter(typeof(u003cu003ef__AnonymousType14<OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>>), "x");
				table.ForeignKey("FK_mix_related_attribute_set_mix_attribute_set", Expression.Lambda(Expression.Property(parameterExpression, (MethodInfo)MethodBase.GetMethodFromHandle(typeof(u003cu003ef__AnonymousType14<OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>>).GetMethod("get_Id").MethodHandle, typeof(u003cu003ef__AnonymousType14<OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>>).TypeHandle)), new ParameterExpression[] { parameterExpression }), "mix_attribute_set", "Id", null, 0, 1);
			}, null);
			migrationBuilder.CreateTable("mix_configuration", (ColumnsBuilder table) => {
				bool? nullable = null;
				bool? nullable1 = nullable;
				int? nullable2 = null;
				nullable = null;
				OperationBuilder<AddColumnOperation> operationBuilder = table.Column<int>(null, nullable1, nullable2, false, null, false, null, null, null, nullable, null);
				nullable = null;
				bool? nullable3 = nullable;
				nullable = null;
				OperationBuilder<AddColumnOperation> operationBuilder1 = table.Column<string>(null, nullable3, new int?(10), false, null, false, null, null, null, nullable, null);
				nullable = null;
				bool? nullable4 = nullable;
				nullable = null;
				OperationBuilder<AddColumnOperation> operationBuilder2 = table.Column<string>(null, nullable4, new int?(50), false, null, false, null, null, null, nullable, null);
				nullable = null;
				bool? nullable5 = nullable;
				nullable = null;
				OperationBuilder<AddColumnOperation> operationBuilder3 = table.Column<string>(null, nullable5, new int?(250), false, null, true, null, null, null, nullable, null);
				nullable = null;
				bool? nullable6 = nullable;
				nullable2 = null;
				nullable = null;
				OperationBuilder<AddColumnOperation> operationBuilder4 = table.Column<int>(null, nullable6, nullable2, false, null, false, null, null, null, nullable, null);
				nullable = null;
				bool? nullable7 = nullable;
				nullable = null;
				OperationBuilder<AddColumnOperation> operationBuilder5 = table.Column<string>(null, nullable7, new int?(250), false, null, true, null, null, null, nullable, null);
				nullable = null;
				bool? nullable8 = nullable;
				nullable = null;
				OperationBuilder<AddColumnOperation> operationBuilder6 = table.Column<string>(null, nullable8, new int?(0xfa0), false, null, true, null, null, null, nullable, null);
				nullable = null;
				OperationBuilder<AddColumnOperation> operationBuilder7 = table.Column<string>(null, new bool?(false), new int?(50), false, null, true, null, null, null, nullable, null);
				nullable = null;
				bool? nullable9 = nullable;
				nullable2 = null;
				nullable = null;
				OperationBuilder<AddColumnOperation> operationBuilder8 = table.Column<DateTime>("datetime", nullable9, nullable2, false, null, false, null, null, null, nullable, null);
				nullable = null;
				OperationBuilder<AddColumnOperation> operationBuilder9 = table.Column<string>(null, new bool?(false), new int?(50), false, null, true, null, null, null, nullable, null);
				nullable = null;
				bool? nullable10 = nullable;
				nullable2 = null;
				nullable = null;
				OperationBuilder<AddColumnOperation> operationBuilder10 = table.Column<DateTime>("datetime", nullable10, nullable2, false, null, true, null, null, null, nullable, null);
				nullable = null;
				bool? nullable11 = nullable;
				nullable2 = null;
				nullable = null;
				OperationBuilder<AddColumnOperation> operationBuilder11 = table.Column<int>(null, nullable11, nullable2, false, null, false, null, null, null, nullable, null);
				nullable = null;
				return new { Id = operationBuilder, Specificulture = operationBuilder1, Keyword = operationBuilder2, Category = operationBuilder3, DataType = operationBuilder4, Description = operationBuilder5, Value = operationBuilder6, CreatedBy = operationBuilder7, CreatedDateTime = operationBuilder8, ModifiedBy = operationBuilder9, LastModified = operationBuilder10, Priority = operationBuilder11, Status = table.Column<string>(null, new bool?(false), new int?(50), false, null, false, null, null, null, nullable, null) };
			}, null, (table) => {
				ParameterExpression parameterExpression = Expression.Parameter(typeof(u003cu003ef__AnonymousType15<OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>>), "x");
				ConstructorInfo methodFromHandle = (ConstructorInfo)MethodBase.GetMethodFromHandle(typeof(u003cu003ef__AnonymousType6<OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>>).GetMethod(".ctor", new Type[] { typeof(u003cIdu003ej__TPar), typeof(u003cSpecificultureu003ej__TPar) }).MethodHandle, typeof(u003cu003ef__AnonymousType6<OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>>).TypeHandle);
				Expression[] expressionArray = new Expression[] { Expression.Property(parameterExpression, (MethodInfo)MethodBase.GetMethodFromHandle(typeof(u003cu003ef__AnonymousType15<OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>>).GetMethod("get_Id").MethodHandle, typeof(u003cu003ef__AnonymousType15<OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>>).TypeHandle)), Expression.Property(parameterExpression, (MethodInfo)MethodBase.GetMethodFromHandle(typeof(u003cu003ef__AnonymousType15<OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>>).GetMethod("get_Specificulture").MethodHandle, typeof(u003cu003ef__AnonymousType15<OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>>).TypeHandle)) };
				MemberInfo[] memberInfoArray = new MemberInfo[] { (MethodInfo)MethodBase.GetMethodFromHandle(typeof(u003cu003ef__AnonymousType6<OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>>).GetMethod("get_Id").MethodHandle, typeof(u003cu003ef__AnonymousType6<OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>>).TypeHandle), (MethodInfo)MethodBase.GetMethodFromHandle(typeof(u003cu003ef__AnonymousType6<OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>>).GetMethod("get_Specificulture").MethodHandle, typeof(u003cu003ef__AnonymousType6<OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>>).TypeHandle) };
				table.PrimaryKey("PK_mix_configuration_1", Expression.Lambda(Expression.New(methodFromHandle, (IEnumerable<Expression>)expressionArray, memberInfoArray), new ParameterExpression[] { parameterExpression }));
				parameterExpression = Expression.Parameter(typeof(u003cu003ef__AnonymousType15<OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>>), "x");
				table.ForeignKey("FK_Mix_Configuration_Mix_Culture", Expression.Lambda(Expression.Property(parameterExpression, (MethodInfo)MethodBase.GetMethodFromHandle(typeof(u003cu003ef__AnonymousType15<OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>>).GetMethod("get_Specificulture").MethodHandle, typeof(u003cu003ef__AnonymousType15<OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>>).TypeHandle)), new ParameterExpression[] { parameterExpression }), "mix_culture", "Specificulture", null, 0, 2);
			}, null);
			migrationBuilder.CreateTable("mix_language", (ColumnsBuilder table) => {
				bool? nullable = null;
				bool? nullable1 = nullable;
				int? nullable2 = null;
				nullable = null;
				OperationBuilder<AddColumnOperation> operationBuilder = table.Column<int>(null, nullable1, nullable2, false, null, false, null, null, null, nullable, null);
				nullable = null;
				bool? nullable3 = nullable;
				nullable = null;
				OperationBuilder<AddColumnOperation> operationBuilder1 = table.Column<string>(null, nullable3, new int?(10), false, null, false, null, null, null, nullable, null);
				nullable = null;
				bool? nullable4 = nullable;
				nullable = null;
				OperationBuilder<AddColumnOperation> operationBuilder2 = table.Column<string>(null, nullable4, new int?(50), false, null, false, null, null, null, nullable, null);
				nullable = null;
				bool? nullable5 = nullable;
				nullable = null;
				OperationBuilder<AddColumnOperation> operationBuilder3 = table.Column<string>(null, nullable5, new int?(250), false, null, true, null, null, null, nullable, null);
				nullable = null;
				bool? nullable6 = nullable;
				nullable2 = null;
				nullable = null;
				OperationBuilder<AddColumnOperation> operationBuilder4 = table.Column<int>(null, nullable6, nullable2, false, null, false, null, null, null, nullable, null);
				nullable = null;
				bool? nullable7 = nullable;
				nullable = null;
				OperationBuilder<AddColumnOperation> operationBuilder5 = table.Column<string>(null, nullable7, new int?(250), false, null, true, null, null, null, nullable, null);
				nullable = null;
				bool? nullable8 = nullable;
				nullable = null;
				OperationBuilder<AddColumnOperation> operationBuilder6 = table.Column<string>(null, nullable8, new int?(0xfa0), false, null, true, null, null, null, nullable, null);
				nullable = null;
				bool? nullable9 = nullable;
				nullable = null;
				OperationBuilder<AddColumnOperation> operationBuilder7 = table.Column<string>(null, nullable9, new int?(250), false, null, true, null, null, null, nullable, null);
				nullable = null;
				OperationBuilder<AddColumnOperation> operationBuilder8 = table.Column<string>(null, new bool?(false), new int?(50), false, null, true, null, null, null, nullable, null);
				nullable = null;
				bool? nullable10 = nullable;
				nullable2 = null;
				nullable = null;
				OperationBuilder<AddColumnOperation> operationBuilder9 = table.Column<DateTime>("datetime", nullable10, nullable2, false, null, false, null, null, null, nullable, null);
				nullable = null;
				OperationBuilder<AddColumnOperation> operationBuilder10 = table.Column<string>(null, new bool?(false), new int?(50), false, null, true, null, null, null, nullable, null);
				nullable = null;
				bool? nullable11 = nullable;
				nullable2 = null;
				nullable = null;
				OperationBuilder<AddColumnOperation> operationBuilder11 = table.Column<DateTime>("datetime", nullable11, nullable2, false, null, true, null, null, null, nullable, null);
				nullable = null;
				bool? nullable12 = nullable;
				nullable2 = null;
				nullable = null;
				OperationBuilder<AddColumnOperation> operationBuilder12 = table.Column<int>(null, nullable12, nullable2, false, null, false, null, null, null, nullable, null);
				nullable = null;
				return new { Id = operationBuilder, Specificulture = operationBuilder1, Keyword = operationBuilder2, Category = operationBuilder3, DataType = operationBuilder4, Description = operationBuilder5, Value = operationBuilder6, DefaultValue = operationBuilder7, CreatedBy = operationBuilder8, CreatedDateTime = operationBuilder9, ModifiedBy = operationBuilder10, LastModified = operationBuilder11, Priority = operationBuilder12, Status = table.Column<string>(null, new bool?(false), new int?(50), false, null, false, null, null, null, nullable, null) };
			}, null, (table) => {
				ParameterExpression parameterExpression = Expression.Parameter(typeof(u003cu003ef__AnonymousType16<OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>>), "x");
				ConstructorInfo methodFromHandle = (ConstructorInfo)MethodBase.GetMethodFromHandle(typeof(u003cu003ef__AnonymousType6<OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>>).GetMethod(".ctor", new Type[] { typeof(u003cIdu003ej__TPar), typeof(u003cSpecificultureu003ej__TPar) }).MethodHandle, typeof(u003cu003ef__AnonymousType6<OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>>).TypeHandle);
				Expression[] expressionArray = new Expression[] { Expression.Property(parameterExpression, (MethodInfo)MethodBase.GetMethodFromHandle(typeof(u003cu003ef__AnonymousType16<OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>>).GetMethod("get_Id").MethodHandle, typeof(u003cu003ef__AnonymousType16<OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>>).TypeHandle)), Expression.Property(parameterExpression, (MethodInfo)MethodBase.GetMethodFromHandle(typeof(u003cu003ef__AnonymousType16<OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>>).GetMethod("get_Specificulture").MethodHandle, typeof(u003cu003ef__AnonymousType16<OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>>).TypeHandle)) };
				MemberInfo[] memberInfoArray = new MemberInfo[] { (MethodInfo)MethodBase.GetMethodFromHandle(typeof(u003cu003ef__AnonymousType6<OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>>).GetMethod("get_Id").MethodHandle, typeof(u003cu003ef__AnonymousType6<OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>>).TypeHandle), (MethodInfo)MethodBase.GetMethodFromHandle(typeof(u003cu003ef__AnonymousType6<OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>>).GetMethod("get_Specificulture").MethodHandle, typeof(u003cu003ef__AnonymousType6<OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>>).TypeHandle) };
				table.PrimaryKey("PK_mix_language_1", Expression.Lambda(Expression.New(methodFromHandle, (IEnumerable<Expression>)expressionArray, memberInfoArray), new ParameterExpression[] { parameterExpression }));
				parameterExpression = Expression.Parameter(typeof(u003cu003ef__AnonymousType16<OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>>), "x");
				table.ForeignKey("FK_Mix_Language_Mix_Culture", Expression.Lambda(Expression.Property(parameterExpression, (MethodInfo)MethodBase.GetMethodFromHandle(typeof(u003cu003ef__AnonymousType16<OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>>).GetMethod("get_Specificulture").MethodHandle, typeof(u003cu003ef__AnonymousType16<OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>>).TypeHandle)), new ParameterExpression[] { parameterExpression }), "mix_culture", "Specificulture", null, 0, 2);
			}, null);
			migrationBuilder.CreateTable("mix_module", (ColumnsBuilder table) => {
				bool? nullable = null;
				bool? nullable1 = nullable;
				int? nullable2 = null;
				nullable = null;
				OperationBuilder<AddColumnOperation> operationBuilder = table.Column<int>(null, nullable1, nullable2, false, null, false, null, null, null, nullable, null);
				nullable = null;
				bool? nullable3 = nullable;
				nullable = null;
				OperationBuilder<AddColumnOperation> operationBuilder1 = table.Column<string>(null, nullable3, new int?(10), false, null, false, null, null, null, nullable, null);
				nullable = null;
				bool? nullable4 = nullable;
				nullable = null;
				OperationBuilder<AddColumnOperation> operationBuilder2 = table.Column<string>(null, nullable4, new int?(0xfa0), false, null, true, null, null, null, nullable, null);
				nullable = null;
				bool? nullable5 = nullable;
				nullable = null;
				OperationBuilder<AddColumnOperation> operationBuilder3 = table.Column<string>(null, nullable5, new int?(0xfa0), false, null, true, null, null, null, nullable, null);
				nullable = null;
				bool? nullable6 = nullable;
				nullable = null;
				OperationBuilder<AddColumnOperation> operationBuilder4 = table.Column<string>(null, nullable6, new int?(250), false, null, true, null, null, null, nullable, null);
				nullable = null;
				bool? nullable7 = nullable;
				nullable = null;
				OperationBuilder<AddColumnOperation> operationBuilder5 = table.Column<string>(null, nullable7, new int?(250), false, null, true, null, null, null, nullable, null);
				nullable = null;
				bool? nullable8 = nullable;
				nullable = null;
				OperationBuilder<AddColumnOperation> operationBuilder6 = table.Column<string>(null, nullable8, new int?(50), false, null, false, null, null, null, nullable, null);
				nullable = null;
				bool? nullable9 = nullable;
				nullable = null;
				OperationBuilder<AddColumnOperation> operationBuilder7 = table.Column<string>(null, nullable9, new int?(250), false, null, true, null, null, null, nullable, null);
				nullable = null;
				bool? nullable10 = nullable;
				nullable = null;
				OperationBuilder<AddColumnOperation> operationBuilder8 = table.Column<string>(null, nullable10, new int?(250), false, null, true, null, null, null, nullable, null);
				nullable = null;
				bool? nullable11 = nullable;
				nullable = null;
				OperationBuilder<AddColumnOperation> operationBuilder9 = table.Column<string>(null, nullable11, new int?(250), false, null, true, null, null, null, nullable, null);
				nullable = null;
				bool? nullable12 = nullable;
				nullable = null;
				OperationBuilder<AddColumnOperation> operationBuilder10 = table.Column<string>(null, nullable12, new int?(250), false, null, true, null, null, null, nullable, null);
				nullable = null;
				bool? nullable13 = nullable;
				nullable2 = null;
				nullable = null;
				OperationBuilder<AddColumnOperation> operationBuilder11 = table.Column<int>(null, nullable13, nullable2, false, null, false, null, null, null, nullable, null);
				nullable = null;
				bool? nullable14 = nullable;
				nullable2 = null;
				nullable = null;
				OperationBuilder<AddColumnOperation> operationBuilder12 = table.Column<int>(null, nullable14, nullable2, false, null, true, null, null, null, nullable, null);
				nullable = null;
				OperationBuilder<AddColumnOperation> operationBuilder13 = table.Column<string>(null, new bool?(false), new int?(50), false, null, true, null, null, null, nullable, null);
				nullable = null;
				bool? nullable15 = nullable;
				nullable2 = null;
				nullable = null;
				OperationBuilder<AddColumnOperation> operationBuilder14 = table.Column<DateTime>("datetime", nullable15, nullable2, false, null, false, null, null, null, nullable, null);
				nullable = null;
				OperationBuilder<AddColumnOperation> operationBuilder15 = table.Column<string>(null, new bool?(false), new int?(50), false, null, true, null, null, null, nullable, null);
				nullable = null;
				bool? nullable16 = nullable;
				nullable2 = null;
				nullable = null;
				OperationBuilder<AddColumnOperation> operationBuilder16 = table.Column<DateTime>("datetime", nullable16, nullable2, false, null, true, null, null, null, nullable, null);
				nullable = null;
				bool? nullable17 = nullable;
				nullable2 = null;
				nullable = null;
				OperationBuilder<AddColumnOperation> operationBuilder17 = table.Column<int>(null, nullable17, nullable2, false, null, false, null, null, null, nullable, null);
				nullable = null;
				return new { Id = operationBuilder, Specificulture = operationBuilder1, Description = operationBuilder2, Fields = operationBuilder3, Thumbnail = operationBuilder4, Image = operationBuilder5, Name = operationBuilder6, Template = operationBuilder7, FormTemplate = operationBuilder8, EdmTemplate = operationBuilder9, Title = operationBuilder10, Type = operationBuilder11, PageSize = operationBuilder12, CreatedBy = operationBuilder13, CreatedDateTime = operationBuilder14, ModifiedBy = operationBuilder15, LastModified = operationBuilder16, Priority = operationBuilder17, Status = table.Column<string>(null, new bool?(false), new int?(50), false, null, false, null, null, null, nullable, null) };
			}, null, (table) => {
				ParameterExpression parameterExpression = Expression.Parameter(typeof(u003cu003ef__AnonymousType17<OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>>), "x");
				ConstructorInfo methodFromHandle = (ConstructorInfo)MethodBase.GetMethodFromHandle(typeof(u003cu003ef__AnonymousType6<OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>>).GetMethod(".ctor", new Type[] { typeof(u003cIdu003ej__TPar), typeof(u003cSpecificultureu003ej__TPar) }).MethodHandle, typeof(u003cu003ef__AnonymousType6<OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>>).TypeHandle);
				Expression[] expressionArray = new Expression[] { Expression.Property(parameterExpression, (MethodInfo)MethodBase.GetMethodFromHandle(typeof(u003cu003ef__AnonymousType17<OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>>).GetMethod("get_Id").MethodHandle, typeof(u003cu003ef__AnonymousType17<OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>>).TypeHandle)), Expression.Property(parameterExpression, (MethodInfo)MethodBase.GetMethodFromHandle(typeof(u003cu003ef__AnonymousType17<OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>>).GetMethod("get_Specificulture").MethodHandle, typeof(u003cu003ef__AnonymousType17<OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>>).TypeHandle)) };
				MemberInfo[] memberInfoArray = new MemberInfo[] { (MethodInfo)MethodBase.GetMethodFromHandle(typeof(u003cu003ef__AnonymousType6<OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>>).GetMethod("get_Id").MethodHandle, typeof(u003cu003ef__AnonymousType6<OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>>).TypeHandle), (MethodInfo)MethodBase.GetMethodFromHandle(typeof(u003cu003ef__AnonymousType6<OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>>).GetMethod("get_Specificulture").MethodHandle, typeof(u003cu003ef__AnonymousType6<OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>>).TypeHandle) };
				table.PrimaryKey("PK_mix_module", Expression.Lambda(Expression.New(methodFromHandle, (IEnumerable<Expression>)expressionArray, memberInfoArray), new ParameterExpression[] { parameterExpression }));
				parameterExpression = Expression.Parameter(typeof(u003cu003ef__AnonymousType17<OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>>), "x");
				table.ForeignKey("FK_Mix_Module_Mix_Culture", Expression.Lambda(Expression.Property(parameterExpression, (MethodInfo)MethodBase.GetMethodFromHandle(typeof(u003cu003ef__AnonymousType17<OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>>).GetMethod("get_Specificulture").MethodHandle, typeof(u003cu003ef__AnonymousType17<OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>>).TypeHandle)), new ParameterExpression[] { parameterExpression }), "mix_culture", "Specificulture", null, 0, 2);
			}, null);
			migrationBuilder.CreateTable("mix_page", (ColumnsBuilder table) => {
				bool? nullable = null;
				bool? nullable1 = nullable;
				int? nullable2 = null;
				nullable = null;
				OperationBuilder<AddColumnOperation> operationBuilder = table.Column<int>(null, nullable1, nullable2, false, null, false, null, null, null, nullable, null);
				nullable = null;
				bool? nullable3 = nullable;
				nullable = null;
				OperationBuilder<AddColumnOperation> operationBuilder1 = table.Column<string>(null, nullable3, new int?(10), false, null, false, null, null, null, nullable, null);
				nullable = null;
				bool? nullable4 = nullable;
				nullable2 = null;
				nullable = null;
				OperationBuilder<AddColumnOperation> operationBuilder2 = table.Column<string>("text", nullable4, nullable2, false, null, true, null, null, null, nullable, null);
				nullable = null;
				bool? nullable5 = nullable;
				nullable = null;
				OperationBuilder<AddColumnOperation> operationBuilder3 = table.Column<string>(null, nullable5, new int?(250), false, null, true, null, null, null, nullable, null);
				nullable = null;
				bool? nullable6 = nullable;
				nullable2 = null;
				nullable = null;
				OperationBuilder<AddColumnOperation> operationBuilder4 = table.Column<string>("text", nullable6, nullable2, false, null, true, null, null, null, nullable, null);
				nullable = null;
				bool? nullable7 = nullable;
				nullable = null;
				OperationBuilder<AddColumnOperation> operationBuilder5 = table.Column<string>(null, nullable7, new int?(50), false, null, true, null, null, null, nullable, null);
				nullable = null;
				bool? nullable8 = nullable;
				nullable = null;
				OperationBuilder<AddColumnOperation> operationBuilder6 = table.Column<string>(null, nullable8, new int?(250), false, null, true, null, null, null, nullable, null);
				nullable = null;
				bool? nullable9 = nullable;
				nullable = null;
				OperationBuilder<AddColumnOperation> operationBuilder7 = table.Column<string>(null, nullable9, new int?(50), false, null, true, null, null, null, nullable, null);
				nullable = null;
				bool? nullable10 = nullable;
				nullable2 = null;
				nullable = null;
				OperationBuilder<AddColumnOperation> operationBuilder8 = table.Column<int>(null, nullable10, nullable2, false, null, true, null, null, null, nullable, null);
				nullable = null;
				bool? nullable11 = nullable;
				nullable2 = null;
				nullable = null;
				OperationBuilder<AddColumnOperation> operationBuilder9 = table.Column<string>("text", nullable11, nullable2, false, null, true, null, null, null, nullable, null);
				nullable = null;
				bool? nullable12 = nullable;
				nullable2 = null;
				nullable = null;
				OperationBuilder<AddColumnOperation> operationBuilder10 = table.Column<string>("text", nullable12, nullable2, false, null, true, null, null, null, nullable, null);
				nullable = null;
				OperationBuilder<AddColumnOperation> operationBuilder11 = table.Column<string>(null, new bool?(false), new int?(0x1f4), false, null, true, null, null, null, nullable, null);
				nullable = null;
				OperationBuilder<AddColumnOperation> operationBuilder12 = table.Column<string>(null, new bool?(false), new int?(250), false, null, true, null, null, null, nullable, null);
				nullable = null;
				bool? nullable13 = nullable;
				nullable = null;
				OperationBuilder<AddColumnOperation> operationBuilder13 = table.Column<string>(null, nullable13, new int?(250), false, null, true, null, null, null, nullable, null);
				nullable = null;
				bool? nullable14 = nullable;
				nullable2 = null;
				nullable = null;
				OperationBuilder<AddColumnOperation> operationBuilder14 = table.Column<string>("text", nullable14, nullable2, false, null, true, null, null, null, nullable, null);
				nullable = null;
				bool? nullable15 = nullable;
				nullable = null;
				OperationBuilder<AddColumnOperation> operationBuilder15 = table.Column<string>(null, nullable15, new int?(250), false, null, true, null, null, null, nullable, null);
				nullable = null;
				bool? nullable16 = nullable;
				nullable2 = null;
				nullable = null;
				OperationBuilder<AddColumnOperation> operationBuilder16 = table.Column<string>("text", nullable16, nullable2, false, null, true, null, null, null, nullable, null);
				nullable = null;
				OperationBuilder<AddColumnOperation> operationBuilder17 = table.Column<string>(null, new bool?(false), new int?(50), false, null, true, null, null, null, nullable, null);
				nullable = null;
				bool? nullable17 = nullable;
				nullable2 = null;
				nullable = null;
				OperationBuilder<AddColumnOperation> operationBuilder18 = table.Column<int>(null, nullable17, nullable2, false, null, true, null, null, null, nullable, null);
				nullable = null;
				bool? nullable18 = nullable;
				nullable2 = null;
				nullable = null;
				OperationBuilder<AddColumnOperation> operationBuilder19 = table.Column<int>(null, nullable18, nullable2, false, null, true, null, null, null, nullable, null);
				nullable = null;
				bool? nullable19 = nullable;
				nullable2 = null;
				nullable = null;
				OperationBuilder<AddColumnOperation> operationBuilder20 = table.Column<string>("text", nullable19, nullable2, false, null, true, null, null, null, nullable, null);
				nullable = null;
				OperationBuilder<AddColumnOperation> operationBuilder21 = table.Column<string>(null, new bool?(false), new int?(50), false, null, true, null, null, null, nullable, null);
				nullable = null;
				bool? nullable20 = nullable;
				nullable2 = null;
				nullable = null;
				OperationBuilder<AddColumnOperation> operationBuilder22 = table.Column<DateTime>("datetime", nullable20, nullable2, false, null, false, null, null, null, nullable, null);
				nullable = null;
				OperationBuilder<AddColumnOperation> operationBuilder23 = table.Column<string>(null, new bool?(false), new int?(50), false, null, true, null, null, null, nullable, null);
				nullable = null;
				bool? nullable21 = nullable;
				nullable2 = null;
				nullable = null;
				OperationBuilder<AddColumnOperation> operationBuilder24 = table.Column<DateTime>("datetime", nullable21, nullable2, false, null, true, null, null, null, nullable, null);
				nullable = null;
				bool? nullable22 = nullable;
				nullable2 = null;
				nullable = null;
				OperationBuilder<AddColumnOperation> operationBuilder25 = table.Column<int>(null, nullable22, nullable2, false, null, false, null, null, null, nullable, null);
				nullable = null;
				return new { Id = operationBuilder, Specificulture = operationBuilder1, Content = operationBuilder2, CssClass = operationBuilder3, Excerpt = operationBuilder4, Icon = operationBuilder5, Image = operationBuilder6, Layout = operationBuilder7, Level = operationBuilder8, SeoDescription = operationBuilder9, SeoKeywords = operationBuilder10, SeoName = operationBuilder11, SeoTitle = operationBuilder12, StaticUrl = operationBuilder13, Tags = operationBuilder14, Template = operationBuilder15, Title = operationBuilder16, Type = operationBuilder17, Views = operationBuilder18, PageSize = operationBuilder19, ExtraFields = operationBuilder20, CreatedBy = operationBuilder21, CreatedDateTime = operationBuilder22, ModifiedBy = operationBuilder23, LastModified = operationBuilder24, Priority = operationBuilder25, Status = table.Column<string>(null, new bool?(false), new int?(50), false, null, false, null, null, null, nullable, null) };
			}, null, (table) => {
				ParameterExpression parameterExpression = Expression.Parameter(typeof(u003cu003ef__AnonymousType18<OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>>), "x");
				ConstructorInfo methodFromHandle = (ConstructorInfo)MethodBase.GetMethodFromHandle(typeof(u003cu003ef__AnonymousType6<OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>>).GetMethod(".ctor", new Type[] { typeof(u003cIdu003ej__TPar), typeof(u003cSpecificultureu003ej__TPar) }).MethodHandle, typeof(u003cu003ef__AnonymousType6<OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>>).TypeHandle);
				Expression[] expressionArray = new Expression[] { Expression.Property(parameterExpression, (MethodInfo)MethodBase.GetMethodFromHandle(typeof(u003cu003ef__AnonymousType18<OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>>).GetMethod("get_Id").MethodHandle, typeof(u003cu003ef__AnonymousType18<OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>>).TypeHandle)), Expression.Property(parameterExpression, (MethodInfo)MethodBase.GetMethodFromHandle(typeof(u003cu003ef__AnonymousType18<OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>>).GetMethod("get_Specificulture").MethodHandle, typeof(u003cu003ef__AnonymousType18<OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>>).TypeHandle)) };
				MemberInfo[] memberInfoArray = new MemberInfo[] { (MethodInfo)MethodBase.GetMethodFromHandle(typeof(u003cu003ef__AnonymousType6<OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>>).GetMethod("get_Id").MethodHandle, typeof(u003cu003ef__AnonymousType6<OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>>).TypeHandle), (MethodInfo)MethodBase.GetMethodFromHandle(typeof(u003cu003ef__AnonymousType6<OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>>).GetMethod("get_Specificulture").MethodHandle, typeof(u003cu003ef__AnonymousType6<OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>>).TypeHandle) };
				table.PrimaryKey("PK_mix_page", Expression.Lambda(Expression.New(methodFromHandle, (IEnumerable<Expression>)expressionArray, memberInfoArray), new ParameterExpression[] { parameterExpression }));
				parameterExpression = Expression.Parameter(typeof(u003cu003ef__AnonymousType18<OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>>), "x");
				table.ForeignKey("FK_Mix_Page_Mix_Culture", Expression.Lambda(Expression.Property(parameterExpression, (MethodInfo)MethodBase.GetMethodFromHandle(typeof(u003cu003ef__AnonymousType18<OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>>).GetMethod("get_Specificulture").MethodHandle, typeof(u003cu003ef__AnonymousType18<OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>>).TypeHandle)), new ParameterExpression[] { parameterExpression }), "mix_culture", "Specificulture", null, 0, 1);
			}, null);
			migrationBuilder.CreateTable("mix_post", (ColumnsBuilder table) => {
				bool? nullable = null;
				bool? nullable1 = nullable;
				int? nullable2 = null;
				nullable = null;
				OperationBuilder<AddColumnOperation> operationBuilder = table.Column<int>(null, nullable1, nullable2, false, null, false, null, null, null, nullable, null);
				nullable = null;
				bool? nullable3 = nullable;
				nullable = null;
				OperationBuilder<AddColumnOperation> operationBuilder1 = table.Column<string>(null, nullable3, new int?(10), false, null, false, null, null, null, nullable, null);
				nullable = null;
				bool? nullable4 = nullable;
				nullable2 = null;
				nullable = null;
				OperationBuilder<AddColumnOperation> operationBuilder2 = table.Column<string>("text", nullable4, nullable2, false, null, true, null, null, null, nullable, null);
				nullable = null;
				bool? nullable5 = nullable;
				nullable2 = null;
				nullable = null;
				OperationBuilder<AddColumnOperation> operationBuilder3 = table.Column<DateTime>("datetime", nullable5, nullable2, false, null, true, null, null, null, nullable, null);
				nullable = null;
				bool? nullable6 = nullable;
				nullable2 = null;
				nullable = null;
				OperationBuilder<AddColumnOperation> operationBuilder4 = table.Column<string>("text", nullable6, nullable2, false, null, true, null, null, null, nullable, null);
				nullable = null;
				bool? nullable7 = nullable;
				nullable2 = null;
				nullable = null;
				OperationBuilder<AddColumnOperation> operationBuilder5 = table.Column<string>("text", nullable7, nullable2, false, null, true, null, null, null, nullable, null);
				nullable = null;
				bool? nullable8 = nullable;
				nullable2 = null;
				nullable = null;
				OperationBuilder<AddColumnOperation> operationBuilder6 = table.Column<string>("text", nullable8, nullable2, false, null, true, null, null, null, nullable, null);
				nullable = null;
				bool? nullable9 = nullable;
				nullable = null;
				OperationBuilder<AddColumnOperation> operationBuilder7 = table.Column<string>(null, nullable9, new int?(250), false, null, true, null, null, null, nullable, null);
				nullable = null;
				bool? nullable10 = nullable;
				nullable2 = null;
				nullable = null;
				OperationBuilder<AddColumnOperation> operationBuilder8 = table.Column<string>("text", nullable10, nullable2, false, null, true, null, null, null, nullable, null);
				nullable = null;
				bool? nullable11 = nullable;
				nullable2 = null;
				nullable = null;
				OperationBuilder<AddColumnOperation> operationBuilder9 = table.Column<string>("text", nullable11, nullable2, false, null, true, null, null, null, nullable, null);
				nullable = null;
				OperationBuilder<AddColumnOperation> operationBuilder10 = table.Column<string>(null, new bool?(false), new int?(0x1f4), false, null, true, null, null, null, nullable, null);
				nullable = null;
				bool? nullable12 = nullable;
				nullable2 = null;
				nullable = null;
				OperationBuilder<AddColumnOperation> operationBuilder11 = table.Column<string>("text", nullable12, nullable2, false, null, true, null, null, null, nullable, null);
				nullable = null;
				bool? nullable13 = nullable;
				nullable = null;
				OperationBuilder<AddColumnOperation> operationBuilder12 = table.Column<string>(null, nullable13, new int?(250), false, null, true, null, null, null, nullable, null);
				nullable = null;
				bool? nullable14 = nullable;
				nullable2 = null;
				nullable = null;
				OperationBuilder<AddColumnOperation> operationBuilder13 = table.Column<string>("text", nullable14, nullable2, false, null, true, null, null, null, nullable, null);
				nullable = null;
				bool? nullable15 = nullable;
				nullable = null;
				OperationBuilder<AddColumnOperation> operationBuilder14 = table.Column<string>(null, nullable15, new int?(250), false, null, true, null, null, null, nullable, null);
				nullable = null;
				bool? nullable16 = nullable;
				nullable = null;
				OperationBuilder<AddColumnOperation> operationBuilder15 = table.Column<string>(null, nullable16, new int?(250), false, null, true, null, null, null, nullable, null);
				nullable = null;
				bool? nullable17 = nullable;
				nullable2 = null;
				nullable = null;
				OperationBuilder<AddColumnOperation> operationBuilder16 = table.Column<string>("text", nullable17, nullable2, false, null, true, null, null, null, nullable, null);
				nullable = null;
				OperationBuilder<AddColumnOperation> operationBuilder17 = table.Column<string>(null, new bool?(false), new int?(50), false, null, true, null, null, null, nullable, null);
				nullable = null;
				bool? nullable18 = nullable;
				nullable2 = null;
				nullable = null;
				OperationBuilder<AddColumnOperation> operationBuilder18 = table.Column<int>(null, nullable18, nullable2, false, null, true, null, null, null, nullable, null);
				nullable = null;
				bool? nullable19 = nullable;
				nullable2 = null;
				nullable = null;
				OperationBuilder<AddColumnOperation> operationBuilder19 = table.Column<string>("text", nullable19, nullable2, false, null, true, null, null, null, nullable, null);
				nullable = null;
				OperationBuilder<AddColumnOperation> operationBuilder20 = table.Column<string>(null, new bool?(false), new int?(50), false, null, true, null, null, null, nullable, null);
				nullable = null;
				bool? nullable20 = nullable;
				nullable2 = null;
				nullable = null;
				OperationBuilder<AddColumnOperation> operationBuilder21 = table.Column<DateTime>("datetime", nullable20, nullable2, false, null, false, null, null, null, nullable, null);
				nullable = null;
				OperationBuilder<AddColumnOperation> operationBuilder22 = table.Column<string>(null, new bool?(false), new int?(50), false, null, true, null, null, null, nullable, null);
				nullable = null;
				bool? nullable21 = nullable;
				nullable2 = null;
				nullable = null;
				OperationBuilder<AddColumnOperation> operationBuilder23 = table.Column<DateTime>("datetime", nullable21, nullable2, false, null, true, null, null, null, nullable, null);
				nullable = null;
				bool? nullable22 = nullable;
				nullable2 = null;
				nullable = null;
				OperationBuilder<AddColumnOperation> operationBuilder24 = table.Column<int>(null, nullable22, nullable2, false, null, false, null, null, null, nullable, null);
				nullable = null;
				return new { Id = operationBuilder, Specificulture = operationBuilder1, Content = operationBuilder2, PublishedDateTime = operationBuilder3, Excerpt = operationBuilder4, ExtraProperties = operationBuilder5, Icon = operationBuilder6, Image = operationBuilder7, SeoDescription = operationBuilder8, SeoKeywords = operationBuilder9, SeoName = operationBuilder10, SeoTitle = operationBuilder11, Source = operationBuilder12, Tags = operationBuilder13, Template = operationBuilder14, Thumbnail = operationBuilder15, Title = operationBuilder16, Type = operationBuilder17, Views = operationBuilder18, ExtraFields = operationBuilder19, CreatedBy = operationBuilder20, CreatedDateTime = operationBuilder21, ModifiedBy = operationBuilder22, LastModified = operationBuilder23, Priority = operationBuilder24, Status = table.Column<string>(null, new bool?(false), new int?(50), false, null, false, null, null, null, nullable, null) };
			}, null, (table) => {
				ParameterExpression parameterExpression = Expression.Parameter(typeof(u003cu003ef__AnonymousType19<OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>>), "x");
				ConstructorInfo methodFromHandle = (ConstructorInfo)MethodBase.GetMethodFromHandle(typeof(u003cu003ef__AnonymousType6<OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>>).GetMethod(".ctor", new Type[] { typeof(u003cIdu003ej__TPar), typeof(u003cSpecificultureu003ej__TPar) }).MethodHandle, typeof(u003cu003ef__AnonymousType6<OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>>).TypeHandle);
				Expression[] expressionArray = new Expression[] { Expression.Property(parameterExpression, (MethodInfo)MethodBase.GetMethodFromHandle(typeof(u003cu003ef__AnonymousType19<OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>>).GetMethod("get_Id").MethodHandle, typeof(u003cu003ef__AnonymousType19<OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>>).TypeHandle)), Expression.Property(parameterExpression, (MethodInfo)MethodBase.GetMethodFromHandle(typeof(u003cu003ef__AnonymousType19<OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>>).GetMethod("get_Specificulture").MethodHandle, typeof(u003cu003ef__AnonymousType19<OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>>).TypeHandle)) };
				MemberInfo[] memberInfoArray = new MemberInfo[] { (MethodInfo)MethodBase.GetMethodFromHandle(typeof(u003cu003ef__AnonymousType6<OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>>).GetMethod("get_Id").MethodHandle, typeof(u003cu003ef__AnonymousType6<OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>>).TypeHandle), (MethodInfo)MethodBase.GetMethodFromHandle(typeof(u003cu003ef__AnonymousType6<OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>>).GetMethod("get_Specificulture").MethodHandle, typeof(u003cu003ef__AnonymousType6<OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>>).TypeHandle) };
				table.PrimaryKey("PK_mix_post", Expression.Lambda(Expression.New(methodFromHandle, (IEnumerable<Expression>)expressionArray, memberInfoArray), new ParameterExpression[] { parameterExpression }));
				parameterExpression = Expression.Parameter(typeof(u003cu003ef__AnonymousType19<OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>>), "x");
				table.ForeignKey("FK_Mix_Post_Mix_Culture", Expression.Lambda(Expression.Property(parameterExpression, (MethodInfo)MethodBase.GetMethodFromHandle(typeof(u003cu003ef__AnonymousType19<OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>>).GetMethod("get_Specificulture").MethodHandle, typeof(u003cu003ef__AnonymousType19<OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>>).TypeHandle)), new ParameterExpression[] { parameterExpression }), "mix_culture", "Specificulture", null, 0, 1);
			}, null);
			migrationBuilder.CreateTable("mix_url_alias", (ColumnsBuilder table) => {
				bool? nullable = null;
				bool? nullable1 = nullable;
				int? nullable2 = null;
				nullable = null;
				OperationBuilder<AddColumnOperation> operationBuilder = table.Column<int>(null, nullable1, nullable2, false, null, false, null, null, null, nullable, null);
				nullable = null;
				bool? nullable3 = nullable;
				nullable = null;
				OperationBuilder<AddColumnOperation> operationBuilder1 = table.Column<string>(null, nullable3, new int?(10), false, null, false, null, null, null, nullable, null);
				nullable = null;
				bool? nullable4 = nullable;
				nullable = null;
				OperationBuilder<AddColumnOperation> operationBuilder2 = table.Column<string>(null, nullable4, new int?(250), false, null, true, null, null, null, nullable, null);
				nullable = null;
				bool? nullable5 = nullable;
				nullable2 = null;
				nullable = null;
				OperationBuilder<AddColumnOperation> operationBuilder3 = table.Column<int>(null, nullable5, nullable2, false, null, false, null, null, null, nullable, null);
				nullable = null;
				bool? nullable6 = nullable;
				nullable = null;
				OperationBuilder<AddColumnOperation> operationBuilder4 = table.Column<string>(null, nullable6, new int?(0xfa0), false, null, true, null, null, null, nullable, null);
				nullable = null;
				bool? nullable7 = nullable;
				nullable = null;
				OperationBuilder<AddColumnOperation> operationBuilder5 = table.Column<string>(null, nullable7, new int?(250), false, null, true, null, null, null, nullable, null);
				nullable = null;
				OperationBuilder<AddColumnOperation> operationBuilder6 = table.Column<string>(null, new bool?(false), new int?(50), false, null, true, null, null, null, nullable, null);
				nullable = null;
				bool? nullable8 = nullable;
				nullable2 = null;
				nullable = null;
				OperationBuilder<AddColumnOperation> operationBuilder7 = table.Column<DateTime>("datetime", nullable8, nullable2, false, null, false, null, null, null, nullable, null);
				nullable = null;
				OperationBuilder<AddColumnOperation> operationBuilder8 = table.Column<string>(null, new bool?(false), new int?(50), false, null, true, null, null, null, nullable, null);
				nullable = null;
				bool? nullable9 = nullable;
				nullable2 = null;
				nullable = null;
				OperationBuilder<AddColumnOperation> operationBuilder9 = table.Column<DateTime>("datetime", nullable9, nullable2, false, null, true, null, null, null, nullable, null);
				nullable = null;
				bool? nullable10 = nullable;
				nullable2 = null;
				nullable = null;
				OperationBuilder<AddColumnOperation> operationBuilder10 = table.Column<int>(null, nullable10, nullable2, false, null, false, null, null, null, nullable, null);
				nullable = null;
				return new { Id = operationBuilder, Specificulture = operationBuilder1, SourceId = operationBuilder2, Type = operationBuilder3, Description = operationBuilder4, Alias = operationBuilder5, CreatedBy = operationBuilder6, CreatedDateTime = operationBuilder7, ModifiedBy = operationBuilder8, LastModified = operationBuilder9, Priority = operationBuilder10, Status = table.Column<string>(null, new bool?(false), new int?(50), false, null, false, null, null, null, nullable, null) };
			}, null, (table) => {
				ParameterExpression parameterExpression = Expression.Parameter(typeof(u003cu003ef__AnonymousType20<OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>>), "x");
				ConstructorInfo methodFromHandle = (ConstructorInfo)MethodBase.GetMethodFromHandle(typeof(u003cu003ef__AnonymousType6<OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>>).GetMethod(".ctor", new Type[] { typeof(u003cIdu003ej__TPar), typeof(u003cSpecificultureu003ej__TPar) }).MethodHandle, typeof(u003cu003ef__AnonymousType6<OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>>).TypeHandle);
				Expression[] expressionArray = new Expression[] { Expression.Property(parameterExpression, (MethodInfo)MethodBase.GetMethodFromHandle(typeof(u003cu003ef__AnonymousType20<OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>>).GetMethod("get_Id").MethodHandle, typeof(u003cu003ef__AnonymousType20<OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>>).TypeHandle)), Expression.Property(parameterExpression, (MethodInfo)MethodBase.GetMethodFromHandle(typeof(u003cu003ef__AnonymousType20<OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>>).GetMethod("get_Specificulture").MethodHandle, typeof(u003cu003ef__AnonymousType20<OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>>).TypeHandle)) };
				MemberInfo[] memberInfoArray = new MemberInfo[] { (MethodInfo)MethodBase.GetMethodFromHandle(typeof(u003cu003ef__AnonymousType6<OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>>).GetMethod("get_Id").MethodHandle, typeof(u003cu003ef__AnonymousType6<OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>>).TypeHandle), (MethodInfo)MethodBase.GetMethodFromHandle(typeof(u003cu003ef__AnonymousType6<OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>>).GetMethod("get_Specificulture").MethodHandle, typeof(u003cu003ef__AnonymousType6<OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>>).TypeHandle) };
				table.PrimaryKey("PK_mix_url_alias", Expression.Lambda(Expression.New(methodFromHandle, (IEnumerable<Expression>)expressionArray, memberInfoArray), new ParameterExpression[] { parameterExpression }));
				parameterExpression = Expression.Parameter(typeof(u003cu003ef__AnonymousType20<OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>>), "x");
				table.ForeignKey("FK_Mix_Url_Alias_Mix_Culture", Expression.Lambda(Expression.Property(parameterExpression, (MethodInfo)MethodBase.GetMethodFromHandle(typeof(u003cu003ef__AnonymousType20<OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>>).GetMethod("get_Specificulture").MethodHandle, typeof(u003cu003ef__AnonymousType20<OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>>).TypeHandle)), new ParameterExpression[] { parameterExpression }), "mix_culture", "Specificulture", null, 0, 2);
			}, null);
			migrationBuilder.CreateTable("mix_portal_page_navigation", (ColumnsBuilder table) => {
				bool? nullable = null;
				bool? nullable1 = nullable;
				int? nullable2 = null;
				nullable = null;
				OperationBuilder<AddColumnOperation> operationBuilder = table.Column<int>(null, nullable1, nullable2, false, null, false, null, null, null, nullable, null);
				nullable = null;
				bool? nullable3 = nullable;
				nullable2 = null;
				nullable = null;
				OperationBuilder<AddColumnOperation> operationBuilder1 = table.Column<int>(null, nullable3, nullable2, false, null, false, null, null, null, nullable, null);
				nullable = null;
				bool? nullable4 = nullable;
				nullable2 = null;
				nullable = null;
				OperationBuilder<AddColumnOperation> operationBuilder2 = table.Column<int>(null, nullable4, nullable2, false, null, false, null, null, null, nullable, null);
				nullable = null;
				bool? nullable5 = nullable;
				nullable = null;
				OperationBuilder<AddColumnOperation> operationBuilder3 = table.Column<string>(null, nullable5, new int?(250), false, null, true, null, null, null, nullable, null);
				nullable = null;
				bool? nullable6 = nullable;
				nullable = null;
				OperationBuilder<AddColumnOperation> operationBuilder4 = table.Column<string>(null, nullable6, new int?(250), false, null, true, null, null, null, nullable, null);
				nullable = null;
				OperationBuilder<AddColumnOperation> operationBuilder5 = table.Column<string>(null, new bool?(false), new int?(50), false, null, true, null, null, null, nullable, null);
				nullable = null;
				bool? nullable7 = nullable;
				nullable2 = null;
				nullable = null;
				OperationBuilder<AddColumnOperation> operationBuilder6 = table.Column<DateTime>("datetime", nullable7, nullable2, false, null, false, null, null, null, nullable, null);
				nullable = null;
				OperationBuilder<AddColumnOperation> operationBuilder7 = table.Column<string>(null, new bool?(false), new int?(50), false, null, true, null, null, null, nullable, null);
				nullable = null;
				bool? nullable8 = nullable;
				nullable2 = null;
				nullable = null;
				OperationBuilder<AddColumnOperation> operationBuilder8 = table.Column<DateTime>("datetime", nullable8, nullable2, false, null, true, null, null, null, nullable, null);
				nullable = null;
				bool? nullable9 = nullable;
				nullable2 = null;
				nullable = null;
				OperationBuilder<AddColumnOperation> operationBuilder9 = table.Column<int>(null, nullable9, nullable2, false, null, false, null, null, null, nullable, null);
				nullable = null;
				return new { Id = operationBuilder, PageId = operationBuilder1, ParentId = operationBuilder2, Description = operationBuilder3, Image = operationBuilder4, CreatedBy = operationBuilder5, CreatedDateTime = operationBuilder6, ModifiedBy = operationBuilder7, LastModified = operationBuilder8, Priority = operationBuilder9, Status = table.Column<string>(null, new bool?(false), new int?(50), false, null, false, null, null, null, nullable, null) };
			}, null, (table) => {
				table.PrimaryKey("PK_mix_portal_page_navigation", (x) => x.Id);
				table.ForeignKey("FK_mix_portal_page_navigation_mix_portal_page", (x) => x.Id, "mix_portal_page", "Id", null, 0, 1);
				table.ForeignKey("FK_mix_portal_page_navigation_mix_portal_page1", (x) => x.ParentId, "mix_portal_page", "Id", null, 0, 1);
			}, null);
			migrationBuilder.CreateTable("mix_portal_page_role", (ColumnsBuilder table) => {
				bool? nullable = null;
				bool? nullable1 = nullable;
				int? nullable2 = null;
				nullable = null;
				OperationBuilder<AddColumnOperation> operationBuilder = table.Column<int>(null, nullable1, nullable2, false, null, false, null, null, null, nullable, null);
				nullable = null;
				bool? nullable3 = nullable;
				nullable = null;
				OperationBuilder<AddColumnOperation> operationBuilder1 = table.Column<string>(null, nullable3, new int?(50), false, null, false, null, null, null, nullable, null);
				nullable = null;
				OperationBuilder<AddColumnOperation> operationBuilder2 = table.Column<string>(null, new bool?(false), new int?(50), false, null, true, null, null, null, nullable, null);
				nullable = null;
				bool? nullable4 = nullable;
				nullable2 = null;
				nullable = null;
				OperationBuilder<AddColumnOperation> operationBuilder3 = table.Column<DateTime>("datetime", nullable4, nullable2, false, null, false, null, null, null, nullable, null);
				nullable = null;
				OperationBuilder<AddColumnOperation> operationBuilder4 = table.Column<string>(null, new bool?(false), new int?(50), false, null, true, null, null, null, nullable, null);
				nullable = null;
				bool? nullable5 = nullable;
				nullable2 = null;
				nullable = null;
				OperationBuilder<AddColumnOperation> operationBuilder5 = table.Column<DateTime>("datetime", nullable5, nullable2, false, null, true, null, null, null, nullable, null);
				nullable = null;
				bool? nullable6 = nullable;
				nullable2 = null;
				nullable = null;
				OperationBuilder<AddColumnOperation> operationBuilder6 = table.Column<int>(null, nullable6, nullable2, false, null, false, null, null, null, nullable, null);
				nullable = null;
				return new { PageId = operationBuilder, RoleId = operationBuilder1, CreatedBy = operationBuilder2, CreatedDateTime = operationBuilder3, ModifiedBy = operationBuilder4, LastModified = operationBuilder5, Priority = operationBuilder6, Status = table.Column<string>(null, new bool?(false), new int?(50), false, null, false, null, null, null, nullable, null) };
			}, null, (table) => {
				ParameterExpression parameterExpression = Expression.Parameter(typeof(u003cu003ef__AnonymousType22<OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>>), "x");
				ConstructorInfo methodFromHandle = (ConstructorInfo)MethodBase.GetMethodFromHandle(typeof(u003cu003ef__AnonymousType23<OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>>).GetMethod(".ctor", new Type[] { typeof(u003cRoleIdu003ej__TPar), typeof(u003cPageIdu003ej__TPar) }).MethodHandle, typeof(u003cu003ef__AnonymousType23<OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>>).TypeHandle);
				Expression[] expressionArray = new Expression[] { Expression.Property(parameterExpression, (MethodInfo)MethodBase.GetMethodFromHandle(typeof(u003cu003ef__AnonymousType22<OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>>).GetMethod("get_RoleId").MethodHandle, typeof(u003cu003ef__AnonymousType22<OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>>).TypeHandle)), Expression.Property(parameterExpression, (MethodInfo)MethodBase.GetMethodFromHandle(typeof(u003cu003ef__AnonymousType22<OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>>).GetMethod("get_PageId").MethodHandle, typeof(u003cu003ef__AnonymousType22<OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>>).TypeHandle)) };
				MemberInfo[] memberInfoArray = new MemberInfo[] { (MethodInfo)MethodBase.GetMethodFromHandle(typeof(u003cu003ef__AnonymousType23<OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>>).GetMethod("get_RoleId").MethodHandle, typeof(u003cu003ef__AnonymousType23<OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>>).TypeHandle), (MethodInfo)MethodBase.GetMethodFromHandle(typeof(u003cu003ef__AnonymousType23<OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>>).GetMethod("get_PageId").MethodHandle, typeof(u003cu003ef__AnonymousType23<OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>>).TypeHandle) };
				table.PrimaryKey("PK_mix_portal_page_role", Expression.Lambda(Expression.New(methodFromHandle, (IEnumerable<Expression>)expressionArray, memberInfoArray), new ParameterExpression[] { parameterExpression }));
				parameterExpression = Expression.Parameter(typeof(u003cu003ef__AnonymousType22<OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>>), "x");
				table.ForeignKey("FK_mix_portal_page_role_mix_portal_page", Expression.Lambda(Expression.Property(parameterExpression, (MethodInfo)MethodBase.GetMethodFromHandle(typeof(u003cu003ef__AnonymousType22<OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>>).GetMethod("get_PageId").MethodHandle, typeof(u003cu003ef__AnonymousType22<OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>>).TypeHandle)), new ParameterExpression[] { parameterExpression }), "mix_portal_page", "Id", null, 0, 2);
			}, null);
			migrationBuilder.CreateTable("mix_file", (ColumnsBuilder table) => {
				bool? nullable = null;
				bool? nullable1 = nullable;
				int? nullable2 = null;
				nullable = null;
				OperationBuilder<AddColumnOperation> operationBuilder = table.Column<int>(null, nullable1, nullable2, false, null, false, null, null, null, nullable, null).Annotation("SqlServer:Identity", "1, 1");
				nullable = null;
				bool? nullable3 = nullable;
				nullable = null;
				OperationBuilder<AddColumnOperation> operationBuilder1 = table.Column<string>(null, nullable3, new int?(0xfa0), false, null, false, null, null, null, nullable, null);
				nullable = null;
				bool? nullable4 = nullable;
				nullable = null;
				OperationBuilder<AddColumnOperation> operationBuilder2 = table.Column<string>(null, nullable4, new int?(50), false, null, false, null, null, null, nullable, null);
				nullable = null;
				bool? nullable5 = nullable;
				nullable = null;
				OperationBuilder<AddColumnOperation> operationBuilder3 = table.Column<string>(null, nullable5, new int?(250), false, null, false, null, null, null, nullable, null);
				nullable = null;
				bool? nullable6 = nullable;
				nullable = null;
				OperationBuilder<AddColumnOperation> operationBuilder4 = table.Column<string>(null, nullable6, new int?(250), false, null, false, null, null, null, nullable, null);
				nullable = null;
				bool? nullable7 = nullable;
				nullable = null;
				OperationBuilder<AddColumnOperation> operationBuilder5 = table.Column<string>(null, nullable7, new int?(50), false, null, false, null, null, null, nullable, null);
				nullable = null;
				bool? nullable8 = nullable;
				nullable2 = null;
				nullable = null;
				OperationBuilder<AddColumnOperation> operationBuilder6 = table.Column<int>(null, nullable8, nullable2, false, null, true, null, null, null, nullable, null);
				nullable = null;
				bool? nullable9 = nullable;
				nullable = null;
				OperationBuilder<AddColumnOperation> operationBuilder7 = table.Column<string>(null, nullable9, new int?(250), false, null, false, null, null, null, nullable, null);
				nullable = null;
				OperationBuilder<AddColumnOperation> operationBuilder8 = table.Column<string>(null, new bool?(false), new int?(50), false, null, true, null, null, null, nullable, null);
				nullable = null;
				bool? nullable10 = nullable;
				nullable2 = null;
				nullable = null;
				OperationBuilder<AddColumnOperation> operationBuilder9 = table.Column<DateTime>("datetime", nullable10, nullable2, false, null, false, null, null, null, nullable, null);
				nullable = null;
				OperationBuilder<AddColumnOperation> operationBuilder10 = table.Column<string>(null, new bool?(false), new int?(50), false, null, true, null, null, null, nullable, null);
				nullable = null;
				bool? nullable11 = nullable;
				nullable2 = null;
				nullable = null;
				OperationBuilder<AddColumnOperation> operationBuilder11 = table.Column<DateTime>("datetime", nullable11, nullable2, false, null, true, null, null, null, nullable, null);
				nullable = null;
				bool? nullable12 = nullable;
				nullable2 = null;
				nullable = null;
				OperationBuilder<AddColumnOperation> operationBuilder12 = table.Column<int>(null, nullable12, nullable2, false, null, false, null, null, null, nullable, null);
				nullable = null;
				return new { Id = operationBuilder, StringContent = operationBuilder1, Extension = operationBuilder2, FileFolder = operationBuilder3, FileName = operationBuilder4, FolderType = operationBuilder5, ThemeId = operationBuilder6, ThemeName = operationBuilder7, CreatedBy = operationBuilder8, CreatedDateTime = operationBuilder9, ModifiedBy = operationBuilder10, LastModified = operationBuilder11, Priority = operationBuilder12, Status = table.Column<string>(null, new bool?(false), new int?(50), false, null, false, null, null, null, nullable, null) };
			}, null, (table) => {
				table.PrimaryKey("PK_mix_file", (x) => x.Id);
				table.ForeignKey("FK_mix_file_mix_template", (x) => x.ThemeId, "mix_theme", "Id", null, 0, 1);
			}, null);
			migrationBuilder.CreateTable("mix_template", (ColumnsBuilder table) => {
				bool? nullable = null;
				bool? nullable1 = nullable;
				int? nullable2 = null;
				nullable = null;
				OperationBuilder<AddColumnOperation> operationBuilder = table.Column<int>(null, nullable1, nullable2, false, null, false, null, null, null, nullable, null);
				nullable = null;
				bool? nullable3 = nullable;
				nullable2 = null;
				nullable = null;
				OperationBuilder<AddColumnOperation> operationBuilder1 = table.Column<string>("text", nullable3, nullable2, false, null, false, null, null, null, nullable, null);
				nullable = null;
				bool? nullable4 = nullable;
				nullable = null;
				OperationBuilder<AddColumnOperation> operationBuilder2 = table.Column<string>(null, nullable4, new int?(50), false, null, false, null, null, null, nullable, null);
				nullable = null;
				bool? nullable5 = nullable;
				nullable = null;
				OperationBuilder<AddColumnOperation> operationBuilder3 = table.Column<string>(null, nullable5, new int?(250), false, null, false, null, null, null, nullable, null);
				nullable = null;
				bool? nullable6 = nullable;
				nullable = null;
				OperationBuilder<AddColumnOperation> operationBuilder4 = table.Column<string>(null, nullable6, new int?(250), false, null, false, null, null, null, nullable, null);
				nullable = null;
				bool? nullable7 = nullable;
				nullable = null;
				OperationBuilder<AddColumnOperation> operationBuilder5 = table.Column<string>(null, nullable7, new int?(50), false, null, false, null, null, null, nullable, null);
				nullable = null;
				bool? nullable8 = nullable;
				nullable2 = null;
				nullable = null;
				OperationBuilder<AddColumnOperation> operationBuilder6 = table.Column<string>("text", nullable8, nullable2, false, null, true, null, null, null, nullable, null);
				nullable = null;
				bool? nullable9 = nullable;
				nullable2 = null;
				nullable = null;
				OperationBuilder<AddColumnOperation> operationBuilder7 = table.Column<string>("text", nullable9, nullable2, false, null, true, null, null, null, nullable, null);
				nullable = null;
				bool? nullable10 = nullable;
				nullable2 = null;
				nullable = null;
				OperationBuilder<AddColumnOperation> operationBuilder8 = table.Column<string>("text", nullable10, nullable2, false, null, true, null, null, null, nullable, null);
				nullable = null;
				bool? nullable11 = nullable;
				nullable2 = null;
				nullable = null;
				OperationBuilder<AddColumnOperation> operationBuilder9 = table.Column<string>("text", nullable11, nullable2, false, null, true, null, null, null, nullable, null);
				nullable = null;
				bool? nullable12 = nullable;
				nullable2 = null;
				nullable = null;
				OperationBuilder<AddColumnOperation> operationBuilder10 = table.Column<int>(null, nullable12, nullable2, false, null, false, null, null, null, nullable, null);
				nullable = null;
				bool? nullable13 = nullable;
				nullable = null;
				OperationBuilder<AddColumnOperation> operationBuilder11 = table.Column<string>(null, nullable13, new int?(250), false, null, false, null, null, null, nullable, null);
				nullable = null;
				OperationBuilder<AddColumnOperation> operationBuilder12 = table.Column<string>(null, new bool?(false), new int?(50), false, null, true, null, null, null, nullable, null);
				nullable = null;
				bool? nullable14 = nullable;
				nullable2 = null;
				nullable = null;
				OperationBuilder<AddColumnOperation> operationBuilder13 = table.Column<DateTime>("datetime", nullable14, nullable2, false, null, false, null, null, null, nullable, null);
				nullable = null;
				OperationBuilder<AddColumnOperation> operationBuilder14 = table.Column<string>(null, new bool?(false), new int?(50), false, null, true, null, null, null, nullable, null);
				nullable = null;
				bool? nullable15 = nullable;
				nullable2 = null;
				nullable = null;
				OperationBuilder<AddColumnOperation> operationBuilder15 = table.Column<DateTime>("datetime", nullable15, nullable2, false, null, true, null, null, null, nullable, null);
				nullable = null;
				bool? nullable16 = nullable;
				nullable2 = null;
				nullable = null;
				OperationBuilder<AddColumnOperation> operationBuilder16 = table.Column<int>(null, nullable16, nullable2, false, null, false, null, null, null, nullable, null);
				nullable = null;
				return new { Id = operationBuilder, Content = operationBuilder1, Extension = operationBuilder2, FileFolder = operationBuilder3, FileName = operationBuilder4, FolderType = operationBuilder5, MobileContent = operationBuilder6, Scripts = operationBuilder7, SpaContent = operationBuilder8, Styles = operationBuilder9, ThemeId = operationBuilder10, ThemeName = operationBuilder11, CreatedBy = operationBuilder12, CreatedDateTime = operationBuilder13, ModifiedBy = operationBuilder14, LastModified = operationBuilder15, Priority = operationBuilder16, Status = table.Column<string>(null, new bool?(false), new int?(50), false, null, false, null, null, null, nullable, null) };
			}, null, (table) => {
				table.PrimaryKey("PK_mix_template", (x) => x.Id);
				table.ForeignKey("FK_mix_template_mix_theme", (x) => x.ThemeId, "mix_theme", "Id", null, 0, 1);
			}, null);
			migrationBuilder.CreateTable("mix_page_module", (ColumnsBuilder table) => {
				bool? nullable = null;
				bool? nullable1 = nullable;
				int? nullable2 = null;
				nullable = null;
				OperationBuilder<AddColumnOperation> operationBuilder = table.Column<int>(null, nullable1, nullable2, false, null, false, null, null, null, nullable, null);
				nullable = null;
				bool? nullable3 = nullable;
				nullable = null;
				OperationBuilder<AddColumnOperation> operationBuilder1 = table.Column<string>(null, nullable3, new int?(10), false, null, false, null, null, null, nullable, null);
				nullable = null;
				bool? nullable4 = nullable;
				nullable2 = null;
				nullable = null;
				OperationBuilder<AddColumnOperation> operationBuilder2 = table.Column<int>(null, nullable4, nullable2, false, null, false, null, null, null, nullable, null);
				nullable = null;
				bool? nullable5 = nullable;
				nullable2 = null;
				nullable = null;
				OperationBuilder<AddColumnOperation> operationBuilder3 = table.Column<int>(null, nullable5, nullable2, false, null, false, null, null, null, nullable, null);
				nullable = null;
				bool? nullable6 = nullable;
				nullable = null;
				OperationBuilder<AddColumnOperation> operationBuilder4 = table.Column<string>(null, nullable6, new int?(250), false, null, true, null, null, null, nullable, null);
				nullable = null;
				bool? nullable7 = nullable;
				nullable = null;
				OperationBuilder<AddColumnOperation> operationBuilder5 = table.Column<string>(null, nullable7, new int?(250), false, null, true, null, null, null, nullable, null);
				nullable = null;
				bool? nullable8 = nullable;
				nullable2 = null;
				nullable = null;
				OperationBuilder<AddColumnOperation> operationBuilder6 = table.Column<int>(null, nullable8, nullable2, false, null, false, null, null, null, nullable, null);
				nullable = null;
				OperationBuilder<AddColumnOperation> operationBuilder7 = table.Column<string>(null, new bool?(false), new int?(50), false, null, true, null, null, null, nullable, null);
				nullable = null;
				bool? nullable9 = nullable;
				nullable2 = null;
				nullable = null;
				OperationBuilder<AddColumnOperation> operationBuilder8 = table.Column<DateTime>("datetime", nullable9, nullable2, false, null, false, null, null, null, nullable, null);
				nullable = null;
				OperationBuilder<AddColumnOperation> operationBuilder9 = table.Column<string>(null, new bool?(false), new int?(50), false, null, true, null, null, null, nullable, null);
				nullable = null;
				bool? nullable10 = nullable;
				nullable2 = null;
				nullable = null;
				OperationBuilder<AddColumnOperation> operationBuilder10 = table.Column<DateTime>("datetime", nullable10, nullable2, false, null, true, null, null, null, nullable, null);
				nullable = null;
				bool? nullable11 = nullable;
				nullable2 = null;
				nullable = null;
				OperationBuilder<AddColumnOperation> operationBuilder11 = table.Column<int>(null, nullable11, nullable2, false, null, false, null, null, null, nullable, null);
				nullable = null;
				return new { Id = operationBuilder, Specificulture = operationBuilder1, ModuleId = operationBuilder2, PageId = operationBuilder3, Description = operationBuilder4, Image = operationBuilder5, Position = operationBuilder6, CreatedBy = operationBuilder7, CreatedDateTime = operationBuilder8, ModifiedBy = operationBuilder9, LastModified = operationBuilder10, Priority = operationBuilder11, Status = table.Column<string>(null, new bool?(false), new int?(50), false, null, false, null, null, null, nullable, null) };
			}, null, (table) => {
				ParameterExpression parameterExpression = Expression.Parameter(typeof(u003cu003ef__AnonymousType26<OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>>), "x");
				ConstructorInfo methodFromHandle = (ConstructorInfo)MethodBase.GetMethodFromHandle(typeof(u003cu003ef__AnonymousType6<OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>>).GetMethod(".ctor", new Type[] { typeof(u003cIdu003ej__TPar), typeof(u003cSpecificultureu003ej__TPar) }).MethodHandle, typeof(u003cu003ef__AnonymousType6<OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>>).TypeHandle);
				Expression[] expressionArray = new Expression[] { Expression.Property(parameterExpression, (MethodInfo)MethodBase.GetMethodFromHandle(typeof(u003cu003ef__AnonymousType26<OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>>).GetMethod("get_Id").MethodHandle, typeof(u003cu003ef__AnonymousType26<OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>>).TypeHandle)), Expression.Property(parameterExpression, (MethodInfo)MethodBase.GetMethodFromHandle(typeof(u003cu003ef__AnonymousType26<OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>>).GetMethod("get_Specificulture").MethodHandle, typeof(u003cu003ef__AnonymousType26<OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>>).TypeHandle)) };
				MemberInfo[] memberInfoArray = new MemberInfo[] { (MethodInfo)MethodBase.GetMethodFromHandle(typeof(u003cu003ef__AnonymousType6<OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>>).GetMethod("get_Id").MethodHandle, typeof(u003cu003ef__AnonymousType6<OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>>).TypeHandle), (MethodInfo)MethodBase.GetMethodFromHandle(typeof(u003cu003ef__AnonymousType6<OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>>).GetMethod("get_Specificulture").MethodHandle, typeof(u003cu003ef__AnonymousType6<OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>>).TypeHandle) };
				table.PrimaryKey("PK_mix_page_module", Expression.Lambda(Expression.New(methodFromHandle, (IEnumerable<Expression>)expressionArray, memberInfoArray), new ParameterExpression[] { parameterExpression }));
				parameterExpression = Expression.Parameter(typeof(u003cu003ef__AnonymousType26<OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>>), "x");
				ConstructorInfo constructorInfo = (ConstructorInfo)MethodBase.GetMethodFromHandle(typeof(u003cu003ef__AnonymousType27<OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>>).GetMethod(".ctor", new Type[] { typeof(u003cModuleIdu003ej__TPar), typeof(u003cSpecificultureu003ej__TPar) }).MethodHandle, typeof(u003cu003ef__AnonymousType27<OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>>).TypeHandle);
				Expression[] expressionArray1 = new Expression[] { Expression.Property(parameterExpression, (MethodInfo)MethodBase.GetMethodFromHandle(typeof(u003cu003ef__AnonymousType26<OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>>).GetMethod("get_ModuleId").MethodHandle, typeof(u003cu003ef__AnonymousType26<OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>>).TypeHandle)), Expression.Property(parameterExpression, (MethodInfo)MethodBase.GetMethodFromHandle(typeof(u003cu003ef__AnonymousType26<OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>>).GetMethod("get_Specificulture").MethodHandle, typeof(u003cu003ef__AnonymousType26<OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>>).TypeHandle)) };
				MemberInfo[] methodFromHandle1 = new MemberInfo[] { (MethodInfo)MethodBase.GetMethodFromHandle(typeof(u003cu003ef__AnonymousType27<OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>>).GetMethod("get_ModuleId").MethodHandle, typeof(u003cu003ef__AnonymousType27<OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>>).TypeHandle), (MethodInfo)MethodBase.GetMethodFromHandle(typeof(u003cu003ef__AnonymousType27<OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>>).GetMethod("get_Specificulture").MethodHandle, typeof(u003cu003ef__AnonymousType27<OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>>).TypeHandle) };
				table.ForeignKey("FK_Mix_Menu_Module_Mix_Module1", Expression.Lambda(Expression.New(constructorInfo, (IEnumerable<Expression>)expressionArray1, methodFromHandle1), new ParameterExpression[] { parameterExpression }), "mix_module", new string[] { "Id", "Specificulture" }, null, 0, 2);
				parameterExpression = Expression.Parameter(typeof(u003cu003ef__AnonymousType26<OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>>), "x");
				ConstructorInfo constructorInfo1 = (ConstructorInfo)MethodBase.GetMethodFromHandle(typeof(u003cu003ef__AnonymousType28<OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>>).GetMethod(".ctor", new Type[] { typeof(u003cPageIdu003ej__TPar), typeof(u003cSpecificultureu003ej__TPar) }).MethodHandle, typeof(u003cu003ef__AnonymousType28<OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>>).TypeHandle);
				Expression[] expressionArray2 = new Expression[] { Expression.Property(parameterExpression, (MethodInfo)MethodBase.GetMethodFromHandle(typeof(u003cu003ef__AnonymousType26<OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>>).GetMethod("get_PageId").MethodHandle, typeof(u003cu003ef__AnonymousType26<OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>>).TypeHandle)), Expression.Property(parameterExpression, (MethodInfo)MethodBase.GetMethodFromHandle(typeof(u003cu003ef__AnonymousType26<OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>>).GetMethod("get_Specificulture").MethodHandle, typeof(u003cu003ef__AnonymousType26<OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>>).TypeHandle)) };
				MemberInfo[] memberInfoArray1 = new MemberInfo[] { (MethodInfo)MethodBase.GetMethodFromHandle(typeof(u003cu003ef__AnonymousType28<OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>>).GetMethod("get_PageId").MethodHandle, typeof(u003cu003ef__AnonymousType28<OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>>).TypeHandle), (MethodInfo)MethodBase.GetMethodFromHandle(typeof(u003cu003ef__AnonymousType28<OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>>).GetMethod("get_Specificulture").MethodHandle, typeof(u003cu003ef__AnonymousType28<OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>>).TypeHandle) };
				table.ForeignKey("FK_Mix_Page_Module_Mix_Page", Expression.Lambda(Expression.New(constructorInfo1, (IEnumerable<Expression>)expressionArray2, memberInfoArray1), new ParameterExpression[] { parameterExpression }), "mix_page", new string[] { "Id", "Specificulture" }, null, 0, 1);
			}, null);
			migrationBuilder.CreateTable("mix_module_data", (ColumnsBuilder table) => {
				bool? nullable = null;
				bool? nullable1 = nullable;
				nullable = null;
				OperationBuilder<AddColumnOperation> operationBuilder = table.Column<string>(null, nullable1, new int?(50), false, null, false, null, null, null, nullable, null);
				nullable = null;
				bool? nullable2 = nullable;
				nullable = null;
				OperationBuilder<AddColumnOperation> operationBuilder1 = table.Column<string>(null, nullable2, new int?(10), false, null, false, null, null, null, nullable, null);
				nullable = null;
				bool? nullable3 = nullable;
				int? nullable4 = null;
				nullable = null;
				OperationBuilder<AddColumnOperation> operationBuilder2 = table.Column<int>(null, nullable3, nullable4, false, null, false, null, null, null, nullable, null);
				nullable = null;
				bool? nullable5 = nullable;
				nullable4 = null;
				nullable = null;
				OperationBuilder<AddColumnOperation> operationBuilder3 = table.Column<int>(null, nullable5, nullable4, false, null, true, null, null, null, nullable, null);
				nullable = null;
				bool? nullable6 = nullable;
				nullable4 = null;
				nullable = null;
				OperationBuilder<AddColumnOperation> operationBuilder4 = table.Column<int>(null, nullable6, nullable4, false, null, true, null, null, null, nullable, null);
				nullable = null;
				bool? nullable7 = nullable;
				nullable = null;
				OperationBuilder<AddColumnOperation> operationBuilder5 = table.Column<string>(null, nullable7, new int?(0xfa0), false, null, false, null, null, null, nullable, null);
				nullable = null;
				bool? nullable8 = nullable;
				nullable = null;
				OperationBuilder<AddColumnOperation> operationBuilder6 = table.Column<string>(null, nullable8, new int?(0xfa0), false, null, true, null, null, null, nullable, null);
				nullable = null;
				OperationBuilder<AddColumnOperation> operationBuilder7 = table.Column<string>(null, new bool?(false), new int?(50), false, null, true, null, null, null, nullable, null);
				nullable = null;
				bool? nullable9 = nullable;
				nullable4 = null;
				nullable = null;
				OperationBuilder<AddColumnOperation> operationBuilder8 = table.Column<DateTime>("datetime", nullable9, nullable4, false, null, false, null, null, null, nullable, null);
				nullable = null;
				OperationBuilder<AddColumnOperation> operationBuilder9 = table.Column<string>(null, new bool?(false), new int?(50), false, null, true, null, null, null, nullable, null);
				nullable = null;
				bool? nullable10 = nullable;
				nullable4 = null;
				nullable = null;
				OperationBuilder<AddColumnOperation> operationBuilder10 = table.Column<DateTime>("datetime", nullable10, nullable4, false, null, true, null, null, null, nullable, null);
				nullable = null;
				bool? nullable11 = nullable;
				nullable4 = null;
				nullable = null;
				OperationBuilder<AddColumnOperation> operationBuilder11 = table.Column<int>(null, nullable11, nullable4, false, null, false, null, null, null, nullable, null);
				nullable = null;
				return new { Id = operationBuilder, Specificulture = operationBuilder1, ModuleId = operationBuilder2, PageId = operationBuilder3, PostId = operationBuilder4, Fields = operationBuilder5, Value = operationBuilder6, CreatedBy = operationBuilder7, CreatedDateTime = operationBuilder8, ModifiedBy = operationBuilder9, LastModified = operationBuilder10, Priority = operationBuilder11, Status = table.Column<string>(null, new bool?(false), new int?(50), false, null, false, null, null, null, nullable, null) };
			}, null, (table) => {
				ParameterExpression parameterExpression = Expression.Parameter(typeof(u003cu003ef__AnonymousType29<OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>>), "x");
				ConstructorInfo methodFromHandle = (ConstructorInfo)MethodBase.GetMethodFromHandle(typeof(u003cu003ef__AnonymousType6<OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>>).GetMethod(".ctor", new Type[] { typeof(u003cIdu003ej__TPar), typeof(u003cSpecificultureu003ej__TPar) }).MethodHandle, typeof(u003cu003ef__AnonymousType6<OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>>).TypeHandle);
				Expression[] expressionArray = new Expression[] { Expression.Property(parameterExpression, (MethodInfo)MethodBase.GetMethodFromHandle(typeof(u003cu003ef__AnonymousType29<OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>>).GetMethod("get_Id").MethodHandle, typeof(u003cu003ef__AnonymousType29<OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>>).TypeHandle)), Expression.Property(parameterExpression, (MethodInfo)MethodBase.GetMethodFromHandle(typeof(u003cu003ef__AnonymousType29<OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>>).GetMethod("get_Specificulture").MethodHandle, typeof(u003cu003ef__AnonymousType29<OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>>).TypeHandle)) };
				MemberInfo[] memberInfoArray = new MemberInfo[] { (MethodInfo)MethodBase.GetMethodFromHandle(typeof(u003cu003ef__AnonymousType6<OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>>).GetMethod("get_Id").MethodHandle, typeof(u003cu003ef__AnonymousType6<OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>>).TypeHandle), (MethodInfo)MethodBase.GetMethodFromHandle(typeof(u003cu003ef__AnonymousType6<OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>>).GetMethod("get_Specificulture").MethodHandle, typeof(u003cu003ef__AnonymousType6<OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>>).TypeHandle) };
				table.PrimaryKey("PK_mix_module_data", Expression.Lambda(Expression.New(methodFromHandle, (IEnumerable<Expression>)expressionArray, memberInfoArray), new ParameterExpression[] { parameterExpression }));
				parameterExpression = Expression.Parameter(typeof(u003cu003ef__AnonymousType29<OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>>), "x");
				ConstructorInfo constructorInfo = (ConstructorInfo)MethodBase.GetMethodFromHandle(typeof(u003cu003ef__AnonymousType27<OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>>).GetMethod(".ctor", new Type[] { typeof(u003cModuleIdu003ej__TPar), typeof(u003cSpecificultureu003ej__TPar) }).MethodHandle, typeof(u003cu003ef__AnonymousType27<OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>>).TypeHandle);
				Expression[] expressionArray1 = new Expression[] { Expression.Property(parameterExpression, (MethodInfo)MethodBase.GetMethodFromHandle(typeof(u003cu003ef__AnonymousType29<OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>>).GetMethod("get_ModuleId").MethodHandle, typeof(u003cu003ef__AnonymousType29<OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>>).TypeHandle)), Expression.Property(parameterExpression, (MethodInfo)MethodBase.GetMethodFromHandle(typeof(u003cu003ef__AnonymousType29<OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>>).GetMethod("get_Specificulture").MethodHandle, typeof(u003cu003ef__AnonymousType29<OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>>).TypeHandle)) };
				MemberInfo[] methodFromHandle1 = new MemberInfo[] { (MethodInfo)MethodBase.GetMethodFromHandle(typeof(u003cu003ef__AnonymousType27<OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>>).GetMethod("get_ModuleId").MethodHandle, typeof(u003cu003ef__AnonymousType27<OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>>).TypeHandle), (MethodInfo)MethodBase.GetMethodFromHandle(typeof(u003cu003ef__AnonymousType27<OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>>).GetMethod("get_Specificulture").MethodHandle, typeof(u003cu003ef__AnonymousType27<OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>>).TypeHandle) };
				table.ForeignKey("FK_Mix_Module_Data_Mix_Module", Expression.Lambda(Expression.New(constructorInfo, (IEnumerable<Expression>)expressionArray1, methodFromHandle1), new ParameterExpression[] { parameterExpression }), "mix_module", new string[] { "Id", "Specificulture" }, null, 0, 2);
				parameterExpression = Expression.Parameter(typeof(u003cu003ef__AnonymousType29<OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>>), "x");
				ConstructorInfo constructorInfo1 = (ConstructorInfo)MethodBase.GetMethodFromHandle(typeof(u003cu003ef__AnonymousType28<OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>>).GetMethod(".ctor", new Type[] { typeof(u003cPageIdu003ej__TPar), typeof(u003cSpecificultureu003ej__TPar) }).MethodHandle, typeof(u003cu003ef__AnonymousType28<OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>>).TypeHandle);
				Expression[] expressionArray2 = new Expression[] { Expression.Property(parameterExpression, (MethodInfo)MethodBase.GetMethodFromHandle(typeof(u003cu003ef__AnonymousType29<OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>>).GetMethod("get_PageId").MethodHandle, typeof(u003cu003ef__AnonymousType29<OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>>).TypeHandle)), Expression.Property(parameterExpression, (MethodInfo)MethodBase.GetMethodFromHandle(typeof(u003cu003ef__AnonymousType29<OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>>).GetMethod("get_Specificulture").MethodHandle, typeof(u003cu003ef__AnonymousType29<OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>>).TypeHandle)) };
				MemberInfo[] memberInfoArray1 = new MemberInfo[] { (MethodInfo)MethodBase.GetMethodFromHandle(typeof(u003cu003ef__AnonymousType28<OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>>).GetMethod("get_PageId").MethodHandle, typeof(u003cu003ef__AnonymousType28<OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>>).TypeHandle), (MethodInfo)MethodBase.GetMethodFromHandle(typeof(u003cu003ef__AnonymousType28<OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>>).GetMethod("get_Specificulture").MethodHandle, typeof(u003cu003ef__AnonymousType28<OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>>).TypeHandle) };
				table.ForeignKey("FK_mix_module_data_mix_page", Expression.Lambda(Expression.New(constructorInfo1, (IEnumerable<Expression>)expressionArray2, memberInfoArray1), new ParameterExpression[] { parameterExpression }), "mix_page", new string[] { "Id", "Specificulture" }, null, 0, 1);
				parameterExpression = Expression.Parameter(typeof(u003cu003ef__AnonymousType29<OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>>), "x");
				ConstructorInfo methodFromHandle2 = (ConstructorInfo)MethodBase.GetMethodFromHandle(typeof(u003cu003ef__AnonymousType30<OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>>).GetMethod(".ctor", new Type[] { typeof(u003cPostIdu003ej__TPar), typeof(u003cSpecificultureu003ej__TPar) }).MethodHandle, typeof(u003cu003ef__AnonymousType30<OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>>).TypeHandle);
				Expression[] expressionArray3 = new Expression[] { Expression.Property(parameterExpression, (MethodInfo)MethodBase.GetMethodFromHandle(typeof(u003cu003ef__AnonymousType29<OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>>).GetMethod("get_PostId").MethodHandle, typeof(u003cu003ef__AnonymousType29<OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>>).TypeHandle)), Expression.Property(parameterExpression, (MethodInfo)MethodBase.GetMethodFromHandle(typeof(u003cu003ef__AnonymousType29<OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>>).GetMethod("get_Specificulture").MethodHandle, typeof(u003cu003ef__AnonymousType29<OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>>).TypeHandle)) };
				MemberInfo[] memberInfoArray2 = new MemberInfo[] { (MethodInfo)MethodBase.GetMethodFromHandle(typeof(u003cu003ef__AnonymousType30<OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>>).GetMethod("get_PostId").MethodHandle, typeof(u003cu003ef__AnonymousType30<OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>>).TypeHandle), (MethodInfo)MethodBase.GetMethodFromHandle(typeof(u003cu003ef__AnonymousType30<OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>>).GetMethod("get_Specificulture").MethodHandle, typeof(u003cu003ef__AnonymousType30<OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>>).TypeHandle) };
				table.ForeignKey("FK_mix_module_data_mix_post", Expression.Lambda(Expression.New(methodFromHandle2, (IEnumerable<Expression>)expressionArray3, memberInfoArray2), new ParameterExpression[] { parameterExpression }), "mix_post", new string[] { "Id", "Specificulture" }, null, 0, 1);
			}, null);
			migrationBuilder.CreateTable("mix_module_post", (ColumnsBuilder table) => {
				bool? nullable = null;
				bool? nullable1 = nullable;
				int? nullable2 = null;
				nullable = null;
				OperationBuilder<AddColumnOperation> operationBuilder = table.Column<int>(null, nullable1, nullable2, false, null, false, null, null, null, nullable, null);
				nullable = null;
				bool? nullable3 = nullable;
				nullable = null;
				OperationBuilder<AddColumnOperation> operationBuilder1 = table.Column<string>(null, nullable3, new int?(10), false, null, false, null, null, null, nullable, null);
				nullable = null;
				bool? nullable4 = nullable;
				nullable2 = null;
				nullable = null;
				OperationBuilder<AddColumnOperation> operationBuilder2 = table.Column<int>(null, nullable4, nullable2, false, null, false, null, null, null, nullable, null);
				nullable = null;
				bool? nullable5 = nullable;
				nullable2 = null;
				nullable = null;
				OperationBuilder<AddColumnOperation> operationBuilder3 = table.Column<int>(null, nullable5, nullable2, false, null, false, null, null, null, nullable, null);
				nullable = null;
				bool? nullable6 = nullable;
				nullable = null;
				OperationBuilder<AddColumnOperation> operationBuilder4 = table.Column<string>(null, nullable6, new int?(250), false, null, true, null, null, null, nullable, null);
				nullable = null;
				bool? nullable7 = nullable;
				nullable = null;
				OperationBuilder<AddColumnOperation> operationBuilder5 = table.Column<string>(null, nullable7, new int?(250), false, null, true, null, null, null, nullable, null);
				nullable = null;
				OperationBuilder<AddColumnOperation> operationBuilder6 = table.Column<string>(null, new bool?(false), new int?(50), false, null, true, null, null, null, nullable, null);
				nullable = null;
				bool? nullable8 = nullable;
				nullable2 = null;
				nullable = null;
				OperationBuilder<AddColumnOperation> operationBuilder7 = table.Column<DateTime>("datetime", nullable8, nullable2, false, null, false, null, null, null, nullable, null);
				nullable = null;
				OperationBuilder<AddColumnOperation> operationBuilder8 = table.Column<string>(null, new bool?(false), new int?(50), false, null, true, null, null, null, nullable, null);
				nullable = null;
				bool? nullable9 = nullable;
				nullable2 = null;
				nullable = null;
				OperationBuilder<AddColumnOperation> operationBuilder9 = table.Column<DateTime>("datetime", nullable9, nullable2, false, null, true, null, null, null, nullable, null);
				nullable = null;
				bool? nullable10 = nullable;
				nullable2 = null;
				nullable = null;
				OperationBuilder<AddColumnOperation> operationBuilder10 = table.Column<int>(null, nullable10, nullable2, false, null, false, null, null, null, nullable, null);
				nullable = null;
				return new { Id = operationBuilder, Specificulture = operationBuilder1, PostId = operationBuilder2, ModuleId = operationBuilder3, Description = operationBuilder4, Image = operationBuilder5, CreatedBy = operationBuilder6, CreatedDateTime = operationBuilder7, ModifiedBy = operationBuilder8, LastModified = operationBuilder9, Priority = operationBuilder10, Status = table.Column<string>(null, new bool?(false), new int?(50), false, null, false, null, null, null, nullable, null) };
			}, null, (table) => {
				ParameterExpression parameterExpression = Expression.Parameter(typeof(u003cu003ef__AnonymousType31<OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>>), "x");
				ConstructorInfo methodFromHandle = (ConstructorInfo)MethodBase.GetMethodFromHandle(typeof(u003cu003ef__AnonymousType6<OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>>).GetMethod(".ctor", new Type[] { typeof(u003cIdu003ej__TPar), typeof(u003cSpecificultureu003ej__TPar) }).MethodHandle, typeof(u003cu003ef__AnonymousType6<OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>>).TypeHandle);
				Expression[] expressionArray = new Expression[] { Expression.Property(parameterExpression, (MethodInfo)MethodBase.GetMethodFromHandle(typeof(u003cu003ef__AnonymousType31<OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>>).GetMethod("get_Id").MethodHandle, typeof(u003cu003ef__AnonymousType31<OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>>).TypeHandle)), Expression.Property(parameterExpression, (MethodInfo)MethodBase.GetMethodFromHandle(typeof(u003cu003ef__AnonymousType31<OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>>).GetMethod("get_Specificulture").MethodHandle, typeof(u003cu003ef__AnonymousType31<OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>>).TypeHandle)) };
				MemberInfo[] memberInfoArray = new MemberInfo[] { (MethodInfo)MethodBase.GetMethodFromHandle(typeof(u003cu003ef__AnonymousType6<OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>>).GetMethod("get_Id").MethodHandle, typeof(u003cu003ef__AnonymousType6<OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>>).TypeHandle), (MethodInfo)MethodBase.GetMethodFromHandle(typeof(u003cu003ef__AnonymousType6<OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>>).GetMethod("get_Specificulture").MethodHandle, typeof(u003cu003ef__AnonymousType6<OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>>).TypeHandle) };
				table.PrimaryKey("PK_mix_module_post", Expression.Lambda(Expression.New(methodFromHandle, (IEnumerable<Expression>)expressionArray, memberInfoArray), new ParameterExpression[] { parameterExpression }));
				parameterExpression = Expression.Parameter(typeof(u003cu003ef__AnonymousType31<OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>>), "x");
				ConstructorInfo constructorInfo = (ConstructorInfo)MethodBase.GetMethodFromHandle(typeof(u003cu003ef__AnonymousType27<OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>>).GetMethod(".ctor", new Type[] { typeof(u003cModuleIdu003ej__TPar), typeof(u003cSpecificultureu003ej__TPar) }).MethodHandle, typeof(u003cu003ef__AnonymousType27<OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>>).TypeHandle);
				Expression[] expressionArray1 = new Expression[] { Expression.Property(parameterExpression, (MethodInfo)MethodBase.GetMethodFromHandle(typeof(u003cu003ef__AnonymousType31<OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>>).GetMethod("get_ModuleId").MethodHandle, typeof(u003cu003ef__AnonymousType31<OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>>).TypeHandle)), Expression.Property(parameterExpression, (MethodInfo)MethodBase.GetMethodFromHandle(typeof(u003cu003ef__AnonymousType31<OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>>).GetMethod("get_Specificulture").MethodHandle, typeof(u003cu003ef__AnonymousType31<OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>>).TypeHandle)) };
				MemberInfo[] methodFromHandle1 = new MemberInfo[] { (MethodInfo)MethodBase.GetMethodFromHandle(typeof(u003cu003ef__AnonymousType27<OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>>).GetMethod("get_ModuleId").MethodHandle, typeof(u003cu003ef__AnonymousType27<OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>>).TypeHandle), (MethodInfo)MethodBase.GetMethodFromHandle(typeof(u003cu003ef__AnonymousType27<OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>>).GetMethod("get_Specificulture").MethodHandle, typeof(u003cu003ef__AnonymousType27<OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>>).TypeHandle) };
				table.ForeignKey("FK_Mix_Module_Post_Mix_Module", Expression.Lambda(Expression.New(constructorInfo, (IEnumerable<Expression>)expressionArray1, methodFromHandle1), new ParameterExpression[] { parameterExpression }), "mix_module", new string[] { "Id", "Specificulture" }, null, 0, 1);
				parameterExpression = Expression.Parameter(typeof(u003cu003ef__AnonymousType31<OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>>), "x");
				ConstructorInfo constructorInfo1 = (ConstructorInfo)MethodBase.GetMethodFromHandle(typeof(u003cu003ef__AnonymousType30<OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>>).GetMethod(".ctor", new Type[] { typeof(u003cPostIdu003ej__TPar), typeof(u003cSpecificultureu003ej__TPar) }).MethodHandle, typeof(u003cu003ef__AnonymousType30<OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>>).TypeHandle);
				Expression[] expressionArray2 = new Expression[] { Expression.Property(parameterExpression, (MethodInfo)MethodBase.GetMethodFromHandle(typeof(u003cu003ef__AnonymousType31<OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>>).GetMethod("get_PostId").MethodHandle, typeof(u003cu003ef__AnonymousType31<OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>>).TypeHandle)), Expression.Property(parameterExpression, (MethodInfo)MethodBase.GetMethodFromHandle(typeof(u003cu003ef__AnonymousType31<OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>>).GetMethod("get_Specificulture").MethodHandle, typeof(u003cu003ef__AnonymousType31<OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>>).TypeHandle)) };
				MemberInfo[] memberInfoArray1 = new MemberInfo[] { (MethodInfo)MethodBase.GetMethodFromHandle(typeof(u003cu003ef__AnonymousType30<OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>>).GetMethod("get_PostId").MethodHandle, typeof(u003cu003ef__AnonymousType30<OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>>).TypeHandle), (MethodInfo)MethodBase.GetMethodFromHandle(typeof(u003cu003ef__AnonymousType30<OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>>).GetMethod("get_Specificulture").MethodHandle, typeof(u003cu003ef__AnonymousType30<OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>>).TypeHandle) };
				table.ForeignKey("FK_Mix_Module_Post_Mix_Post", Expression.Lambda(Expression.New(constructorInfo1, (IEnumerable<Expression>)expressionArray2, memberInfoArray1), new ParameterExpression[] { parameterExpression }), "mix_post", new string[] { "Id", "Specificulture" }, null, 0, 1);
			}, null);
			migrationBuilder.CreateTable("mix_page_post", (ColumnsBuilder table) => {
				bool? nullable = null;
				bool? nullable1 = nullable;
				int? nullable2 = null;
				nullable = null;
				OperationBuilder<AddColumnOperation> operationBuilder = table.Column<int>(null, nullable1, nullable2, false, null, false, null, null, null, nullable, null);
				nullable = null;
				bool? nullable3 = nullable;
				nullable = null;
				OperationBuilder<AddColumnOperation> operationBuilder1 = table.Column<string>(null, nullable3, new int?(10), false, null, false, null, null, null, nullable, null);
				nullable = null;
				bool? nullable4 = nullable;
				nullable2 = null;
				nullable = null;
				OperationBuilder<AddColumnOperation> operationBuilder2 = table.Column<int>(null, nullable4, nullable2, false, null, false, null, null, null, nullable, null);
				nullable = null;
				bool? nullable5 = nullable;
				nullable2 = null;
				nullable = null;
				OperationBuilder<AddColumnOperation> operationBuilder3 = table.Column<int>(null, nullable5, nullable2, false, null, false, null, null, null, nullable, null);
				nullable = null;
				bool? nullable6 = nullable;
				nullable = null;
				OperationBuilder<AddColumnOperation> operationBuilder4 = table.Column<string>(null, nullable6, new int?(250), false, null, true, null, null, null, nullable, null);
				nullable = null;
				bool? nullable7 = nullable;
				nullable = null;
				OperationBuilder<AddColumnOperation> operationBuilder5 = table.Column<string>(null, nullable7, new int?(250), false, null, true, null, null, null, nullable, null);
				nullable = null;
				OperationBuilder<AddColumnOperation> operationBuilder6 = table.Column<string>(null, new bool?(false), new int?(50), false, null, true, null, null, null, nullable, null);
				nullable = null;
				bool? nullable8 = nullable;
				nullable2 = null;
				nullable = null;
				OperationBuilder<AddColumnOperation> operationBuilder7 = table.Column<DateTime>("datetime", nullable8, nullable2, false, null, false, null, null, null, nullable, null);
				nullable = null;
				OperationBuilder<AddColumnOperation> operationBuilder8 = table.Column<string>(null, new bool?(false), new int?(50), false, null, true, null, null, null, nullable, null);
				nullable = null;
				bool? nullable9 = nullable;
				nullable2 = null;
				nullable = null;
				OperationBuilder<AddColumnOperation> operationBuilder9 = table.Column<DateTime>("datetime", nullable9, nullable2, false, null, true, null, null, null, nullable, null);
				nullable = null;
				bool? nullable10 = nullable;
				nullable2 = null;
				nullable = null;
				OperationBuilder<AddColumnOperation> operationBuilder10 = table.Column<int>(null, nullable10, nullable2, false, null, false, null, null, null, nullable, null);
				nullable = null;
				return new { Id = operationBuilder, Specificulture = operationBuilder1, PostId = operationBuilder2, PageId = operationBuilder3, Description = operationBuilder4, Image = operationBuilder5, CreatedBy = operationBuilder6, CreatedDateTime = operationBuilder7, ModifiedBy = operationBuilder8, LastModified = operationBuilder9, Priority = operationBuilder10, Status = table.Column<string>(null, new bool?(false), new int?(50), false, null, false, null, null, null, nullable, null) };
			}, null, (table) => {
				ParameterExpression parameterExpression = Expression.Parameter(typeof(u003cu003ef__AnonymousType32<OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>>), "x");
				ConstructorInfo methodFromHandle = (ConstructorInfo)MethodBase.GetMethodFromHandle(typeof(u003cu003ef__AnonymousType6<OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>>).GetMethod(".ctor", new Type[] { typeof(u003cIdu003ej__TPar), typeof(u003cSpecificultureu003ej__TPar) }).MethodHandle, typeof(u003cu003ef__AnonymousType6<OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>>).TypeHandle);
				Expression[] expressionArray = new Expression[] { Expression.Property(parameterExpression, (MethodInfo)MethodBase.GetMethodFromHandle(typeof(u003cu003ef__AnonymousType32<OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>>).GetMethod("get_Id").MethodHandle, typeof(u003cu003ef__AnonymousType32<OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>>).TypeHandle)), Expression.Property(parameterExpression, (MethodInfo)MethodBase.GetMethodFromHandle(typeof(u003cu003ef__AnonymousType32<OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>>).GetMethod("get_Specificulture").MethodHandle, typeof(u003cu003ef__AnonymousType32<OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>>).TypeHandle)) };
				MemberInfo[] memberInfoArray = new MemberInfo[] { (MethodInfo)MethodBase.GetMethodFromHandle(typeof(u003cu003ef__AnonymousType6<OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>>).GetMethod("get_Id").MethodHandle, typeof(u003cu003ef__AnonymousType6<OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>>).TypeHandle), (MethodInfo)MethodBase.GetMethodFromHandle(typeof(u003cu003ef__AnonymousType6<OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>>).GetMethod("get_Specificulture").MethodHandle, typeof(u003cu003ef__AnonymousType6<OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>>).TypeHandle) };
				table.PrimaryKey("PK_mix_page_post", Expression.Lambda(Expression.New(methodFromHandle, (IEnumerable<Expression>)expressionArray, memberInfoArray), new ParameterExpression[] { parameterExpression }));
				parameterExpression = Expression.Parameter(typeof(u003cu003ef__AnonymousType32<OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>>), "x");
				ConstructorInfo constructorInfo = (ConstructorInfo)MethodBase.GetMethodFromHandle(typeof(u003cu003ef__AnonymousType28<OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>>).GetMethod(".ctor", new Type[] { typeof(u003cPageIdu003ej__TPar), typeof(u003cSpecificultureu003ej__TPar) }).MethodHandle, typeof(u003cu003ef__AnonymousType28<OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>>).TypeHandle);
				Expression[] expressionArray1 = new Expression[] { Expression.Property(parameterExpression, (MethodInfo)MethodBase.GetMethodFromHandle(typeof(u003cu003ef__AnonymousType32<OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>>).GetMethod("get_PageId").MethodHandle, typeof(u003cu003ef__AnonymousType32<OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>>).TypeHandle)), Expression.Property(parameterExpression, (MethodInfo)MethodBase.GetMethodFromHandle(typeof(u003cu003ef__AnonymousType32<OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>>).GetMethod("get_Specificulture").MethodHandle, typeof(u003cu003ef__AnonymousType32<OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>>).TypeHandle)) };
				MemberInfo[] methodFromHandle1 = new MemberInfo[] { (MethodInfo)MethodBase.GetMethodFromHandle(typeof(u003cu003ef__AnonymousType28<OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>>).GetMethod("get_PageId").MethodHandle, typeof(u003cu003ef__AnonymousType28<OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>>).TypeHandle), (MethodInfo)MethodBase.GetMethodFromHandle(typeof(u003cu003ef__AnonymousType28<OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>>).GetMethod("get_Specificulture").MethodHandle, typeof(u003cu003ef__AnonymousType28<OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>>).TypeHandle) };
				table.ForeignKey("FK_Mix_Page_Post_Mix_Page", Expression.Lambda(Expression.New(constructorInfo, (IEnumerable<Expression>)expressionArray1, methodFromHandle1), new ParameterExpression[] { parameterExpression }), "mix_page", new string[] { "Id", "Specificulture" }, null, 0, 1);
				parameterExpression = Expression.Parameter(typeof(u003cu003ef__AnonymousType32<OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>>), "x");
				ConstructorInfo constructorInfo1 = (ConstructorInfo)MethodBase.GetMethodFromHandle(typeof(u003cu003ef__AnonymousType30<OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>>).GetMethod(".ctor", new Type[] { typeof(u003cPostIdu003ej__TPar), typeof(u003cSpecificultureu003ej__TPar) }).MethodHandle, typeof(u003cu003ef__AnonymousType30<OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>>).TypeHandle);
				Expression[] expressionArray2 = new Expression[] { Expression.Property(parameterExpression, (MethodInfo)MethodBase.GetMethodFromHandle(typeof(u003cu003ef__AnonymousType32<OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>>).GetMethod("get_PostId").MethodHandle, typeof(u003cu003ef__AnonymousType32<OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>>).TypeHandle)), Expression.Property(parameterExpression, (MethodInfo)MethodBase.GetMethodFromHandle(typeof(u003cu003ef__AnonymousType32<OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>>).GetMethod("get_Specificulture").MethodHandle, typeof(u003cu003ef__AnonymousType32<OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>>).TypeHandle)) };
				MemberInfo[] memberInfoArray1 = new MemberInfo[] { (MethodInfo)MethodBase.GetMethodFromHandle(typeof(u003cu003ef__AnonymousType30<OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>>).GetMethod("get_PostId").MethodHandle, typeof(u003cu003ef__AnonymousType30<OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>>).TypeHandle), (MethodInfo)MethodBase.GetMethodFromHandle(typeof(u003cu003ef__AnonymousType30<OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>>).GetMethod("get_Specificulture").MethodHandle, typeof(u003cu003ef__AnonymousType30<OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>>).TypeHandle) };
				table.ForeignKey("FK_Mix_Page_Post_Mix_Post", Expression.Lambda(Expression.New(constructorInfo1, (IEnumerable<Expression>)expressionArray2, memberInfoArray1), new ParameterExpression[] { parameterExpression }), "mix_post", new string[] { "Id", "Specificulture" }, null, 0, 1);
			}, null);
			migrationBuilder.CreateTable("mix_post_media", (ColumnsBuilder table) => {
				bool? nullable = null;
				bool? nullable1 = nullable;
				int? nullable2 = null;
				nullable = null;
				OperationBuilder<AddColumnOperation> operationBuilder = table.Column<int>(null, nullable1, nullable2, false, null, false, null, null, null, nullable, null);
				nullable = null;
				bool? nullable3 = nullable;
				nullable = null;
				OperationBuilder<AddColumnOperation> operationBuilder1 = table.Column<string>(null, nullable3, new int?(10), false, null, false, null, null, null, nullable, null);
				nullable = null;
				bool? nullable4 = nullable;
				nullable2 = null;
				nullable = null;
				OperationBuilder<AddColumnOperation> operationBuilder2 = table.Column<int>(null, nullable4, nullable2, false, null, false, null, null, null, nullable, null);
				nullable = null;
				bool? nullable5 = nullable;
				nullable2 = null;
				nullable = null;
				OperationBuilder<AddColumnOperation> operationBuilder3 = table.Column<int>(null, nullable5, nullable2, false, null, false, null, null, null, nullable, null);
				nullable = null;
				bool? nullable6 = nullable;
				nullable = null;
				OperationBuilder<AddColumnOperation> operationBuilder4 = table.Column<string>(null, nullable6, new int?(250), false, null, true, null, null, null, nullable, null);
				nullable = null;
				bool? nullable7 = nullable;
				nullable = null;
				OperationBuilder<AddColumnOperation> operationBuilder5 = table.Column<string>(null, nullable7, new int?(250), false, null, true, null, null, null, nullable, null);
				nullable = null;
				bool? nullable8 = nullable;
				nullable2 = null;
				nullable = null;
				OperationBuilder<AddColumnOperation> operationBuilder6 = table.Column<int>(null, nullable8, nullable2, false, null, false, null, null, null, nullable, null);
				nullable = null;
				OperationBuilder<AddColumnOperation> operationBuilder7 = table.Column<string>(null, new bool?(false), new int?(50), false, null, true, null, null, null, nullable, null);
				nullable = null;
				bool? nullable9 = nullable;
				nullable2 = null;
				nullable = null;
				OperationBuilder<AddColumnOperation> operationBuilder8 = table.Column<DateTime>("datetime", nullable9, nullable2, false, null, false, null, null, null, nullable, null);
				nullable = null;
				OperationBuilder<AddColumnOperation> operationBuilder9 = table.Column<string>(null, new bool?(false), new int?(50), false, null, true, null, null, null, nullable, null);
				nullable = null;
				bool? nullable10 = nullable;
				nullable2 = null;
				nullable = null;
				OperationBuilder<AddColumnOperation> operationBuilder10 = table.Column<DateTime>("datetime", nullable10, nullable2, false, null, true, null, null, null, nullable, null);
				nullable = null;
				bool? nullable11 = nullable;
				nullable2 = null;
				nullable = null;
				OperationBuilder<AddColumnOperation> operationBuilder11 = table.Column<int>(null, nullable11, nullable2, false, null, false, null, null, null, nullable, null);
				nullable = null;
				return new { Id = operationBuilder, Specificulture = operationBuilder1, MediaId = operationBuilder2, PostId = operationBuilder3, Description = operationBuilder4, Image = operationBuilder5, Position = operationBuilder6, CreatedBy = operationBuilder7, CreatedDateTime = operationBuilder8, ModifiedBy = operationBuilder9, LastModified = operationBuilder10, Priority = operationBuilder11, Status = table.Column<string>(null, new bool?(false), new int?(50), false, null, false, null, null, null, nullable, null) };
			}, null, (table) => {
				ParameterExpression parameterExpression = Expression.Parameter(typeof(u003cu003ef__AnonymousType33<OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>>), "x");
				ConstructorInfo methodFromHandle = (ConstructorInfo)MethodBase.GetMethodFromHandle(typeof(u003cu003ef__AnonymousType6<OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>>).GetMethod(".ctor", new Type[] { typeof(u003cIdu003ej__TPar), typeof(u003cSpecificultureu003ej__TPar) }).MethodHandle, typeof(u003cu003ef__AnonymousType6<OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>>).TypeHandle);
				Expression[] expressionArray = new Expression[] { Expression.Property(parameterExpression, (MethodInfo)MethodBase.GetMethodFromHandle(typeof(u003cu003ef__AnonymousType33<OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>>).GetMethod("get_Id").MethodHandle, typeof(u003cu003ef__AnonymousType33<OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>>).TypeHandle)), Expression.Property(parameterExpression, (MethodInfo)MethodBase.GetMethodFromHandle(typeof(u003cu003ef__AnonymousType33<OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>>).GetMethod("get_Specificulture").MethodHandle, typeof(u003cu003ef__AnonymousType33<OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>>).TypeHandle)) };
				MemberInfo[] memberInfoArray = new MemberInfo[] { (MethodInfo)MethodBase.GetMethodFromHandle(typeof(u003cu003ef__AnonymousType6<OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>>).GetMethod("get_Id").MethodHandle, typeof(u003cu003ef__AnonymousType6<OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>>).TypeHandle), (MethodInfo)MethodBase.GetMethodFromHandle(typeof(u003cu003ef__AnonymousType6<OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>>).GetMethod("get_Specificulture").MethodHandle, typeof(u003cu003ef__AnonymousType6<OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>>).TypeHandle) };
				table.PrimaryKey("PK_mix_post_media", Expression.Lambda(Expression.New(methodFromHandle, (IEnumerable<Expression>)expressionArray, memberInfoArray), new ParameterExpression[] { parameterExpression }));
				parameterExpression = Expression.Parameter(typeof(u003cu003ef__AnonymousType33<OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>>), "x");
				ConstructorInfo constructorInfo = (ConstructorInfo)MethodBase.GetMethodFromHandle(typeof(u003cu003ef__AnonymousType34<OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>>).GetMethod(".ctor", new Type[] { typeof(u003cMediaIdu003ej__TPar), typeof(u003cSpecificultureu003ej__TPar) }).MethodHandle, typeof(u003cu003ef__AnonymousType34<OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>>).TypeHandle);
				Expression[] expressionArray1 = new Expression[] { Expression.Property(parameterExpression, (MethodInfo)MethodBase.GetMethodFromHandle(typeof(u003cu003ef__AnonymousType33<OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>>).GetMethod("get_MediaId").MethodHandle, typeof(u003cu003ef__AnonymousType33<OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>>).TypeHandle)), Expression.Property(parameterExpression, (MethodInfo)MethodBase.GetMethodFromHandle(typeof(u003cu003ef__AnonymousType33<OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>>).GetMethod("get_Specificulture").MethodHandle, typeof(u003cu003ef__AnonymousType33<OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>>).TypeHandle)) };
				MemberInfo[] methodFromHandle1 = new MemberInfo[] { (MethodInfo)MethodBase.GetMethodFromHandle(typeof(u003cu003ef__AnonymousType34<OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>>).GetMethod("get_MediaId").MethodHandle, typeof(u003cu003ef__AnonymousType34<OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>>).TypeHandle), (MethodInfo)MethodBase.GetMethodFromHandle(typeof(u003cu003ef__AnonymousType34<OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>>).GetMethod("get_Specificulture").MethodHandle, typeof(u003cu003ef__AnonymousType34<OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>>).TypeHandle) };
				table.ForeignKey("FK_mix_post_media_mix_media", Expression.Lambda(Expression.New(constructorInfo, (IEnumerable<Expression>)expressionArray1, methodFromHandle1), new ParameterExpression[] { parameterExpression }), "mix_media", new string[] { "Id", "Specificulture" }, null, 0, 1);
				parameterExpression = Expression.Parameter(typeof(u003cu003ef__AnonymousType33<OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>>), "x");
				ConstructorInfo constructorInfo1 = (ConstructorInfo)MethodBase.GetMethodFromHandle(typeof(u003cu003ef__AnonymousType30<OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>>).GetMethod(".ctor", new Type[] { typeof(u003cPostIdu003ej__TPar), typeof(u003cSpecificultureu003ej__TPar) }).MethodHandle, typeof(u003cu003ef__AnonymousType30<OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>>).TypeHandle);
				Expression[] expressionArray2 = new Expression[] { Expression.Property(parameterExpression, (MethodInfo)MethodBase.GetMethodFromHandle(typeof(u003cu003ef__AnonymousType33<OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>>).GetMethod("get_PostId").MethodHandle, typeof(u003cu003ef__AnonymousType33<OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>>).TypeHandle)), Expression.Property(parameterExpression, (MethodInfo)MethodBase.GetMethodFromHandle(typeof(u003cu003ef__AnonymousType33<OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>>).GetMethod("get_Specificulture").MethodHandle, typeof(u003cu003ef__AnonymousType33<OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>>).TypeHandle)) };
				MemberInfo[] memberInfoArray1 = new MemberInfo[] { (MethodInfo)MethodBase.GetMethodFromHandle(typeof(u003cu003ef__AnonymousType30<OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>>).GetMethod("get_PostId").MethodHandle, typeof(u003cu003ef__AnonymousType30<OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>>).TypeHandle), (MethodInfo)MethodBase.GetMethodFromHandle(typeof(u003cu003ef__AnonymousType30<OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>>).GetMethod("get_Specificulture").MethodHandle, typeof(u003cu003ef__AnonymousType30<OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>>).TypeHandle) };
				table.ForeignKey("FK_mix_post_media_mix_post", Expression.Lambda(Expression.New(constructorInfo1, (IEnumerable<Expression>)expressionArray2, memberInfoArray1), new ParameterExpression[] { parameterExpression }), "mix_post", new string[] { "Id", "Specificulture" }, null, 0, 1);
			}, null);
			migrationBuilder.CreateTable("mix_post_module", (ColumnsBuilder table) => {
				bool? nullable = null;
				bool? nullable1 = nullable;
				int? nullable2 = null;
				nullable = null;
				OperationBuilder<AddColumnOperation> operationBuilder = table.Column<int>(null, nullable1, nullable2, false, null, false, null, null, null, nullable, null);
				nullable = null;
				bool? nullable3 = nullable;
				nullable = null;
				OperationBuilder<AddColumnOperation> operationBuilder1 = table.Column<string>(null, nullable3, new int?(10), false, null, false, null, null, null, nullable, null);
				nullable = null;
				bool? nullable4 = nullable;
				nullable2 = null;
				nullable = null;
				OperationBuilder<AddColumnOperation> operationBuilder2 = table.Column<int>(null, nullable4, nullable2, false, null, false, null, null, null, nullable, null);
				nullable = null;
				bool? nullable5 = nullable;
				nullable2 = null;
				nullable = null;
				OperationBuilder<AddColumnOperation> operationBuilder3 = table.Column<int>(null, nullable5, nullable2, false, null, false, null, null, null, nullable, null);
				nullable = null;
				bool? nullable6 = nullable;
				nullable = null;
				OperationBuilder<AddColumnOperation> operationBuilder4 = table.Column<string>(null, nullable6, new int?(250), false, null, true, null, null, null, nullable, null);
				nullable = null;
				bool? nullable7 = nullable;
				nullable = null;
				OperationBuilder<AddColumnOperation> operationBuilder5 = table.Column<string>(null, nullable7, new int?(250), false, null, true, null, null, null, nullable, null);
				nullable = null;
				bool? nullable8 = nullable;
				nullable2 = null;
				nullable = null;
				OperationBuilder<AddColumnOperation> operationBuilder6 = table.Column<int>(null, nullable8, nullable2, false, null, false, null, null, null, nullable, null);
				nullable = null;
				OperationBuilder<AddColumnOperation> operationBuilder7 = table.Column<string>(null, new bool?(false), new int?(50), false, null, true, null, null, null, nullable, null);
				nullable = null;
				bool? nullable9 = nullable;
				nullable2 = null;
				nullable = null;
				OperationBuilder<AddColumnOperation> operationBuilder8 = table.Column<DateTime>("datetime", nullable9, nullable2, false, null, false, null, null, null, nullable, null);
				nullable = null;
				OperationBuilder<AddColumnOperation> operationBuilder9 = table.Column<string>(null, new bool?(false), new int?(50), false, null, true, null, null, null, nullable, null);
				nullable = null;
				bool? nullable10 = nullable;
				nullable2 = null;
				nullable = null;
				OperationBuilder<AddColumnOperation> operationBuilder10 = table.Column<DateTime>("datetime", nullable10, nullable2, false, null, true, null, null, null, nullable, null);
				nullable = null;
				bool? nullable11 = nullable;
				nullable2 = null;
				nullable = null;
				OperationBuilder<AddColumnOperation> operationBuilder11 = table.Column<int>(null, nullable11, nullable2, false, null, false, null, null, null, nullable, null);
				nullable = null;
				return new { Id = operationBuilder, Specificulture = operationBuilder1, ModuleId = operationBuilder2, PostId = operationBuilder3, Description = operationBuilder4, Image = operationBuilder5, Position = operationBuilder6, CreatedBy = operationBuilder7, CreatedDateTime = operationBuilder8, ModifiedBy = operationBuilder9, LastModified = operationBuilder10, Priority = operationBuilder11, Status = table.Column<string>(null, new bool?(false), new int?(50), false, null, false, null, null, null, nullable, null) };
			}, null, (table) => {
				ParameterExpression parameterExpression = Expression.Parameter(typeof(u003cu003ef__AnonymousType35<OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>>), "x");
				ConstructorInfo methodFromHandle = (ConstructorInfo)MethodBase.GetMethodFromHandle(typeof(u003cu003ef__AnonymousType6<OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>>).GetMethod(".ctor", new Type[] { typeof(u003cIdu003ej__TPar), typeof(u003cSpecificultureu003ej__TPar) }).MethodHandle, typeof(u003cu003ef__AnonymousType6<OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>>).TypeHandle);
				Expression[] expressionArray = new Expression[] { Expression.Property(parameterExpression, (MethodInfo)MethodBase.GetMethodFromHandle(typeof(u003cu003ef__AnonymousType35<OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>>).GetMethod("get_Id").MethodHandle, typeof(u003cu003ef__AnonymousType35<OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>>).TypeHandle)), Expression.Property(parameterExpression, (MethodInfo)MethodBase.GetMethodFromHandle(typeof(u003cu003ef__AnonymousType35<OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>>).GetMethod("get_Specificulture").MethodHandle, typeof(u003cu003ef__AnonymousType35<OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>>).TypeHandle)) };
				MemberInfo[] memberInfoArray = new MemberInfo[] { (MethodInfo)MethodBase.GetMethodFromHandle(typeof(u003cu003ef__AnonymousType6<OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>>).GetMethod("get_Id").MethodHandle, typeof(u003cu003ef__AnonymousType6<OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>>).TypeHandle), (MethodInfo)MethodBase.GetMethodFromHandle(typeof(u003cu003ef__AnonymousType6<OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>>).GetMethod("get_Specificulture").MethodHandle, typeof(u003cu003ef__AnonymousType6<OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>>).TypeHandle) };
				table.PrimaryKey("PK_mix_post_module", Expression.Lambda(Expression.New(methodFromHandle, (IEnumerable<Expression>)expressionArray, memberInfoArray), new ParameterExpression[] { parameterExpression }));
				parameterExpression = Expression.Parameter(typeof(u003cu003ef__AnonymousType35<OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>>), "x");
				ConstructorInfo constructorInfo = (ConstructorInfo)MethodBase.GetMethodFromHandle(typeof(u003cu003ef__AnonymousType27<OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>>).GetMethod(".ctor", new Type[] { typeof(u003cModuleIdu003ej__TPar), typeof(u003cSpecificultureu003ej__TPar) }).MethodHandle, typeof(u003cu003ef__AnonymousType27<OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>>).TypeHandle);
				Expression[] expressionArray1 = new Expression[] { Expression.Property(parameterExpression, (MethodInfo)MethodBase.GetMethodFromHandle(typeof(u003cu003ef__AnonymousType35<OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>>).GetMethod("get_ModuleId").MethodHandle, typeof(u003cu003ef__AnonymousType35<OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>>).TypeHandle)), Expression.Property(parameterExpression, (MethodInfo)MethodBase.GetMethodFromHandle(typeof(u003cu003ef__AnonymousType35<OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>>).GetMethod("get_Specificulture").MethodHandle, typeof(u003cu003ef__AnonymousType35<OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>>).TypeHandle)) };
				MemberInfo[] methodFromHandle1 = new MemberInfo[] { (MethodInfo)MethodBase.GetMethodFromHandle(typeof(u003cu003ef__AnonymousType27<OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>>).GetMethod("get_ModuleId").MethodHandle, typeof(u003cu003ef__AnonymousType27<OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>>).TypeHandle), (MethodInfo)MethodBase.GetMethodFromHandle(typeof(u003cu003ef__AnonymousType27<OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>>).GetMethod("get_Specificulture").MethodHandle, typeof(u003cu003ef__AnonymousType27<OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>>).TypeHandle) };
				table.ForeignKey("FK_Mix_Post_Module_Mix_Module1", Expression.Lambda(Expression.New(constructorInfo, (IEnumerable<Expression>)expressionArray1, methodFromHandle1), new ParameterExpression[] { parameterExpression }), "mix_module", new string[] { "Id", "Specificulture" }, null, 0, 2);
				parameterExpression = Expression.Parameter(typeof(u003cu003ef__AnonymousType35<OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>>), "x");
				ConstructorInfo constructorInfo1 = (ConstructorInfo)MethodBase.GetMethodFromHandle(typeof(u003cu003ef__AnonymousType30<OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>>).GetMethod(".ctor", new Type[] { typeof(u003cPostIdu003ej__TPar), typeof(u003cSpecificultureu003ej__TPar) }).MethodHandle, typeof(u003cu003ef__AnonymousType30<OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>>).TypeHandle);
				Expression[] expressionArray2 = new Expression[] { Expression.Property(parameterExpression, (MethodInfo)MethodBase.GetMethodFromHandle(typeof(u003cu003ef__AnonymousType35<OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>>).GetMethod("get_PostId").MethodHandle, typeof(u003cu003ef__AnonymousType35<OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>>).TypeHandle)), Expression.Property(parameterExpression, (MethodInfo)MethodBase.GetMethodFromHandle(typeof(u003cu003ef__AnonymousType35<OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>>).GetMethod("get_Specificulture").MethodHandle, typeof(u003cu003ef__AnonymousType35<OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>>).TypeHandle)) };
				MemberInfo[] memberInfoArray1 = new MemberInfo[] { (MethodInfo)MethodBase.GetMethodFromHandle(typeof(u003cu003ef__AnonymousType30<OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>>).GetMethod("get_PostId").MethodHandle, typeof(u003cu003ef__AnonymousType30<OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>>).TypeHandle), (MethodInfo)MethodBase.GetMethodFromHandle(typeof(u003cu003ef__AnonymousType30<OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>>).GetMethod("get_Specificulture").MethodHandle, typeof(u003cu003ef__AnonymousType30<OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>>).TypeHandle) };
				table.ForeignKey("FK_Mix_Post_Module_Mix_Post", Expression.Lambda(Expression.New(constructorInfo1, (IEnumerable<Expression>)expressionArray2, memberInfoArray1), new ParameterExpression[] { parameterExpression }), "mix_post", new string[] { "Id", "Specificulture" }, null, 0, 1);
			}, null);
			migrationBuilder.CreateTable("mix_related_post", (ColumnsBuilder table) => {
				bool? nullable = null;
				bool? nullable1 = nullable;
				int? nullable2 = null;
				nullable = null;
				OperationBuilder<AddColumnOperation> operationBuilder = table.Column<int>(null, nullable1, nullable2, false, null, false, null, null, null, nullable, null);
				nullable = null;
				bool? nullable3 = nullable;
				nullable = null;
				OperationBuilder<AddColumnOperation> operationBuilder1 = table.Column<string>(null, nullable3, new int?(10), false, null, false, null, null, null, nullable, null);
				nullable = null;
				bool? nullable4 = nullable;
				nullable2 = null;
				nullable = null;
				OperationBuilder<AddColumnOperation> operationBuilder2 = table.Column<int>(null, nullable4, nullable2, false, null, false, null, null, null, nullable, null);
				nullable = null;
				bool? nullable5 = nullable;
				nullable2 = null;
				nullable = null;
				OperationBuilder<AddColumnOperation> operationBuilder3 = table.Column<int>(null, nullable5, nullable2, false, null, false, null, null, null, nullable, null);
				nullable = null;
				bool? nullable6 = nullable;
				nullable = null;
				OperationBuilder<AddColumnOperation> operationBuilder4 = table.Column<string>(null, nullable6, new int?(0x1c2), false, null, true, null, null, null, nullable, null);
				nullable = null;
				bool? nullable7 = nullable;
				nullable = null;
				OperationBuilder<AddColumnOperation> operationBuilder5 = table.Column<string>(null, nullable7, new int?(0x1c2), false, null, true, null, null, null, nullable, null);
				nullable = null;
				OperationBuilder<AddColumnOperation> operationBuilder6 = table.Column<string>(null, new bool?(false), new int?(50), false, null, true, null, null, null, nullable, null);
				nullable = null;
				bool? nullable8 = nullable;
				nullable2 = null;
				nullable = null;
				OperationBuilder<AddColumnOperation> operationBuilder7 = table.Column<DateTime>("datetime", nullable8, nullable2, false, null, false, null, null, null, nullable, null);
				nullable = null;
				OperationBuilder<AddColumnOperation> operationBuilder8 = table.Column<string>(null, new bool?(false), new int?(50), false, null, true, null, null, null, nullable, null);
				nullable = null;
				bool? nullable9 = nullable;
				nullable2 = null;
				nullable = null;
				OperationBuilder<AddColumnOperation> operationBuilder9 = table.Column<DateTime>("datetime", nullable9, nullable2, false, null, true, null, null, null, nullable, null);
				nullable = null;
				bool? nullable10 = nullable;
				nullable2 = null;
				nullable = null;
				OperationBuilder<AddColumnOperation> operationBuilder10 = table.Column<int>(null, nullable10, nullable2, false, null, false, null, null, null, nullable, null);
				nullable = null;
				return new { Id = operationBuilder, Specificulture = operationBuilder1, SourceId = operationBuilder2, DestinationId = operationBuilder3, Description = operationBuilder4, Image = operationBuilder5, CreatedBy = operationBuilder6, CreatedDateTime = operationBuilder7, ModifiedBy = operationBuilder8, LastModified = operationBuilder9, Priority = operationBuilder10, Status = table.Column<string>(null, new bool?(false), new int?(50), false, null, false, null, null, null, nullable, null) };
			}, null, (table) => {
				ParameterExpression parameterExpression = Expression.Parameter(typeof(u003cu003ef__AnonymousType36<OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>>), "x");
				ConstructorInfo methodFromHandle = (ConstructorInfo)MethodBase.GetMethodFromHandle(typeof(u003cu003ef__AnonymousType6<OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>>).GetMethod(".ctor", new Type[] { typeof(u003cIdu003ej__TPar), typeof(u003cSpecificultureu003ej__TPar) }).MethodHandle, typeof(u003cu003ef__AnonymousType6<OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>>).TypeHandle);
				Expression[] expressionArray = new Expression[] { Expression.Property(parameterExpression, (MethodInfo)MethodBase.GetMethodFromHandle(typeof(u003cu003ef__AnonymousType36<OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>>).GetMethod("get_Id").MethodHandle, typeof(u003cu003ef__AnonymousType36<OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>>).TypeHandle)), Expression.Property(parameterExpression, (MethodInfo)MethodBase.GetMethodFromHandle(typeof(u003cu003ef__AnonymousType36<OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>>).GetMethod("get_Specificulture").MethodHandle, typeof(u003cu003ef__AnonymousType36<OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>>).TypeHandle)) };
				MemberInfo[] memberInfoArray = new MemberInfo[] { (MethodInfo)MethodBase.GetMethodFromHandle(typeof(u003cu003ef__AnonymousType6<OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>>).GetMethod("get_Id").MethodHandle, typeof(u003cu003ef__AnonymousType6<OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>>).TypeHandle), (MethodInfo)MethodBase.GetMethodFromHandle(typeof(u003cu003ef__AnonymousType6<OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>>).GetMethod("get_Specificulture").MethodHandle, typeof(u003cu003ef__AnonymousType6<OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>>).TypeHandle) };
				table.PrimaryKey("PK_mix_related_post", Expression.Lambda(Expression.New(methodFromHandle, (IEnumerable<Expression>)expressionArray, memberInfoArray), new ParameterExpression[] { parameterExpression }));
				parameterExpression = Expression.Parameter(typeof(u003cu003ef__AnonymousType36<OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>>), "x");
				ConstructorInfo constructorInfo = (ConstructorInfo)MethodBase.GetMethodFromHandle(typeof(u003cu003ef__AnonymousType37<OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>>).GetMethod(".ctor", new Type[] { typeof(u003cDestinationIdu003ej__TPar), typeof(u003cSpecificultureu003ej__TPar) }).MethodHandle, typeof(u003cu003ef__AnonymousType37<OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>>).TypeHandle);
				Expression[] expressionArray1 = new Expression[] { Expression.Property(parameterExpression, (MethodInfo)MethodBase.GetMethodFromHandle(typeof(u003cu003ef__AnonymousType36<OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>>).GetMethod("get_DestinationId").MethodHandle, typeof(u003cu003ef__AnonymousType36<OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>>).TypeHandle)), Expression.Property(parameterExpression, (MethodInfo)MethodBase.GetMethodFromHandle(typeof(u003cu003ef__AnonymousType36<OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>>).GetMethod("get_Specificulture").MethodHandle, typeof(u003cu003ef__AnonymousType36<OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>>).TypeHandle)) };
				MemberInfo[] methodFromHandle1 = new MemberInfo[] { (MethodInfo)MethodBase.GetMethodFromHandle(typeof(u003cu003ef__AnonymousType37<OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>>).GetMethod("get_DestinationId").MethodHandle, typeof(u003cu003ef__AnonymousType37<OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>>).TypeHandle), (MethodInfo)MethodBase.GetMethodFromHandle(typeof(u003cu003ef__AnonymousType37<OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>>).GetMethod("get_Specificulture").MethodHandle, typeof(u003cu003ef__AnonymousType37<OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>>).TypeHandle) };
				table.ForeignKey("FK_mix_related_post_mix_post1", Expression.Lambda(Expression.New(constructorInfo, (IEnumerable<Expression>)expressionArray1, methodFromHandle1), new ParameterExpression[] { parameterExpression }), "mix_post", new string[] { "Id", "Specificulture" }, null, 0, 1);
				parameterExpression = Expression.Parameter(typeof(u003cu003ef__AnonymousType36<OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>>), "x");
				ConstructorInfo constructorInfo1 = (ConstructorInfo)MethodBase.GetMethodFromHandle(typeof(u003cu003ef__AnonymousType38<OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>>).GetMethod(".ctor", new Type[] { typeof(u003cSourceIdu003ej__TPar), typeof(u003cSpecificultureu003ej__TPar) }).MethodHandle, typeof(u003cu003ef__AnonymousType38<OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>>).TypeHandle);
				Expression[] expressionArray2 = new Expression[] { Expression.Property(parameterExpression, (MethodInfo)MethodBase.GetMethodFromHandle(typeof(u003cu003ef__AnonymousType36<OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>>).GetMethod("get_SourceId").MethodHandle, typeof(u003cu003ef__AnonymousType36<OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>>).TypeHandle)), Expression.Property(parameterExpression, (MethodInfo)MethodBase.GetMethodFromHandle(typeof(u003cu003ef__AnonymousType36<OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>>).GetMethod("get_Specificulture").MethodHandle, typeof(u003cu003ef__AnonymousType36<OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>>).TypeHandle)) };
				MemberInfo[] memberInfoArray1 = new MemberInfo[] { (MethodInfo)MethodBase.GetMethodFromHandle(typeof(u003cu003ef__AnonymousType38<OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>>).GetMethod("get_SourceId").MethodHandle, typeof(u003cu003ef__AnonymousType38<OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>>).TypeHandle), (MethodInfo)MethodBase.GetMethodFromHandle(typeof(u003cu003ef__AnonymousType38<OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>>).GetMethod("get_Specificulture").MethodHandle, typeof(u003cu003ef__AnonymousType38<OperationBuilder<AddColumnOperation>, OperationBuilder<AddColumnOperation>>).TypeHandle) };
				table.ForeignKey("FK_mix_related_post_mix_post", Expression.Lambda(Expression.New(constructorInfo1, (IEnumerable<Expression>)expressionArray2, memberInfoArray1), new ParameterExpression[] { parameterExpression }), "mix_post", new string[] { "Id", "Specificulture" }, null, 0, 1);
			}, null);
			migrationBuilder.CreateIndex("IX_mix_attribute_field_AttributeSetId", "mix_attribute_field", "AttributeSetId", null, false, null);
			migrationBuilder.CreateIndex("IX_mix_attribute_field_ReferenceId", "mix_attribute_field", "ReferenceId", null, false, null);
			migrationBuilder.CreateIndex("IX_mix_attribute_set_data_AttributeSetId", "mix_attribute_set_data", "AttributeSetId", null, false, null);
			migrationBuilder.CreateIndex("IX_mix_attribute_set_reference_AttributeSetId", "mix_attribute_set_reference", "AttributeSetId", null, false, null);
			migrationBuilder.CreateIndex("IX_mix_attribute_set_value_DataId", "mix_attribute_set_value", "DataId", null, false, null);
			migrationBuilder.CreateIndex("Index_ExpiresAtTime", "mix_cache", "ExpiredDateTime", null, false, null);
			migrationBuilder.CreateIndex("IX_mix_configuration_Specificulture", "mix_configuration", "Specificulture", null, false, null);
			migrationBuilder.CreateIndex("IX_Mix_Culture", "mix_culture", "Specificulture", null, true, null);
			migrationBuilder.CreateIndex("IX_mix_file_ThemeId", "mix_file", "ThemeId", null, false, null);
			migrationBuilder.CreateIndex("IX_mix_language_Specificulture", "mix_language", "Specificulture", null, false, null);
			migrationBuilder.CreateIndex("IX_mix_module_Specificulture", "mix_module", "Specificulture", null, false, null);
			migrationBuilder.CreateIndex("IX_mix_module_data_ModuleId_Specificulture", "mix_module_data", new string[] { "ModuleId", "Specificulture" }, null, false, null);
			migrationBuilder.CreateIndex("IX_mix_module_data_PageId_Specificulture", "mix_module_data", new string[] { "PageId", "Specificulture" }, null, false, null);
			migrationBuilder.CreateIndex("IX_mix_module_data_PostId_Specificulture", "mix_module_data", new string[] { "PostId", "Specificulture" }, null, false, null);
			migrationBuilder.CreateIndex("IX_mix_module_data_ModuleId_PageId_Specificulture", "mix_module_data", new string[] { "ModuleId", "PageId", "Specificulture" }, null, false, null);
			migrationBuilder.CreateIndex("IX_mix_module_post_ModuleId_Specificulture", "mix_module_post", new string[] { "ModuleId", "Specificulture" }, null, false, null);
			migrationBuilder.CreateIndex("IX_mix_module_post_PostId_Specificulture", "mix_module_post", new string[] { "PostId", "Specificulture" }, null, false, null);
			migrationBuilder.CreateIndex("IX_mix_page_Specificulture", "mix_page", "Specificulture", null, false, null);
			migrationBuilder.CreateIndex("IX_mix_page_module_ModuleId_Specificulture", "mix_page_module", new string[] { "ModuleId", "Specificulture" }, null, false, null);
			migrationBuilder.CreateIndex("IX_mix_page_module_PageId_Specificulture", "mix_page_module", new string[] { "PageId", "Specificulture" }, null, false, null);
			migrationBuilder.CreateIndex("IX_mix_page_post_PageId_Specificulture", "mix_page_post", new string[] { "PageId", "Specificulture" }, null, false, null);
			migrationBuilder.CreateIndex("IX_mix_page_post_PostId_Specificulture", "mix_page_post", new string[] { "PostId", "Specificulture" }, null, false, null);
			migrationBuilder.CreateIndex("IX_mix_portal_page_navigation_ParentId", "mix_portal_page_navigation", "ParentId", null, false, null);
			migrationBuilder.CreateIndex("IX_mix_portal_page_role_PageId", "mix_portal_page_role", "PageId", null, false, null);
			migrationBuilder.CreateIndex("IX_mix_post_Specificulture", "mix_post", "Specificulture", null, false, null);
			migrationBuilder.CreateIndex("IX_mix_post_media_MediaId_Specificulture", "mix_post_media", new string[] { "MediaId", "Specificulture" }, null, false, null);
			migrationBuilder.CreateIndex("IX_mix_post_media_PostId_Specificulture", "mix_post_media", new string[] { "PostId", "Specificulture" }, null, false, null);
			migrationBuilder.CreateIndex("IX_mix_post_module_ModuleId_Specificulture", "mix_post_module", new string[] { "ModuleId", "Specificulture" }, null, false, null);
			migrationBuilder.CreateIndex("IX_mix_post_module_PostId_Specificulture", "mix_post_module", new string[] { "PostId", "Specificulture" }, null, false, null);
			migrationBuilder.CreateIndex("IX_mix_related_post_DestinationId_Specificulture", "mix_related_post", new string[] { "DestinationId", "Specificulture" }, null, false, null);
			migrationBuilder.CreateIndex("IX_mix_related_post_SourceId_Specificulture", "mix_related_post", new string[] { "SourceId", "Specificulture" }, null, false, null);
			migrationBuilder.CreateIndex("IX_mix_template_file_TemplateId", "mix_template", "ThemeId", null, false, null);
			migrationBuilder.CreateIndex("IX_mix_url_alias_Specificulture", "mix_url_alias", "Specificulture", null, false, null);
		}
	}
}