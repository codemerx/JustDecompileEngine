using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Metadata.Builders;
using Mix.Cms.Lib.Models.Cms;
using System;
using System.Runtime.CompilerServices;

namespace Mix.Cms.Lib.Migrations
{
	[DbContext(typeof(MixCmsContext))]
	internal class MixCmsContextModelSnapshot : ModelSnapshot
	{
		public MixCmsContextModelSnapshot()
		{
		}

		protected override void BuildModel(ModelBuilder modelBuilder)
		{
			modelBuilder.HasAnnotation("ProductVersion", "3.1.3").HasAnnotation("Relational:MaxIdentifierLength", 128).HasAnnotation("SqlServer:ValueGenerationStrategy", (SqlServerValueGenerationStrategy)2);
			modelBuilder.Entity("Mix.Cms.Lib.Models.Cms.MixAttributeField", (EntityTypeBuilder b) => {
				RelationalPropertyBuilderExtensions.HasColumnType<int>(b.Property<int>("Id"), "int");
				RelationalPropertyBuilderExtensions.HasColumnType<int>(b.Property<int>("AttributeSetId"), "int");
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("AttributeSetName"), "nvarchar(250)").HasMaxLength(250);
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("CreatedBy"), "varchar(50)").HasMaxLength(50).IsUnicode(false);
				RelationalPropertyBuilderExtensions.HasColumnType<DateTime>(b.Property<DateTime>("CreatedDateTime"), "datetime");
				RelationalPropertyBuilderExtensions.HasColumnType<int>(b.Property<int>("DataType"), "int");
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("DefaultValue"), "text");
				RelationalPropertyBuilderExtensions.HasColumnType<bool>(b.Property<bool>("IsEncrypt"), "bit");
				RelationalPropertyBuilderExtensions.HasColumnType<bool>(b.Property<bool>("IsMultiple"), "bit");
				RelationalPropertyBuilderExtensions.HasColumnType<bool>(b.Property<bool>("IsRequire"), "bit");
				RelationalPropertyBuilderExtensions.HasColumnType<bool>(b.Property<bool>("IsSelect"), "bit");
				RelationalPropertyBuilderExtensions.HasColumnType<bool>(b.Property<bool>("IsUnique"), "bit");
				RelationalPropertyBuilderExtensions.HasColumnType<DateTime?>(b.Property<DateTime?>("LastModified"), "datetime");
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("ModifiedBy"), "varchar(50)").HasMaxLength(50).IsUnicode(false);
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("Name").IsRequired(true), "nvarchar(250)").HasMaxLength(250);
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("Options"), "text");
				RelationalPropertyBuilderExtensions.HasColumnType<int>(b.Property<int>("Priority"), "int");
				RelationalPropertyBuilderExtensions.HasColumnType<int?>(b.Property<int?>("ReferenceId"), "int");
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("Regex"), "nvarchar(250)").HasMaxLength(250);
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("Status").IsRequired(true), "varchar(50)").HasMaxLength(50).IsUnicode(false);
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("Title"), "nvarchar(250)").HasMaxLength(250);
				b.HasKey(new string[] { "Id" });
				b.HasIndex(new string[] { "AttributeSetId" });
				b.HasIndex(new string[] { "ReferenceId" });
				RelationalEntityTypeBuilderExtensions.ToTable(b, "mix_attribute_field");
			});
			modelBuilder.Entity("Mix.Cms.Lib.Models.Cms.MixAttributeSet", (EntityTypeBuilder b) => {
				RelationalPropertyBuilderExtensions.HasColumnType<int>(b.Property<int>("Id"), "int");
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("CreatedBy"), "varchar(50)").HasMaxLength(50).IsUnicode(false);
				RelationalPropertyBuilderExtensions.HasColumnType<DateTime>(b.Property<DateTime>("CreatedDateTime"), "datetime");
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("Description"), "nvarchar(250)").HasMaxLength(250);
				RelationalPropertyBuilderExtensions.HasColumnType<bool?>(b.Property<bool?>("EdmAutoSend"), "bit");
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("EdmFrom"), "nvarchar(250)").HasMaxLength(250);
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("EdmSubject"), "nvarchar(250)").HasMaxLength(250);
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("EdmTemplate"), "nvarchar(250)").HasMaxLength(250);
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("FormTemplate"), "nvarchar(250)").HasMaxLength(250);
				RelationalPropertyBuilderExtensions.HasColumnType<DateTime?>(b.Property<DateTime?>("LastModified"), "datetime");
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("ModifiedBy"), "varchar(50)").HasMaxLength(50).IsUnicode(false);
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("Name").IsRequired(true), "nvarchar(250)").HasMaxLength(250);
				RelationalPropertyBuilderExtensions.HasColumnType<int>(b.Property<int>("Priority"), "int");
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("Status").IsRequired(true), "varchar(50)").HasMaxLength(50).IsUnicode(false);
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("Title").IsRequired(true), "nvarchar(250)").HasMaxLength(250);
				RelationalPropertyBuilderExtensions.HasColumnType<int>(b.Property<int>("Type"), "int");
				b.HasKey(new string[] { "Id" });
				RelationalEntityTypeBuilderExtensions.ToTable(b, "mix_attribute_set");
			});
			modelBuilder.Entity("Mix.Cms.Lib.Models.Cms.MixAttributeSetData", (EntityTypeBuilder b) => {
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("Id"), "nvarchar(50)").HasMaxLength(50);
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("Specificulture"), "nvarchar(10)").HasMaxLength(10);
				RelationalPropertyBuilderExtensions.HasColumnType<int>(b.Property<int>("AttributeSetId"), "int");
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("AttributeSetName"), "nvarchar(250)").HasMaxLength(250);
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("CreatedBy"), "varchar(50)").HasMaxLength(50).IsUnicode(false);
				RelationalPropertyBuilderExtensions.HasColumnType<DateTime>(b.Property<DateTime>("CreatedDateTime"), "datetime");
				RelationalPropertyBuilderExtensions.HasColumnType<DateTime?>(b.Property<DateTime?>("LastModified"), "datetime");
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("ModifiedBy"), "varchar(50)").HasMaxLength(50).IsUnicode(false);
				RelationalPropertyBuilderExtensions.HasColumnType<int>(b.Property<int>("Priority"), "int");
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("Status").IsRequired(true), "varchar(50)").HasMaxLength(50).IsUnicode(false);
				b.HasKey(new string[] { "Id", "Specificulture" });
				b.HasIndex(new string[] { "AttributeSetId" });
				RelationalEntityTypeBuilderExtensions.ToTable(b, "mix_attribute_set_data");
			});
			modelBuilder.Entity("Mix.Cms.Lib.Models.Cms.MixAttributeSetReference", (EntityTypeBuilder b) => {
				RelationalPropertyBuilderExtensions.HasColumnType<int>(b.Property<int>("Id"), "int");
				RelationalPropertyBuilderExtensions.HasColumnType<int>(b.Property<int>("AttributeSetId"), "int");
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("CreatedBy"), "varchar(50)").HasMaxLength(50).IsUnicode(false);
				RelationalPropertyBuilderExtensions.HasColumnType<DateTime>(b.Property<DateTime>("CreatedDateTime"), "datetime");
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("Description"), "nvarchar(450)").HasMaxLength(0x1c2);
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("Image"), "nvarchar(450)").HasMaxLength(0x1c2);
				RelationalPropertyBuilderExtensions.HasColumnType<DateTime?>(b.Property<DateTime?>("LastModified"), "datetime");
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("ModifiedBy"), "varchar(50)").HasMaxLength(50).IsUnicode(false);
				RelationalPropertyBuilderExtensions.HasColumnType<int>(b.Property<int>("ParentId"), "int");
				RelationalPropertyBuilderExtensions.HasColumnType<int>(b.Property<int>("ParentType"), "int");
				RelationalPropertyBuilderExtensions.HasColumnType<int>(b.Property<int>("Priority"), "int");
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("Status").IsRequired(true), "varchar(50)").HasMaxLength(50).IsUnicode(false);
				b.HasKey(new string[] { "Id" });
				b.HasIndex(new string[] { "AttributeSetId" });
				RelationalEntityTypeBuilderExtensions.ToTable(b, "mix_attribute_set_reference");
			});
			modelBuilder.Entity("Mix.Cms.Lib.Models.Cms.MixAttributeSetValue", (EntityTypeBuilder b) => {
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("Id"), "nvarchar(50)").HasMaxLength(50);
				RelationalPropertyBuilderExtensions.HasColumnType<int>(b.Property<int>("AttributeFieldId"), "int");
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("AttributeFieldName").IsRequired(true), "nvarchar(50)").HasMaxLength(50);
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("AttributeSetName"), "nvarchar(250)").HasMaxLength(250);
				RelationalPropertyBuilderExtensions.HasColumnType<bool?>(b.Property<bool?>("BooleanValue"), "bit");
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("CreatedBy"), "varchar(50)").HasMaxLength(50).IsUnicode(false);
				RelationalPropertyBuilderExtensions.HasColumnType<DateTime>(b.Property<DateTime>("CreatedDateTime"), "datetime");
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("DataId").IsRequired(true), "nvarchar(50)").HasMaxLength(50);
				RelationalPropertyBuilderExtensions.HasColumnType<int>(b.Property<int>("DataType"), "int");
				RelationalPropertyBuilderExtensions.HasColumnType<DateTime?>(b.Property<DateTime?>("DateTimeValue"), "datetime");
				RelationalPropertyBuilderExtensions.HasColumnType<double?>(b.Property<double?>("DoubleValue"), "float");
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("EncryptKey"), "nvarchar(50)").HasMaxLength(50);
				RelationalPropertyBuilderExtensions.HasColumnType<int>(b.Property<int>("EncryptType"), "int");
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("EncryptValue"), "nvarchar(4000)").HasMaxLength(0xfa0);
				RelationalPropertyBuilderExtensions.HasColumnType<int?>(b.Property<int?>("IntegerValue"), "int");
				RelationalPropertyBuilderExtensions.HasColumnType<DateTime?>(b.Property<DateTime?>("LastModified"), "datetime");
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("ModifiedBy"), "varchar(50)").HasMaxLength(50).IsUnicode(false);
				RelationalPropertyBuilderExtensions.HasColumnType<int>(b.Property<int>("Priority"), "int");
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("Regex"), "nvarchar(250)").HasMaxLength(250);
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("Specificulture").IsRequired(true), "nvarchar(10)").HasMaxLength(10);
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("Status").IsRequired(true), "varchar(50)").HasMaxLength(50).IsUnicode(false);
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("StringValue"), "nvarchar(4000)").HasMaxLength(0xfa0);
				b.HasKey(new string[] { "Id" });
				b.HasIndex(new string[] { "DataId" });
				RelationalEntityTypeBuilderExtensions.ToTable(b, "mix_attribute_set_value");
			});
			modelBuilder.Entity("Mix.Cms.Lib.Models.Cms.MixCache", (EntityTypeBuilder b) => {
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("Id"), "nvarchar(50)").HasMaxLength(50);
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("CreatedBy"), "varchar(50)").HasMaxLength(50).IsUnicode(false);
				RelationalPropertyBuilderExtensions.HasColumnType<DateTime>(b.Property<DateTime>("CreatedDateTime"), "datetime");
				RelationalPropertyBuilderExtensions.HasColumnType<DateTime?>(b.Property<DateTime?>("ExpiredDateTime"), "datetime");
				RelationalPropertyBuilderExtensions.HasColumnType<DateTime?>(b.Property<DateTime?>("LastModified"), "datetime");
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("ModifiedBy"), "varchar(50)").HasMaxLength(50).IsUnicode(false);
				RelationalPropertyBuilderExtensions.HasColumnType<int>(b.Property<int>("Priority"), "int");
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("Status").IsRequired(true), "varchar(50)").HasMaxLength(50).IsUnicode(false);
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("Value").IsRequired(true), "nvarchar(4000)").HasMaxLength(0xfa0);
				b.HasKey(new string[] { "Id" });
				RelationalIndexBuilderExtensions.HasName(b.HasIndex(new string[] { "ExpiredDateTime" }), "Index_ExpiresAtTime");
				RelationalEntityTypeBuilderExtensions.ToTable(b, "mix_cache");
			});
			modelBuilder.Entity("Mix.Cms.Lib.Models.Cms.MixCmsUser", (EntityTypeBuilder b) => {
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("Id"), "nvarchar(50)").HasMaxLength(50);
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("Address"), "nvarchar(250)").HasMaxLength(250);
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("Avatar"), "nvarchar(250)").HasMaxLength(250);
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("CreatedBy"), "varchar(50)").HasMaxLength(50).IsUnicode(false);
				RelationalPropertyBuilderExtensions.HasColumnType<DateTime>(b.Property<DateTime>("CreatedDateTime"), "datetime");
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("Email"), "nvarchar(250)").HasMaxLength(250);
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("FirstName"), "nvarchar(50)").HasMaxLength(50);
				RelationalPropertyBuilderExtensions.HasColumnType<DateTime?>(b.Property<DateTime?>("LastModified"), "datetime");
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("LastName"), "nvarchar(50)").HasMaxLength(50);
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("MiddleName"), "nvarchar(50)").HasMaxLength(50);
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("ModifiedBy"), "varchar(50)").HasMaxLength(50).IsUnicode(false);
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("PhoneNumber"), "nvarchar(50)").HasMaxLength(50);
				RelationalPropertyBuilderExtensions.HasColumnType<int>(b.Property<int>("Priority"), "int");
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("Status").IsRequired(true), "varchar(50)").HasMaxLength(50).IsUnicode(false);
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("Username"), "nvarchar(250)").HasMaxLength(250);
				b.HasKey(new string[] { "Id" });
				RelationalEntityTypeBuilderExtensions.ToTable(b, "mix_cms_user");
			});
			modelBuilder.Entity("Mix.Cms.Lib.Models.Cms.MixConfiguration", (EntityTypeBuilder b) => {
				RelationalPropertyBuilderExtensions.HasColumnType<int>(b.Property<int>("Id"), "int");
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("Specificulture"), "nvarchar(10)").HasMaxLength(10);
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("Category"), "nvarchar(250)").HasMaxLength(250);
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("CreatedBy"), "varchar(50)").HasMaxLength(50).IsUnicode(false);
				RelationalPropertyBuilderExtensions.HasColumnType<DateTime>(b.Property<DateTime>("CreatedDateTime"), "datetime");
				RelationalPropertyBuilderExtensions.HasColumnType<int>(b.Property<int>("DataType"), "int");
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("Description"), "nvarchar(250)").HasMaxLength(250);
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("Keyword").IsRequired(true), "nvarchar(50)").HasMaxLength(50);
				RelationalPropertyBuilderExtensions.HasColumnType<DateTime?>(b.Property<DateTime?>("LastModified"), "datetime");
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("ModifiedBy"), "varchar(50)").HasMaxLength(50).IsUnicode(false);
				RelationalPropertyBuilderExtensions.HasColumnType<int>(b.Property<int>("Priority"), "int");
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("Status").IsRequired(true), "varchar(50)").HasMaxLength(50).IsUnicode(false);
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("Value"), "nvarchar(4000)").HasMaxLength(0xfa0);
				RelationalKeyBuilderExtensions.HasName(b.HasKey(new string[] { "Id", "Specificulture" }), "PK_mix_configuration_1");
				b.HasIndex(new string[] { "Specificulture" });
				RelationalEntityTypeBuilderExtensions.ToTable(b, "mix_configuration");
			});
			modelBuilder.Entity("Mix.Cms.Lib.Models.Cms.MixCulture", (EntityTypeBuilder b) => {
				RelationalPropertyBuilderExtensions.HasColumnType<int>(b.Property<int>("Id"), "int");
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("Alias"), "nvarchar(150)").HasMaxLength(150);
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("CreatedBy"), "varchar(50)").HasMaxLength(50).IsUnicode(false);
				RelationalPropertyBuilderExtensions.HasColumnType<DateTime>(b.Property<DateTime>("CreatedDateTime"), "datetime");
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("Description"), "nvarchar(250)").HasMaxLength(250);
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("FullName"), "nvarchar(150)").HasMaxLength(150);
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("Icon"), "nvarchar(50)").HasMaxLength(50);
				RelationalPropertyBuilderExtensions.HasColumnType<DateTime?>(b.Property<DateTime?>("LastModified"), "datetime");
				RelationalPropertyBuilderExtensions.HasColumnType<string>(RelationalPropertyBuilderExtensions.HasColumnName<string>(b.Property<string>("Lcid"), "LCID"), "nvarchar(50)").HasMaxLength(50);
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("ModifiedBy"), "varchar(50)").HasMaxLength(50).IsUnicode(false);
				RelationalPropertyBuilderExtensions.HasColumnType<int>(b.Property<int>("Priority"), "int");
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("Specificulture").IsRequired(true), "nvarchar(10)").HasMaxLength(10);
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("Status").IsRequired(true), "varchar(50)").HasMaxLength(50).IsUnicode(false);
				b.HasKey(new string[] { "Id" });
				RelationalIndexBuilderExtensions.HasName(b.HasIndex(new string[] { "Specificulture" }).IsUnique(true), "IX_Mix_Culture");
				RelationalEntityTypeBuilderExtensions.ToTable(b, "mix_culture");
			});
			modelBuilder.Entity("Mix.Cms.Lib.Models.Cms.MixFile", (EntityTypeBuilder b) => {
				RelationalPropertyBuilderExtensions.HasColumnType<int>(b.Property<int>("Id").ValueGeneratedOnAdd(), "int").HasAnnotation("SqlServer:ValueGenerationStrategy", (SqlServerValueGenerationStrategy)2);
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("CreatedBy"), "varchar(50)").HasMaxLength(50).IsUnicode(false);
				RelationalPropertyBuilderExtensions.HasColumnType<DateTime>(b.Property<DateTime>("CreatedDateTime"), "datetime");
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("Extension").IsRequired(true), "nvarchar(50)").HasMaxLength(50);
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("FileFolder").IsRequired(true), "nvarchar(250)").HasMaxLength(250);
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("FileName").IsRequired(true), "nvarchar(250)").HasMaxLength(250);
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("FolderType").IsRequired(true), "nvarchar(50)").HasMaxLength(50);
				RelationalPropertyBuilderExtensions.HasColumnType<DateTime?>(b.Property<DateTime?>("LastModified"), "datetime");
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("ModifiedBy"), "varchar(50)").HasMaxLength(50).IsUnicode(false);
				RelationalPropertyBuilderExtensions.HasColumnType<int>(b.Property<int>("Priority"), "int");
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("Status").IsRequired(true), "varchar(50)").HasMaxLength(50).IsUnicode(false);
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("StringContent").IsRequired(true), "nvarchar(4000)").HasMaxLength(0xfa0);
				RelationalPropertyBuilderExtensions.HasColumnType<int?>(b.Property<int?>("ThemeId"), "int");
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("ThemeName").IsRequired(true), "nvarchar(250)").HasMaxLength(250);
				b.HasKey(new string[] { "Id" });
				b.HasIndex(new string[] { "ThemeId" });
				RelationalEntityTypeBuilderExtensions.ToTable(b, "mix_file");
			});
			modelBuilder.Entity("Mix.Cms.Lib.Models.Cms.MixLanguage", (EntityTypeBuilder b) => {
				RelationalPropertyBuilderExtensions.HasColumnType<int>(b.Property<int>("Id"), "int");
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("Specificulture"), "nvarchar(10)").HasMaxLength(10);
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("Category"), "nvarchar(250)").HasMaxLength(250);
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("CreatedBy"), "varchar(50)").HasMaxLength(50).IsUnicode(false);
				RelationalPropertyBuilderExtensions.HasColumnType<DateTime>(b.Property<DateTime>("CreatedDateTime"), "datetime");
				RelationalPropertyBuilderExtensions.HasColumnType<int>(b.Property<int>("DataType"), "int");
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("DefaultValue"), "nvarchar(250)").HasMaxLength(250);
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("Description"), "nvarchar(250)").HasMaxLength(250);
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("Keyword").IsRequired(true), "nvarchar(50)").HasMaxLength(50);
				RelationalPropertyBuilderExtensions.HasColumnType<DateTime?>(b.Property<DateTime?>("LastModified"), "datetime");
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("ModifiedBy"), "varchar(50)").HasMaxLength(50).IsUnicode(false);
				RelationalPropertyBuilderExtensions.HasColumnType<int>(b.Property<int>("Priority"), "int");
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("Status").IsRequired(true), "varchar(50)").HasMaxLength(50).IsUnicode(false);
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("Value"), "nvarchar(4000)").HasMaxLength(0xfa0);
				RelationalKeyBuilderExtensions.HasName(b.HasKey(new string[] { "Id", "Specificulture" }), "PK_mix_language_1");
				b.HasIndex(new string[] { "Specificulture" });
				RelationalEntityTypeBuilderExtensions.ToTable(b, "mix_language");
			});
			modelBuilder.Entity("Mix.Cms.Lib.Models.Cms.MixMedia", (EntityTypeBuilder b) => {
				RelationalPropertyBuilderExtensions.HasColumnType<int>(b.Property<int>("Id"), "int");
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("Specificulture"), "nvarchar(10)").HasMaxLength(10);
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("CreatedBy"), "varchar(50)").HasMaxLength(50).IsUnicode(false);
				RelationalPropertyBuilderExtensions.HasColumnType<DateTime>(b.Property<DateTime>("CreatedDateTime"), "datetime");
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("Description"), "nvarchar(4000)").HasMaxLength(0xfa0);
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("Extension").IsRequired(true), "nvarchar(50)").HasMaxLength(50);
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("FileFolder").IsRequired(true), "nvarchar(250)").HasMaxLength(250);
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("FileName").IsRequired(true), "nvarchar(250)").HasMaxLength(250);
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("FileProperties"), "nvarchar(4000)").HasMaxLength(0xfa0);
				RelationalPropertyBuilderExtensions.HasColumnType<long>(b.Property<long>("FileSize"), "bigint");
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("FileType").IsRequired(true), "nvarchar(50)").HasMaxLength(50);
				RelationalPropertyBuilderExtensions.HasColumnType<DateTime?>(b.Property<DateTime?>("LastModified"), "datetime");
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("ModifiedBy"), "varchar(50)").HasMaxLength(50).IsUnicode(false);
				RelationalPropertyBuilderExtensions.HasColumnType<int>(b.Property<int>("Priority"), "int");
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("Source"), "nvarchar(250)").HasMaxLength(250);
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("Status").IsRequired(true), "varchar(50)").HasMaxLength(50).IsUnicode(false);
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("Tags"), "nvarchar(400)").HasMaxLength(0x190);
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("TargetUrl"), "nvarchar(250)").HasMaxLength(250);
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("Title"), "nvarchar(4000)").HasMaxLength(0xfa0);
				b.HasKey(new string[] { "Id", "Specificulture" });
				RelationalEntityTypeBuilderExtensions.ToTable(b, "mix_media");
			});
			modelBuilder.Entity("Mix.Cms.Lib.Models.Cms.MixModule", (EntityTypeBuilder b) => {
				RelationalPropertyBuilderExtensions.HasColumnType<int>(b.Property<int>("Id"), "int");
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("Specificulture"), "nvarchar(10)").HasMaxLength(10);
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("CreatedBy"), "varchar(50)").HasMaxLength(50).IsUnicode(false);
				RelationalPropertyBuilderExtensions.HasColumnType<DateTime>(b.Property<DateTime>("CreatedDateTime"), "datetime");
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("Description"), "nvarchar(4000)").HasMaxLength(0xfa0);
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("EdmTemplate"), "nvarchar(250)").HasMaxLength(250);
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("Fields"), "nvarchar(4000)").HasMaxLength(0xfa0);
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("FormTemplate"), "nvarchar(250)").HasMaxLength(250);
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("Image"), "nvarchar(250)").HasMaxLength(250);
				RelationalPropertyBuilderExtensions.HasColumnType<DateTime?>(b.Property<DateTime?>("LastModified"), "datetime");
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("ModifiedBy"), "varchar(50)").HasMaxLength(50).IsUnicode(false);
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("Name").IsRequired(true), "nvarchar(50)").HasMaxLength(50);
				RelationalPropertyBuilderExtensions.HasColumnType<int?>(b.Property<int?>("PageSize"), "int");
				RelationalPropertyBuilderExtensions.HasColumnType<int>(b.Property<int>("Priority"), "int");
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("Status").IsRequired(true), "varchar(50)").HasMaxLength(50).IsUnicode(false);
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("Template"), "nvarchar(250)").HasMaxLength(250);
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("Thumbnail"), "nvarchar(250)").HasMaxLength(250);
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("Title"), "nvarchar(250)").HasMaxLength(250);
				RelationalPropertyBuilderExtensions.HasColumnType<int>(b.Property<int>("Type"), "int");
				b.HasKey(new string[] { "Id", "Specificulture" });
				b.HasIndex(new string[] { "Specificulture" });
				RelationalEntityTypeBuilderExtensions.ToTable(b, "mix_module");
			});
			modelBuilder.Entity("Mix.Cms.Lib.Models.Cms.MixModuleData", (EntityTypeBuilder b) => {
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("Id"), "nvarchar(50)").HasMaxLength(50);
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("Specificulture"), "nvarchar(10)").HasMaxLength(10);
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("CreatedBy"), "varchar(50)").HasMaxLength(50).IsUnicode(false);
				RelationalPropertyBuilderExtensions.HasColumnType<DateTime>(b.Property<DateTime>("CreatedDateTime"), "datetime");
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("Fields").IsRequired(true), "nvarchar(4000)").HasMaxLength(0xfa0);
				RelationalPropertyBuilderExtensions.HasColumnType<DateTime?>(b.Property<DateTime?>("LastModified"), "datetime");
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("ModifiedBy"), "varchar(50)").HasMaxLength(50).IsUnicode(false);
				RelationalPropertyBuilderExtensions.HasColumnType<int>(b.Property<int>("ModuleId"), "int");
				RelationalPropertyBuilderExtensions.HasColumnType<int?>(b.Property<int?>("PageId"), "int");
				RelationalPropertyBuilderExtensions.HasColumnType<int?>(b.Property<int?>("PostId"), "int");
				RelationalPropertyBuilderExtensions.HasColumnType<int>(b.Property<int>("Priority"), "int");
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("Status").IsRequired(true), "varchar(50)").HasMaxLength(50).IsUnicode(false);
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("Value"), "nvarchar(4000)").HasMaxLength(0xfa0);
				b.HasKey(new string[] { "Id", "Specificulture" });
				b.HasIndex(new string[] { "ModuleId", "Specificulture" });
				b.HasIndex(new string[] { "PageId", "Specificulture" });
				b.HasIndex(new string[] { "PostId", "Specificulture" });
				b.HasIndex(new string[] { "ModuleId", "PageId", "Specificulture" });
				RelationalEntityTypeBuilderExtensions.ToTable(b, "mix_module_data");
			});
			modelBuilder.Entity("Mix.Cms.Lib.Models.Cms.MixModulePost", (EntityTypeBuilder b) => {
				RelationalPropertyBuilderExtensions.HasColumnType<int>(b.Property<int>("Id"), "int");
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("Specificulture"), "nvarchar(10)").HasMaxLength(10);
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("CreatedBy"), "varchar(50)").HasMaxLength(50).IsUnicode(false);
				RelationalPropertyBuilderExtensions.HasColumnType<DateTime>(b.Property<DateTime>("CreatedDateTime"), "datetime");
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("Description"), "nvarchar(250)").HasMaxLength(250);
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("Image"), "nvarchar(250)").HasMaxLength(250);
				RelationalPropertyBuilderExtensions.HasColumnType<DateTime?>(b.Property<DateTime?>("LastModified"), "datetime");
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("ModifiedBy"), "varchar(50)").HasMaxLength(50).IsUnicode(false);
				RelationalPropertyBuilderExtensions.HasColumnType<int>(b.Property<int>("ModuleId"), "int");
				RelationalPropertyBuilderExtensions.HasColumnType<int>(b.Property<int>("PostId"), "int");
				RelationalPropertyBuilderExtensions.HasColumnType<int>(b.Property<int>("Priority"), "int");
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("Status").IsRequired(true), "varchar(50)").HasMaxLength(50).IsUnicode(false);
				b.HasKey(new string[] { "Id", "Specificulture" });
				b.HasIndex(new string[] { "ModuleId", "Specificulture" });
				b.HasIndex(new string[] { "PostId", "Specificulture" });
				RelationalEntityTypeBuilderExtensions.ToTable(b, "mix_module_post");
			});
			modelBuilder.Entity("Mix.Cms.Lib.Models.Cms.MixPage", (EntityTypeBuilder b) => {
				RelationalPropertyBuilderExtensions.HasColumnType<int>(b.Property<int>("Id"), "int");
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("Specificulture"), "nvarchar(10)").HasMaxLength(10);
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("Content"), "text");
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("CreatedBy"), "varchar(50)").HasMaxLength(50).IsUnicode(false);
				RelationalPropertyBuilderExtensions.HasColumnType<DateTime>(b.Property<DateTime>("CreatedDateTime"), "datetime");
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("CssClass"), "nvarchar(250)").HasMaxLength(250);
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("Excerpt"), "text");
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("ExtraFields"), "text");
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("Icon"), "nvarchar(50)").HasMaxLength(50);
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("Image"), "nvarchar(250)").HasMaxLength(250);
				RelationalPropertyBuilderExtensions.HasColumnType<DateTime?>(b.Property<DateTime?>("LastModified"), "datetime");
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("Layout"), "nvarchar(50)").HasMaxLength(50);
				RelationalPropertyBuilderExtensions.HasColumnType<int?>(b.Property<int?>("Level"), "int");
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("ModifiedBy"), "varchar(50)").HasMaxLength(50).IsUnicode(false);
				RelationalPropertyBuilderExtensions.HasColumnType<int?>(b.Property<int?>("PageSize"), "int");
				RelationalPropertyBuilderExtensions.HasColumnType<int>(b.Property<int>("Priority"), "int");
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("SeoDescription"), "text");
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("SeoKeywords"), "text");
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("SeoName"), "varchar(500)").HasMaxLength(0x1f4).IsUnicode(false);
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("SeoTitle"), "varchar(250)").HasMaxLength(250).IsUnicode(false);
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("StaticUrl"), "nvarchar(250)").HasMaxLength(250);
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("Status").IsRequired(true), "varchar(50)").HasMaxLength(50).IsUnicode(false);
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("Tags"), "text");
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("Template"), "nvarchar(250)").HasMaxLength(250);
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("Title"), "text");
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("Type"), "varchar(50)").HasMaxLength(50).IsUnicode(false);
				RelationalPropertyBuilderExtensions.HasColumnType<int?>(b.Property<int?>("Views"), "int");
				b.HasKey(new string[] { "Id", "Specificulture" });
				b.HasIndex(new string[] { "Specificulture" });
				RelationalEntityTypeBuilderExtensions.ToTable(b, "mix_page");
			});
			modelBuilder.Entity("Mix.Cms.Lib.Models.Cms.MixPageModule", (EntityTypeBuilder b) => {
				RelationalPropertyBuilderExtensions.HasColumnType<int>(b.Property<int>("Id"), "int");
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("Specificulture"), "nvarchar(10)").HasMaxLength(10);
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("CreatedBy"), "varchar(50)").HasMaxLength(50).IsUnicode(false);
				RelationalPropertyBuilderExtensions.HasColumnType<DateTime>(b.Property<DateTime>("CreatedDateTime"), "datetime");
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("Description"), "nvarchar(250)").HasMaxLength(250);
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("Image"), "nvarchar(250)").HasMaxLength(250);
				RelationalPropertyBuilderExtensions.HasColumnType<DateTime?>(b.Property<DateTime?>("LastModified"), "datetime");
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("ModifiedBy"), "varchar(50)").HasMaxLength(50).IsUnicode(false);
				RelationalPropertyBuilderExtensions.HasColumnType<int>(b.Property<int>("ModuleId"), "int");
				RelationalPropertyBuilderExtensions.HasColumnType<int>(b.Property<int>("PageId"), "int");
				RelationalPropertyBuilderExtensions.HasColumnType<int>(b.Property<int>("Position"), "int");
				RelationalPropertyBuilderExtensions.HasColumnType<int>(b.Property<int>("Priority"), "int");
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("Status").IsRequired(true), "varchar(50)").HasMaxLength(50).IsUnicode(false);
				b.HasKey(new string[] { "Id", "Specificulture" });
				b.HasIndex(new string[] { "ModuleId", "Specificulture" });
				b.HasIndex(new string[] { "PageId", "Specificulture" });
				RelationalEntityTypeBuilderExtensions.ToTable(b, "mix_page_module");
			});
			modelBuilder.Entity("Mix.Cms.Lib.Models.Cms.MixPagePost", (EntityTypeBuilder b) => {
				RelationalPropertyBuilderExtensions.HasColumnType<int>(b.Property<int>("Id"), "int");
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("Specificulture"), "nvarchar(10)").HasMaxLength(10);
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("CreatedBy"), "varchar(50)").HasMaxLength(50).IsUnicode(false);
				RelationalPropertyBuilderExtensions.HasColumnType<DateTime>(b.Property<DateTime>("CreatedDateTime"), "datetime");
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("Description"), "nvarchar(250)").HasMaxLength(250);
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("Image"), "nvarchar(250)").HasMaxLength(250);
				RelationalPropertyBuilderExtensions.HasColumnType<DateTime?>(b.Property<DateTime?>("LastModified"), "datetime");
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("ModifiedBy"), "varchar(50)").HasMaxLength(50).IsUnicode(false);
				RelationalPropertyBuilderExtensions.HasColumnType<int>(b.Property<int>("PageId"), "int");
				RelationalPropertyBuilderExtensions.HasColumnType<int>(b.Property<int>("PostId"), "int");
				RelationalPropertyBuilderExtensions.HasColumnType<int>(b.Property<int>("Priority"), "int");
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("Status").IsRequired(true), "varchar(50)").HasMaxLength(50).IsUnicode(false);
				b.HasKey(new string[] { "Id", "Specificulture" });
				b.HasIndex(new string[] { "PageId", "Specificulture" });
				b.HasIndex(new string[] { "PostId", "Specificulture" });
				RelationalEntityTypeBuilderExtensions.ToTable(b, "mix_page_post");
			});
			modelBuilder.Entity("Mix.Cms.Lib.Models.Cms.MixPortalPage", (EntityTypeBuilder b) => {
				RelationalPropertyBuilderExtensions.HasColumnType<int>(b.Property<int>("Id"), "int");
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("CreatedBy"), "varchar(50)").HasMaxLength(50).IsUnicode(false);
				RelationalPropertyBuilderExtensions.HasColumnType<DateTime>(b.Property<DateTime>("CreatedDateTime"), "datetime");
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("Description"), "nvarchar(450)").HasMaxLength(0x1c2);
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("Icon"), "nvarchar(50)").HasMaxLength(50);
				RelationalPropertyBuilderExtensions.HasColumnType<DateTime?>(b.Property<DateTime?>("LastModified"), "datetime");
				RelationalPropertyBuilderExtensions.HasColumnType<int>(b.Property<int>("Level"), "int");
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("ModifiedBy"), "varchar(50)").HasMaxLength(50).IsUnicode(false);
				RelationalPropertyBuilderExtensions.HasColumnType<int>(b.Property<int>("Priority"), "int");
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("Status").IsRequired(true), "varchar(50)").HasMaxLength(50).IsUnicode(false);
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("TextDefault"), "nvarchar(250)").HasMaxLength(250);
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("TextKeyword"), "nvarchar(250)").HasMaxLength(250);
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("Url"), "nvarchar(250)").HasMaxLength(250);
				b.HasKey(new string[] { "Id" });
				RelationalEntityTypeBuilderExtensions.ToTable(b, "mix_portal_page");
			});
			modelBuilder.Entity("Mix.Cms.Lib.Models.Cms.MixPortalPageNavigation", (EntityTypeBuilder b) => {
				RelationalPropertyBuilderExtensions.HasColumnType<int>(b.Property<int>("Id"), "int");
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("CreatedBy"), "varchar(50)").HasMaxLength(50).IsUnicode(false);
				RelationalPropertyBuilderExtensions.HasColumnType<DateTime>(b.Property<DateTime>("CreatedDateTime"), "datetime");
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("Description"), "nvarchar(250)").HasMaxLength(250);
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("Image"), "nvarchar(250)").HasMaxLength(250);
				RelationalPropertyBuilderExtensions.HasColumnType<DateTime?>(b.Property<DateTime?>("LastModified"), "datetime");
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("ModifiedBy"), "varchar(50)").HasMaxLength(50).IsUnicode(false);
				RelationalPropertyBuilderExtensions.HasColumnType<int>(b.Property<int>("PageId"), "int");
				RelationalPropertyBuilderExtensions.HasColumnType<int>(b.Property<int>("ParentId"), "int");
				RelationalPropertyBuilderExtensions.HasColumnType<int>(b.Property<int>("Priority"), "int");
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("Status").IsRequired(true), "varchar(50)").HasMaxLength(50).IsUnicode(false);
				b.HasKey(new string[] { "Id" });
				b.HasIndex(new string[] { "ParentId" });
				RelationalEntityTypeBuilderExtensions.ToTable(b, "mix_portal_page_navigation");
			});
			modelBuilder.Entity("Mix.Cms.Lib.Models.Cms.MixPortalPageRole", (EntityTypeBuilder b) => {
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("RoleId"), "nvarchar(50)").HasMaxLength(50);
				RelationalPropertyBuilderExtensions.HasColumnType<int>(b.Property<int>("PageId"), "int");
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("CreatedBy"), "varchar(50)").HasMaxLength(50).IsUnicode(false);
				RelationalPropertyBuilderExtensions.HasColumnType<DateTime>(b.Property<DateTime>("CreatedDateTime"), "datetime");
				RelationalPropertyBuilderExtensions.HasColumnType<DateTime?>(b.Property<DateTime?>("LastModified"), "datetime");
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("ModifiedBy"), "varchar(50)").HasMaxLength(50).IsUnicode(false);
				RelationalPropertyBuilderExtensions.HasColumnType<int>(b.Property<int>("Priority"), "int");
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("Status").IsRequired(true), "varchar(50)").HasMaxLength(50).IsUnicode(false);
				b.HasKey(new string[] { "RoleId", "PageId" });
				b.HasIndex(new string[] { "PageId" });
				RelationalEntityTypeBuilderExtensions.ToTable(b, "mix_portal_page_role");
			});
			modelBuilder.Entity("Mix.Cms.Lib.Models.Cms.MixPost", (EntityTypeBuilder b) => {
				RelationalPropertyBuilderExtensions.HasColumnType<int>(b.Property<int>("Id"), "int");
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("Specificulture"), "nvarchar(10)").HasMaxLength(10);
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("Content"), "text");
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("CreatedBy"), "varchar(50)").HasMaxLength(50).IsUnicode(false);
				RelationalPropertyBuilderExtensions.HasColumnType<DateTime>(b.Property<DateTime>("CreatedDateTime"), "datetime");
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("Excerpt"), "text");
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("ExtraFields"), "text");
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("ExtraProperties"), "text");
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("Icon"), "text");
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("Image"), "nvarchar(250)").HasMaxLength(250);
				RelationalPropertyBuilderExtensions.HasColumnType<DateTime?>(b.Property<DateTime?>("LastModified"), "datetime");
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("ModifiedBy"), "varchar(50)").HasMaxLength(50).IsUnicode(false);
				RelationalPropertyBuilderExtensions.HasColumnType<int>(b.Property<int>("Priority"), "int");
				RelationalPropertyBuilderExtensions.HasColumnType<DateTime?>(b.Property<DateTime?>("PublishedDateTime"), "datetime");
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("SeoDescription"), "text");
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("SeoKeywords"), "text");
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("SeoName"), "varchar(500)").HasMaxLength(0x1f4).IsUnicode(false);
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("SeoTitle"), "text");
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("Source"), "nvarchar(250)").HasMaxLength(250);
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("Status").IsRequired(true), "varchar(50)").HasMaxLength(50).IsUnicode(false);
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("Tags"), "text");
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("Template"), "nvarchar(250)").HasMaxLength(250);
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("Thumbnail"), "nvarchar(250)").HasMaxLength(250);
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("Title"), "text");
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("Type"), "varchar(50)").HasMaxLength(50).IsUnicode(false);
				RelationalPropertyBuilderExtensions.HasColumnType<int?>(b.Property<int?>("Views"), "int");
				b.HasKey(new string[] { "Id", "Specificulture" });
				b.HasIndex(new string[] { "Specificulture" });
				RelationalEntityTypeBuilderExtensions.ToTable(b, "mix_post");
			});
			modelBuilder.Entity("Mix.Cms.Lib.Models.Cms.MixPostMedia", (EntityTypeBuilder b) => {
				RelationalPropertyBuilderExtensions.HasColumnType<int>(b.Property<int>("Id"), "int");
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("Specificulture"), "nvarchar(10)").HasMaxLength(10);
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("CreatedBy"), "varchar(50)").HasMaxLength(50).IsUnicode(false);
				RelationalPropertyBuilderExtensions.HasColumnType<DateTime>(b.Property<DateTime>("CreatedDateTime"), "datetime");
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("Description"), "nvarchar(250)").HasMaxLength(250);
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("Image"), "nvarchar(250)").HasMaxLength(250);
				RelationalPropertyBuilderExtensions.HasColumnType<DateTime?>(b.Property<DateTime?>("LastModified"), "datetime");
				RelationalPropertyBuilderExtensions.HasColumnType<int>(b.Property<int>("MediaId"), "int");
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("ModifiedBy"), "varchar(50)").HasMaxLength(50).IsUnicode(false);
				RelationalPropertyBuilderExtensions.HasColumnType<int>(b.Property<int>("Position"), "int");
				RelationalPropertyBuilderExtensions.HasColumnType<int>(b.Property<int>("PostId"), "int");
				RelationalPropertyBuilderExtensions.HasColumnType<int>(b.Property<int>("Priority"), "int");
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("Status").IsRequired(true), "varchar(50)").HasMaxLength(50).IsUnicode(false);
				b.HasKey(new string[] { "Id", "Specificulture" });
				b.HasIndex(new string[] { "MediaId", "Specificulture" });
				b.HasIndex(new string[] { "PostId", "Specificulture" });
				RelationalEntityTypeBuilderExtensions.ToTable(b, "mix_post_media");
			});
			modelBuilder.Entity("Mix.Cms.Lib.Models.Cms.MixPostModule", (EntityTypeBuilder b) => {
				RelationalPropertyBuilderExtensions.HasColumnType<int>(b.Property<int>("Id"), "int");
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("Specificulture"), "nvarchar(10)").HasMaxLength(10);
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("CreatedBy"), "varchar(50)").HasMaxLength(50).IsUnicode(false);
				RelationalPropertyBuilderExtensions.HasColumnType<DateTime>(b.Property<DateTime>("CreatedDateTime"), "datetime");
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("Description"), "nvarchar(250)").HasMaxLength(250);
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("Image"), "nvarchar(250)").HasMaxLength(250);
				RelationalPropertyBuilderExtensions.HasColumnType<DateTime?>(b.Property<DateTime?>("LastModified"), "datetime");
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("ModifiedBy"), "varchar(50)").HasMaxLength(50).IsUnicode(false);
				RelationalPropertyBuilderExtensions.HasColumnType<int>(b.Property<int>("ModuleId"), "int");
				RelationalPropertyBuilderExtensions.HasColumnType<int>(b.Property<int>("Position"), "int");
				RelationalPropertyBuilderExtensions.HasColumnType<int>(b.Property<int>("PostId"), "int");
				RelationalPropertyBuilderExtensions.HasColumnType<int>(b.Property<int>("Priority"), "int");
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("Status").IsRequired(true), "varchar(50)").HasMaxLength(50).IsUnicode(false);
				b.HasKey(new string[] { "Id", "Specificulture" });
				b.HasIndex(new string[] { "ModuleId", "Specificulture" });
				b.HasIndex(new string[] { "PostId", "Specificulture" });
				RelationalEntityTypeBuilderExtensions.ToTable(b, "mix_post_module");
			});
			modelBuilder.Entity("Mix.Cms.Lib.Models.Cms.MixRelatedAttributeData", (EntityTypeBuilder b) => {
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("Id"), "nvarchar(50)").HasMaxLength(50);
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("Specificulture"), "nvarchar(10)").HasMaxLength(10);
				RelationalPropertyBuilderExtensions.HasColumnType<int>(b.Property<int>("AttributeSetId"), "int");
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("AttributeSetName"), "nvarchar(250)").HasMaxLength(250);
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("CreatedBy"), "varchar(50)").HasMaxLength(50).IsUnicode(false);
				RelationalPropertyBuilderExtensions.HasColumnType<DateTime>(b.Property<DateTime>("CreatedDateTime"), "datetime");
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("DataId").IsRequired(true), "nvarchar(50)").HasMaxLength(50);
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("Description"), "nvarchar(450)").HasMaxLength(0x1c2);
				RelationalPropertyBuilderExtensions.HasColumnType<DateTime?>(b.Property<DateTime?>("LastModified"), "datetime");
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("ModifiedBy"), "varchar(50)").HasMaxLength(50).IsUnicode(false);
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("ParentId").IsRequired(true), "nvarchar(50)").HasMaxLength(50);
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("ParentType").IsRequired(true), "varchar(50)").HasMaxLength(50).IsUnicode(false);
				RelationalPropertyBuilderExtensions.HasColumnType<int>(b.Property<int>("Priority"), "int");
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("Status").IsRequired(true), "varchar(50)").HasMaxLength(50).IsUnicode(false);
				RelationalKeyBuilderExtensions.HasName(b.HasKey(new string[] { "Id", "Specificulture" }), "PK_mix_related_attribute_data_1");
				RelationalEntityTypeBuilderExtensions.ToTable(b, "mix_related_attribute_data");
			});
			modelBuilder.Entity("Mix.Cms.Lib.Models.Cms.MixRelatedAttributeSet", (EntityTypeBuilder b) => {
				RelationalPropertyBuilderExtensions.HasColumnType<int>(b.Property<int>("Id"), "int");
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("Specificulture"), "nvarchar(10)").HasMaxLength(10);
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("CreatedBy"), "varchar(50)").HasMaxLength(50).IsUnicode(false);
				RelationalPropertyBuilderExtensions.HasColumnType<DateTime>(b.Property<DateTime>("CreatedDateTime"), "datetime");
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("Description"), "nvarchar(450)").HasMaxLength(0x1c2);
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("Image"), "nvarchar(450)").HasMaxLength(0x1c2);
				RelationalPropertyBuilderExtensions.HasColumnType<DateTime?>(b.Property<DateTime?>("LastModified"), "datetime");
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("ModifiedBy"), "varchar(50)").HasMaxLength(50).IsUnicode(false);
				RelationalPropertyBuilderExtensions.HasColumnType<int>(b.Property<int>("ParentId"), "int");
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("ParentType").IsRequired(true), "varchar(50)").HasMaxLength(50).IsUnicode(false);
				RelationalPropertyBuilderExtensions.HasColumnType<int>(b.Property<int>("Priority"), "int");
				RelationalPropertyBuilderExtensions.HasColumnType<int>(b.Property<int>("SetId"), "int");
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("Status").IsRequired(true), "varchar(50)").HasMaxLength(50).IsUnicode(false);
				b.HasKey(new string[] { "Id", "Specificulture" });
				RelationalEntityTypeBuilderExtensions.ToTable(b, "mix_related_attribute_set");
			});
			modelBuilder.Entity("Mix.Cms.Lib.Models.Cms.MixRelatedData", (EntityTypeBuilder b) => {
				RelationalPropertyBuilderExtensions.HasColumnType<int>(b.Property<int>("Id"), "int");
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("Specificulture"), "nvarchar(10)").HasMaxLength(10);
				RelationalPropertyBuilderExtensions.HasColumnType<int>(b.Property<int>("AttributeSetId"), "int");
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("AttributeSetName"), "nvarchar(250)").HasMaxLength(250);
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("CreatedBy"), "varchar(50)").HasMaxLength(50).IsUnicode(false);
				RelationalPropertyBuilderExtensions.HasColumnType<DateTime>(b.Property<DateTime>("CreatedDateTime"), "datetime");
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("DataId").IsRequired(true), "nvarchar(50)").HasMaxLength(50);
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("Description"), "nvarchar(450)").HasMaxLength(0x1c2);
				RelationalPropertyBuilderExtensions.HasColumnType<DateTime?>(b.Property<DateTime?>("LastModified"), "datetime");
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("ModifiedBy"), "varchar(50)").HasMaxLength(50).IsUnicode(false);
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("ParentId").IsRequired(true), "nvarchar(50)").HasMaxLength(50);
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("ParentType").IsRequired(true), "varchar(50)").HasMaxLength(50).IsUnicode(false);
				RelationalPropertyBuilderExtensions.HasColumnType<int>(b.Property<int>("Priority"), "int");
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("Status").IsRequired(true), "varchar(50)").HasMaxLength(50).IsUnicode(false);
				RelationalPropertyBuilderExtensions.HasColumnType<int>(b.Property<int>("Type"), "int");
				b.HasKey(new string[] { "Id", "Specificulture" });
				RelationalEntityTypeBuilderExtensions.ToTable(b, "mix_related_data");
			});
			modelBuilder.Entity("Mix.Cms.Lib.Models.Cms.MixRelatedPost", (EntityTypeBuilder b) => {
				RelationalPropertyBuilderExtensions.HasColumnType<int>(b.Property<int>("Id"), "int");
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("Specificulture"), "nvarchar(10)").HasMaxLength(10);
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("CreatedBy"), "varchar(50)").HasMaxLength(50).IsUnicode(false);
				RelationalPropertyBuilderExtensions.HasColumnType<DateTime>(b.Property<DateTime>("CreatedDateTime"), "datetime");
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("Description"), "nvarchar(450)").HasMaxLength(0x1c2);
				RelationalPropertyBuilderExtensions.HasColumnType<int>(b.Property<int>("DestinationId"), "int");
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("Image"), "nvarchar(450)").HasMaxLength(0x1c2);
				RelationalPropertyBuilderExtensions.HasColumnType<DateTime?>(b.Property<DateTime?>("LastModified"), "datetime");
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("ModifiedBy"), "varchar(50)").HasMaxLength(50).IsUnicode(false);
				RelationalPropertyBuilderExtensions.HasColumnType<int>(b.Property<int>("Priority"), "int");
				RelationalPropertyBuilderExtensions.HasColumnType<int>(b.Property<int>("SourceId"), "int");
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("Status").IsRequired(true), "varchar(50)").HasMaxLength(50).IsUnicode(false);
				b.HasKey(new string[] { "Id", "Specificulture" });
				b.HasIndex(new string[] { "DestinationId", "Specificulture" });
				b.HasIndex(new string[] { "SourceId", "Specificulture" });
				RelationalEntityTypeBuilderExtensions.ToTable(b, "mix_related_post");
			});
			modelBuilder.Entity("Mix.Cms.Lib.Models.Cms.MixTemplate", (EntityTypeBuilder b) => {
				RelationalPropertyBuilderExtensions.HasColumnType<int>(b.Property<int>("Id"), "int");
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("Content").IsRequired(true), "text");
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("CreatedBy"), "varchar(50)").HasMaxLength(50).IsUnicode(false);
				RelationalPropertyBuilderExtensions.HasColumnType<DateTime>(b.Property<DateTime>("CreatedDateTime"), "datetime");
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("Extension").IsRequired(true), "nvarchar(50)").HasMaxLength(50);
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("FileFolder").IsRequired(true), "nvarchar(250)").HasMaxLength(250);
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("FileName").IsRequired(true), "nvarchar(250)").HasMaxLength(250);
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("FolderType").IsRequired(true), "nvarchar(50)").HasMaxLength(50);
				RelationalPropertyBuilderExtensions.HasColumnType<DateTime?>(b.Property<DateTime?>("LastModified"), "datetime");
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("MobileContent"), "text");
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("ModifiedBy"), "varchar(50)").HasMaxLength(50).IsUnicode(false);
				RelationalPropertyBuilderExtensions.HasColumnType<int>(b.Property<int>("Priority"), "int");
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("Scripts"), "text");
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("SpaContent"), "text");
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("Status").IsRequired(true), "varchar(50)").HasMaxLength(50).IsUnicode(false);
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("Styles"), "text");
				RelationalPropertyBuilderExtensions.HasColumnType<int>(b.Property<int>("ThemeId"), "int");
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("ThemeName").IsRequired(true), "nvarchar(250)").HasMaxLength(250);
				b.HasKey(new string[] { "Id" });
				RelationalIndexBuilderExtensions.HasName(b.HasIndex(new string[] { "ThemeId" }), "IX_mix_template_file_TemplateId");
				RelationalEntityTypeBuilderExtensions.ToTable(b, "mix_template");
			});
			modelBuilder.Entity("Mix.Cms.Lib.Models.Cms.MixTheme", (EntityTypeBuilder b) => {
				RelationalPropertyBuilderExtensions.HasColumnType<int>(b.Property<int>("Id"), "int");
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("CreatedBy"), "varchar(50)").HasMaxLength(50).IsUnicode(false);
				RelationalPropertyBuilderExtensions.HasColumnType<DateTime>(b.Property<DateTime>("CreatedDateTime"), "datetime");
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("Image"), "nvarchar(250)").HasMaxLength(250);
				RelationalPropertyBuilderExtensions.HasColumnType<DateTime?>(b.Property<DateTime?>("LastModified"), "datetime");
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("ModifiedBy"), "varchar(50)").HasMaxLength(50).IsUnicode(false);
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("Name").IsRequired(true), "nvarchar(250)").HasMaxLength(250);
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("PreviewUrl"), "nvarchar(450)").HasMaxLength(0x1c2);
				RelationalPropertyBuilderExtensions.HasColumnType<int>(b.Property<int>("Priority"), "int");
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("Status").IsRequired(true), "varchar(50)").HasMaxLength(50).IsUnicode(false);
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("Thumbnail"), "nvarchar(250)").HasMaxLength(250);
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("Title"), "nvarchar(250)").HasMaxLength(250);
				b.HasKey(new string[] { "Id" });
				RelationalEntityTypeBuilderExtensions.ToTable(b, "mix_theme");
			});
			modelBuilder.Entity("Mix.Cms.Lib.Models.Cms.MixUrlAlias", (EntityTypeBuilder b) => {
				RelationalPropertyBuilderExtensions.HasColumnType<int>(b.Property<int>("Id"), "int");
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("Specificulture"), "nvarchar(10)").HasMaxLength(10);
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("Alias"), "nvarchar(250)").HasMaxLength(250);
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("CreatedBy"), "varchar(50)").HasMaxLength(50).IsUnicode(false);
				RelationalPropertyBuilderExtensions.HasColumnType<DateTime>(b.Property<DateTime>("CreatedDateTime"), "datetime");
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("Description"), "nvarchar(4000)").HasMaxLength(0xfa0);
				RelationalPropertyBuilderExtensions.HasColumnType<DateTime?>(b.Property<DateTime?>("LastModified"), "datetime");
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("ModifiedBy"), "varchar(50)").HasMaxLength(50).IsUnicode(false);
				RelationalPropertyBuilderExtensions.HasColumnType<int>(b.Property<int>("Priority"), "int");
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("SourceId"), "nvarchar(250)").HasMaxLength(250);
				RelationalPropertyBuilderExtensions.HasColumnType<string>(b.Property<string>("Status").IsRequired(true), "varchar(50)").HasMaxLength(50).IsUnicode(false);
				RelationalPropertyBuilderExtensions.HasColumnType<int>(b.Property<int>("Type"), "int");
				b.HasKey(new string[] { "Id", "Specificulture" });
				b.HasIndex(new string[] { "Specificulture" });
				RelationalEntityTypeBuilderExtensions.ToTable(b, "mix_url_alias");
			});
			modelBuilder.Entity("Mix.Cms.Lib.Models.Cms.MixAttributeField", (EntityTypeBuilder b) => {
				RelationalForeignKeyBuilderExtensions.HasConstraintName(b.HasOne("Mix.Cms.Lib.Models.Cms.MixAttributeSet", "AttributeSet").WithMany("MixAttributeFieldAttributeSet").HasForeignKey(new string[] { "AttributeSetId" }), "FK_mix_attribute_field_mix_attribute_set").IsRequired(true);
				RelationalForeignKeyBuilderExtensions.HasConstraintName(b.HasOne("Mix.Cms.Lib.Models.Cms.MixAttributeSet", "Reference").WithMany("MixAttributeFieldReference").HasForeignKey(new string[] { "ReferenceId" }), "FK_mix_attribute_field_mix_attribute_set1");
			});
			modelBuilder.Entity("Mix.Cms.Lib.Models.Cms.MixAttributeSetData", (EntityTypeBuilder b) => RelationalForeignKeyBuilderExtensions.HasConstraintName(b.HasOne("Mix.Cms.Lib.Models.Cms.MixAttributeSet", "AttributeSet").WithMany("MixAttributeSetData").HasForeignKey(new string[] { "AttributeSetId" }), "FK_mix_attribute_set_data_mix_attribute_set").IsRequired(true));
			modelBuilder.Entity("Mix.Cms.Lib.Models.Cms.MixAttributeSetReference", (EntityTypeBuilder b) => RelationalForeignKeyBuilderExtensions.HasConstraintName(b.HasOne("Mix.Cms.Lib.Models.Cms.MixAttributeSet", "AttributeSet").WithMany("MixAttributeSetReference").HasForeignKey(new string[] { "AttributeSetId" }), "FK_mix_attribute_set_reference_mix_attribute_set").IsRequired(true));
			modelBuilder.Entity("Mix.Cms.Lib.Models.Cms.MixConfiguration", (EntityTypeBuilder b) => RelationalForeignKeyBuilderExtensions.HasConstraintName(b.HasOne("Mix.Cms.Lib.Models.Cms.MixCulture", "SpecificultureNavigation").WithMany("MixConfiguration").HasForeignKey(new string[] { "Specificulture" }), "FK_Mix_Configuration_Mix_Culture").HasPrincipalKey(new string[] { "Specificulture" }).OnDelete(3).IsRequired(true));
			modelBuilder.Entity("Mix.Cms.Lib.Models.Cms.MixFile", (EntityTypeBuilder b) => RelationalForeignKeyBuilderExtensions.HasConstraintName(b.HasOne("Mix.Cms.Lib.Models.Cms.MixTheme", "Theme").WithMany("MixFile").HasForeignKey(new string[] { "ThemeId" }), "FK_mix_file_mix_template"));
			modelBuilder.Entity("Mix.Cms.Lib.Models.Cms.MixLanguage", (EntityTypeBuilder b) => RelationalForeignKeyBuilderExtensions.HasConstraintName(b.HasOne("Mix.Cms.Lib.Models.Cms.MixCulture", "SpecificultureNavigation").WithMany("MixLanguage").HasForeignKey(new string[] { "Specificulture" }), "FK_Mix_Language_Mix_Culture").HasPrincipalKey(new string[] { "Specificulture" }).OnDelete(3).IsRequired(true));
			modelBuilder.Entity("Mix.Cms.Lib.Models.Cms.MixModule", (EntityTypeBuilder b) => RelationalForeignKeyBuilderExtensions.HasConstraintName(b.HasOne("Mix.Cms.Lib.Models.Cms.MixCulture", "SpecificultureNavigation").WithMany("MixModule").HasForeignKey(new string[] { "Specificulture" }), "FK_Mix_Module_Mix_Culture").HasPrincipalKey(new string[] { "Specificulture" }).OnDelete(3).IsRequired(true));
			modelBuilder.Entity("Mix.Cms.Lib.Models.Cms.MixModuleData", (EntityTypeBuilder b) => {
				RelationalForeignKeyBuilderExtensions.HasConstraintName(b.HasOne("Mix.Cms.Lib.Models.Cms.MixModule", "MixModule").WithMany("MixModuleData").HasForeignKey(new string[] { "ModuleId", "Specificulture" }), "FK_Mix_Module_Data_Mix_Module").OnDelete(3).IsRequired(true);
				RelationalForeignKeyBuilderExtensions.HasConstraintName(b.HasOne("Mix.Cms.Lib.Models.Cms.MixPage", "MixPage").WithMany("MixModuleData").HasForeignKey(new string[] { "PageId", "Specificulture" }), "FK_mix_module_data_mix_page");
				RelationalForeignKeyBuilderExtensions.HasConstraintName(b.HasOne("Mix.Cms.Lib.Models.Cms.MixPost", "MixPost").WithMany("MixModuleData").HasForeignKey(new string[] { "PostId", "Specificulture" }), "FK_mix_module_data_mix_post");
			});
			modelBuilder.Entity("Mix.Cms.Lib.Models.Cms.MixModulePost", (EntityTypeBuilder b) => {
				RelationalForeignKeyBuilderExtensions.HasConstraintName(b.HasOne("Mix.Cms.Lib.Models.Cms.MixModule", "MixModule").WithMany("MixModulePost").HasForeignKey(new string[] { "ModuleId", "Specificulture" }), "FK_Mix_Module_Post_Mix_Module").IsRequired(true);
				RelationalForeignKeyBuilderExtensions.HasConstraintName(b.HasOne("Mix.Cms.Lib.Models.Cms.MixPost", "MixPost").WithMany("MixModulePost").HasForeignKey(new string[] { "PostId", "Specificulture" }), "FK_Mix_Module_Post_Mix_Post").IsRequired(true);
			});
			modelBuilder.Entity("Mix.Cms.Lib.Models.Cms.MixPage", (EntityTypeBuilder b) => RelationalForeignKeyBuilderExtensions.HasConstraintName(b.HasOne("Mix.Cms.Lib.Models.Cms.MixCulture", "SpecificultureNavigation").WithMany("MixPage").HasForeignKey(new string[] { "Specificulture" }), "FK_Mix_Page_Mix_Culture").HasPrincipalKey(new string[] { "Specificulture" }).IsRequired(true));
			modelBuilder.Entity("Mix.Cms.Lib.Models.Cms.MixPageModule", (EntityTypeBuilder b) => {
				RelationalForeignKeyBuilderExtensions.HasConstraintName(b.HasOne("Mix.Cms.Lib.Models.Cms.MixModule", "MixModule").WithMany("MixPageModule").HasForeignKey(new string[] { "ModuleId", "Specificulture" }), "FK_Mix_Menu_Module_Mix_Module1").OnDelete(3).IsRequired(true);
				RelationalForeignKeyBuilderExtensions.HasConstraintName(b.HasOne("Mix.Cms.Lib.Models.Cms.MixPage", "MixPage").WithMany("MixPageModule").HasForeignKey(new string[] { "PageId", "Specificulture" }), "FK_Mix_Page_Module_Mix_Page").IsRequired(true);
			});
			modelBuilder.Entity("Mix.Cms.Lib.Models.Cms.MixPagePost", (EntityTypeBuilder b) => {
				RelationalForeignKeyBuilderExtensions.HasConstraintName(b.HasOne("Mix.Cms.Lib.Models.Cms.MixPage", "MixPage").WithMany("MixPagePost").HasForeignKey(new string[] { "PageId", "Specificulture" }), "FK_Mix_Page_Post_Mix_Page").IsRequired(true);
				RelationalForeignKeyBuilderExtensions.HasConstraintName(b.HasOne("Mix.Cms.Lib.Models.Cms.MixPost", "MixPost").WithMany("MixPagePost").HasForeignKey(new string[] { "PostId", "Specificulture" }), "FK_Mix_Page_Post_Mix_Post").IsRequired(true);
			});
			modelBuilder.Entity("Mix.Cms.Lib.Models.Cms.MixPortalPageNavigation", (EntityTypeBuilder b) => {
				RelationalForeignKeyBuilderExtensions.HasConstraintName(b.HasOne("Mix.Cms.Lib.Models.Cms.MixPortalPage", "IdNavigation").WithOne("MixPortalPageNavigationIdNavigation").HasForeignKey("Mix.Cms.Lib.Models.Cms.MixPortalPageNavigation", new string[] { "Id" }), "FK_mix_portal_page_navigation_mix_portal_page").IsRequired(true);
				RelationalForeignKeyBuilderExtensions.HasConstraintName(b.HasOne("Mix.Cms.Lib.Models.Cms.MixPortalPage", "Parent").WithMany("MixPortalPageNavigationParent").HasForeignKey(new string[] { "ParentId" }), "FK_mix_portal_page_navigation_mix_portal_page1").IsRequired(true);
			});
			modelBuilder.Entity("Mix.Cms.Lib.Models.Cms.MixPortalPageRole", (EntityTypeBuilder b) => RelationalForeignKeyBuilderExtensions.HasConstraintName(b.HasOne("Mix.Cms.Lib.Models.Cms.MixPortalPage", "Page").WithMany("MixPortalPageRole").HasForeignKey(new string[] { "PageId" }), "FK_mix_portal_page_role_mix_portal_page").OnDelete(3).IsRequired(true));
			modelBuilder.Entity("Mix.Cms.Lib.Models.Cms.MixPost", (EntityTypeBuilder b) => RelationalForeignKeyBuilderExtensions.HasConstraintName(b.HasOne("Mix.Cms.Lib.Models.Cms.MixCulture", "SpecificultureNavigation").WithMany("MixPost").HasForeignKey(new string[] { "Specificulture" }), "FK_Mix_Post_Mix_Culture").HasPrincipalKey(new string[] { "Specificulture" }).IsRequired(true));
			modelBuilder.Entity("Mix.Cms.Lib.Models.Cms.MixPostMedia", (EntityTypeBuilder b) => {
				RelationalForeignKeyBuilderExtensions.HasConstraintName(b.HasOne("Mix.Cms.Lib.Models.Cms.MixMedia", "MixMedia").WithMany("MixPostMedia").HasForeignKey(new string[] { "MediaId", "Specificulture" }), "FK_mix_post_media_mix_media").IsRequired(true);
				RelationalForeignKeyBuilderExtensions.HasConstraintName(b.HasOne("Mix.Cms.Lib.Models.Cms.MixPost", "MixPost").WithMany("MixPostMedia").HasForeignKey(new string[] { "PostId", "Specificulture" }), "FK_mix_post_media_mix_post").IsRequired(true);
			});
			modelBuilder.Entity("Mix.Cms.Lib.Models.Cms.MixPostModule", (EntityTypeBuilder b) => {
				RelationalForeignKeyBuilderExtensions.HasConstraintName(b.HasOne("Mix.Cms.Lib.Models.Cms.MixModule", "MixModule").WithMany("MixPostModule").HasForeignKey(new string[] { "ModuleId", "Specificulture" }), "FK_Mix_Post_Module_Mix_Module1").OnDelete(3).IsRequired(true);
				RelationalForeignKeyBuilderExtensions.HasConstraintName(b.HasOne("Mix.Cms.Lib.Models.Cms.MixPost", "MixPost").WithMany("MixPostModule").HasForeignKey(new string[] { "PostId", "Specificulture" }), "FK_Mix_Post_Module_Mix_Post").IsRequired(true);
			});
			modelBuilder.Entity("Mix.Cms.Lib.Models.Cms.MixRelatedAttributeSet", (EntityTypeBuilder b) => RelationalForeignKeyBuilderExtensions.HasConstraintName(b.HasOne("Mix.Cms.Lib.Models.Cms.MixAttributeSet", "IdNavigation").WithMany("MixRelatedAttributeSet").HasForeignKey(new string[] { "Id" }), "FK_mix_related_attribute_set_mix_attribute_set").IsRequired(true));
			modelBuilder.Entity("Mix.Cms.Lib.Models.Cms.MixRelatedPost", (EntityTypeBuilder b) => {
				RelationalForeignKeyBuilderExtensions.HasConstraintName(b.HasOne("Mix.Cms.Lib.Models.Cms.MixPost", "MixPost").WithMany("MixRelatedPostMixPost").HasForeignKey(new string[] { "DestinationId", "Specificulture" }), "FK_mix_related_post_mix_post1").IsRequired(true);
				RelationalForeignKeyBuilderExtensions.HasConstraintName(b.HasOne("Mix.Cms.Lib.Models.Cms.MixPost", "S").WithMany("MixRelatedPostS").HasForeignKey(new string[] { "SourceId", "Specificulture" }), "FK_mix_related_post_mix_post").IsRequired(true);
			});
			modelBuilder.Entity("Mix.Cms.Lib.Models.Cms.MixTemplate", (EntityTypeBuilder b) => RelationalForeignKeyBuilderExtensions.HasConstraintName(b.HasOne("Mix.Cms.Lib.Models.Cms.MixTheme", "Theme").WithMany("MixTemplate").HasForeignKey(new string[] { "ThemeId" }), "FK_mix_template_mix_theme").IsRequired(true));
			modelBuilder.Entity("Mix.Cms.Lib.Models.Cms.MixUrlAlias", (EntityTypeBuilder b) => RelationalForeignKeyBuilderExtensions.HasConstraintName(b.HasOne("Mix.Cms.Lib.Models.Cms.MixCulture", "SpecificultureNavigation").WithMany("MixUrlAlias").HasForeignKey(new string[] { "Specificulture" }), "FK_Mix_Url_Alias_Mix_Culture").HasPrincipalKey(new string[] { "Specificulture" }).OnDelete(3).IsRequired(true));
		}
	}
}